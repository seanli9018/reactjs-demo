{"version":3,"sources":["custimizedHook/LanguageHook.jsx","components/AppFooter.jsx","store/globalActionTypes.js","components/LangRadio.jsx","store/globalActionCreators.js","components/AppHeader.jsx","components/ReactEcharts.jsx","pages/Dashboard.jsx","pages/UserCenter.jsx","components/button/Button.jsx","components/todo/store/taskActionTypes.js","components/todo/Item.jsx","components/todo/store/taskActionCreators.js","components/todo/List.jsx","components/todo/TodoHeader.jsx","components/todo/TodoFooter.jsx","pages/Todos.jsx","components/input/TextInput.jsx","pages/Register.jsx","custimizedHook/elementPositions.jsx","components/image/LazyImage.jsx","components/makeup/MakeupNav.jsx","utils/stringFilter.js","components/makeup/MakeupItem.jsx","components/utils/VerticalScrollVirtualList.jsx","custimizedHook/useFetchHook.js","components/todo/store/taskReducers.js","languages/lang.js","store/globalReducers.js","store/index.js","auth/http.js","components/makeup/service.js","components/makeup/LipsticksList.jsx","components/makeup/NailPolishList.jsx","components/makeup/MascaraList.jsx","components/makeup/LipLinerList.jsx","components/makeup/FoundationList.jsx","components/makeup/EyeshadowList.jsx","components/makeup/EyelinerList.jsx","components/makeup/EyebrowList.jsx","components/makeup/BronzerList.jsx","components/makeup/BlushList.jsx","pages/Makeups.jsx","components/button/ButtonDark.jsx","pages/MakeupsDetail.jsx","components/AppContent.jsx","App.js","reportWebVitals.js","utils/notification.js","utils/modal.js","auth/auth.js","index.js"],"names":["useLanguagePageText","locale","useState","pageText","setPageText","useEffect","React","$lang","languageLoader","then","langData","default","connect","state","props","Footer","Layout","className","appFooter","CHANGE_LOCALE","OPEN_LOADING","CLOSE_LOADING","globalState","dispatch","dispatchChangeLocale","localValue","action","type","localeValue","Group","value","userLanguage","onChange","e","selectedLocaleValue","target","setLang","moment","Button","withRouter","Header","makeupsExsit","test","history","location","pathname","selectedKeys","mode","Item","icon","HeartOutlined","to","appHeader","UnorderedListOutlined","exact","UserOutlined","search","hash","fromDashboard","link","userId","$auth","email","replace","is_authenticated","activeClassName","onClick","clearUserAuth","logoutMsg","loginLogoutMsg","$notice","success","handleLogOut","ReactEcharts","echarts","GridComponent","LineChart","CanvasRenderer","ToolboxComponent","LegendComponent","PieChart","echartsInstance","echartsDOMElement","option","style","echartObj","getInstanceByDom","init","setOption","dispose","ref","defaultProps","height","width","Dashboard","id","display","flexDirection","xAxis","data","yAxis","series","smooth","legend","top","toolbox","show","feature","mark","dataView","readOnly","restore","saveAsImage","name","radius","center","roseType","itemStyle","borderRadius","usercenterTitle","showBtn","onClickFunction","btnClass","ADD_ALL_TASKS","ADD_ONE_TASK","DEL_ONE_TASK","CHANGE_ONE_FINISHED","IS_ALL_FINISHED","DEL_FINISHED_TASKS","MOVE_TASK","tasks","taskState","dispatchDelOneTask","taskId","delOneTask","dispatchChangeTaskFinished","finishedStatus","changeOneFinished","showBtns","setShowBtns","showUpBtns","setShowUpBtns","showDownBtns","setShowDownBtns","handleShowBtn","flag","index","handleShowDelBtn","undefined","handleUpBtns","length","handleDownBtns","item","itemIndex","handleMoveEvent","onMouseOver","onMouseOut","htmlFor","checked","finished","title","tasksBtns","itemId","finshedStatus","$modal","confirm","console","log","handleItemDelete","dispatchSortItem","diff","moveTask","map","task","dispatchAddOneTask","addOneTask","taskInput","setTaskInput","placeholder","tasksInputPlaceholder","handleInputChange","onKeyDown","keyCode","trim","handleKeyEvent","items","dispatchDelFinishedTasks","dispatchIsAllFinished","isAllFinished","finishedItems","finishedTaskCount","forEach","_calculateFinishedTasks","totalItems","tasksFooter","tasksFooterBtn","Todos","this","dispatchData","status","Component","TextInput","inputTitle","inputType","onBlur","setType","iconStyle","fontSize","position","right","marginTop","boxSizing","color","minWidth","eyeIconDom","EyeInvisibleOutlined","EyeOutlined","password","confirmedPassword","formData","setFormData","errors","setErrors","validateField","errorsObj","JSON","parse","stringify","field","indexOf","re","signUpValidateMsg","regArray","testResult","every","k","signUpTitle","signUpInputTitle","formDataObj","handleEmailChange","handlePasswordChange","handleConfirmedPasswordChange","signUpSubmitBtn","setUserAuth","push","signUpNoticeMsg","error","_getWindowDimensions","window","innerWidth","innerHeight","useElementGetBoundingClientRect","element","listenScroll","elementGetBoundingClientRect","setElementGetBoundingClientRect","handleUpdateEleClientRect","current","eleRect","getBoundingClientRect","left","addEventListener","removeEventListener","useScrollTop","scrollTop","scrolling","scrollStatus","setScrollStatus","preScrollTop","useRef","usePrevious","handleOnScroll","pageYOffset","LazyImage","loaded","setLoaded","setError","src","alt","onErrorSrc","loadingSrc","image","Image","handleLoad","handleError","onload","onerror","join","process","Sider","url","useRouteMatch","onSideBreak","setOnSideBreak","brokenSideNavRef","navElement","defaultSelectedKeys","defaultOpenKeys","makeupsNav","breakpoint","collapsedWidth","onBreakpoint","broken","capString","strArr","str","toUpperCase","MakeupItem","handleClick","makeupItem","image_link","brand","category","description","tag_list","product_colors","fName","fBrand","fCategory","fDescription","fTags","productColors","slice","tagElement","tag","makeupDetailElement","substr","makeupColorElement","backgroundColor","hex_value","colour_name","VerticalScrollVirtualList","list","listLength","itemDimensions","windowDimensions","setWindowDimensions","handleResize","useWindowDimensions","listEleRef","listWrapperRef","elementWidth","eleDistanceToTop","distanceToTop","setDistanceToTop","handleUpdateEleDistanceToTop","useEleDistanceToTop","itemHeight","itemWidth","itemsPerRow","Math","floor","listTotalHeight","ceil","visibleRowsCount","startIndex","startOffset","dataItemStart","dataItemEnd","visibleItems","iElement","iElementLength","i","listWrapperStyle","listStyle","children","useFetchHook","apiCallback","setData","onError","setOnError","fetchTask","useCallback","a","resp","defaultState","APP_LANG","Lang","localStorage","getItem","navigator","language","toLowerCase","setItem","_instance","getInstance","lang","loading","rootReducer","combineReducers","newState","splice","tempTasks","store","createStore","requestCount","showGlobalLoading","hideGlobalLoading","axiosIns","axios","create","baseURL","interceptors","request","use","config","Promise","reject","response","fetchLipStickList","get","fetchNailPolish","fetchMascara","fetchLipLiner","fetchFoundation","fetchEyeshadow","fetchEyeliner","fetchEyebrow","fetchBronzer","fetchBlush","LipsticksList","authNeeded","routeTo","NailPolishList","MascaraList","LipLinerList","FoundationList","EyeshadowList","EyelinerList","EyebrowList","BronzerList","BlushList","Content","path","makeupsTitle","makeupsSubTitle","padding","maxWidth","minHeight","component","ButtonDark","fullWidth","MakeupsDetail","makeupData","match","date","Date","rating","price","defaultValue","disabled","hidden","AppContent","render","Makeups","UserCenter","Register","antIcon","SmileOutlined","spin","document","body","overflowY","spinning","wrapperClassName","indicator","tip","size","zhCN","enUS","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","message","duration","_configNotice","notification","info","warning","Modal","ExclamationCircleOutlined","onOk","onCancel","content","onOK","_configModal","EMAIL","Auth","removeItem","notice","modal","auth","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.09c6d03f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport default function useLanguagePageText(locale) {\r\n  const [pageText, setPageText] = useState({});\r\n\r\n    // get lang data\r\n  useEffect(()=>{\r\n    // after componentDidMount and componentDidUpdate, we need to get langData file and set page text\r\n    React.$lang.languageLoader().then((langData)=>{\r\n      setPageText(langData.default);\r\n    })\r\n  }, [locale])\r\n\r\n  return pageText;\r\n}","import React from 'react';\r\n\r\n// import from redux\r\nimport {connect} from \"react-redux\";\r\n\r\n// import from antd UI\r\nimport {Layout} from 'antd'\r\n\r\n// import custimazied hook, get language data.\r\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\r\n\r\nfunction AppFooter(props) {\r\n  const { Footer } = Layout;\r\n  const { locale } = props\r\n\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  return (\r\n    <>\r\n      <Footer className=\"app-footer\">\r\n        <div className=\"footer-info\">\r\n          {\r\n            !!pageText.appFooter && \r\n            <span><strong>{pageText.appFooter[0]}</strong> seanli9018@gmail.com; <strong>{pageText.appFooter[1] || ''}</strong> 312-825-9982</span>\r\n          }\r\n        </div>\r\n      </Footer>\r\n    </>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.locale\r\n  }\r\n}\r\n\r\n// export component\r\nexport default connect(mapStateToProps, null)(AppFooter);","//1. Change locale\r\nexport const CHANGE_LOCALE = 'change_locale';\r\n//2. Global loading state - open\r\nexport const OPEN_LOADING = 'open_loading';\r\n//3. Global loading state - close\r\nexport const CLOSE_LOADING = 'close_loading';","import React from 'react';\r\n\r\n//import from antd\r\nimport {  Radio } from 'antd';\r\n\r\nimport moment from \"moment\";\r\nimport {connect} from \"react-redux\";\r\nimport { changeLocale } from \"../store/globalActionCreators\";\r\n\r\n\r\nfunction LangRadio(props) {\r\n  const { dispatchChangeLocale } = props;\r\n\r\n  let handleLocale = e => {\r\n    let localeValue = {};\r\n    let selectedLocaleValue = e.target.value;\r\n\r\n    // set store locale state\r\n    dispatchChangeLocale(selectedLocaleValue);\r\n\r\n    // set localStorage APP_LANG\r\n    React.$lang.setLang(selectedLocaleValue);\r\n\r\n    if (!localeValue) {\r\n      moment.locale('en');\r\n    } else {\r\n      moment.locale('zh-cn');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"change-locale\">\r\n        <Radio.Group value={!!React.$lang.userLanguage ? React.$lang.userLanguage : 'en'} onChange={handleLocale}>\r\n          <Radio.Button key=\"en\" value='en'>\r\n            English\r\n          </Radio.Button>\r\n          <Radio.Button key=\"cn\" value='zh-cn'>\r\n            中文\r\n          </Radio.Button>\r\n        </Radio.Group>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.globalState.locale\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatchChangeLocale(localValue){\r\n      const action = changeLocale(localValue);\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\n// export List component\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LangRadio);","// 导入actionTypes\r\nimport {\r\n  CHANGE_LOCALE, \r\n  OPEN_LOADING, \r\n  CLOSE_LOADING\r\n} from \"./globalActionTypes\";\r\n\r\n//1. handle locale\r\nexport const changeLocale = (localeValue) => {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    localeValue\r\n  }\r\n}\r\n\r\n//2. global loading open;\r\nexport const openLoading = () => {\r\n  return {\r\n    type: OPEN_LOADING,\r\n    loading: true\r\n  }\r\n}\r\n\r\n//3. global loading close;\r\nexport const closeLoading = () => {\r\n  return {\r\n    type: CLOSE_LOADING,\r\n    loading: false\r\n  }\r\n}","// import from react\r\nimport React from 'react';\r\n\r\n// import from antd\r\nimport {Layout, Menu} from 'antd'\r\nimport { DashboardOutlined, HomeOutlined, UnorderedListOutlined, UserOutlined, HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import from react-router-dom\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\n// import from redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// import from components\r\nimport LangRadio from \"./LangRadio\";\r\n\r\n// import custimazied hook, get language data.\r\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\r\n\r\nfunction AppHeader(props) {\r\n  const { Header } = Layout;\r\n  const { locale } = props\r\n\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  // handle log out btn click event\r\n  function handleLogOut() {\r\n    // clear user auth\r\n    React.$auth.clearUserAuth();\r\n    // redirect to log in page\r\n    props.history.replace('/');\r\n    // show logout successfully modal\r\n    let logoutMsg = pageText.loginLogoutMsg ? pageText.loginLogoutMsg[1] : \"\";\r\n    React.$notice.success(logoutMsg, '', 6);\r\n  }\r\n\r\n  // test to see if nav selected keys match\r\n  const makeupsReg = /\\/makeups/\r\n  const makeupsExsit = makeupsReg.test(props.history.location.pathname);\r\n  return (\r\n    <>\r\n      <Header \r\n        className=\"app-header\"\r\n      >\r\n        <Menu selectedKeys={[props.history.location.pathname]} mode=\"horizontal\">\r\n          {/*Route Navi*/}\r\n          <Menu.Item key={makeupsExsit ? [props.history.location.pathname] : \"\"} icon={<HeartOutlined />}>\r\n            <NavLink to=\"/makeups\">{!!pageText.appHeader ? pageText.appHeader[4] : \"\"}</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/tasks\" icon={<UnorderedListOutlined />}>\r\n            <NavLink exact to=\"/tasks\">{!!pageText.appHeader ? pageText.appHeader[3] : \"\"}</NavLink>\r\n          </Menu.Item>\r\n          {/*<Menu.Item key=\"/dashboard\" icon={<DashboardOutlined />}>*/}\r\n          {/*  <NavLink exact to=\"/dashboard\">{!!pageText.appHeader ? pageText.appHeader[1] : \"\"}</NavLink>*/}\r\n          {/*</Menu.Item>*/}\r\n          <Menu.Item key=\"/usercenter\" icon={<UserOutlined />}>\r\n            <NavLink exact to={{\r\n              pathname: \"/usercenter\",\r\n              search: \"?name=sean&age=18\",\r\n              hash: \"#hashtag\",\r\n              state: {fromDashboard: true, link: 'google.com', userId: React.$auth.email ? React.$auth.email.replace(/@[\\s\\S]+/, \"\") : \"\"}\r\n            }}>\r\n              {!!pageText.appHeader ? pageText.appHeader[2] : \"\"}\r\n            </NavLink>\r\n          </Menu.Item>\r\n        </Menu>\r\n        <div className=\"header-info\">\r\n          {/*if authenticated, show username, else show signup/login btn*/}\r\n          { React.$auth.is_authenticated ?\r\n            <span className=\"header-signup\">\r\n              <NavLink\r\n                exact\r\n                activeClassName=\"link-text-active\"\r\n                to=\"/usercenter\">\r\n                {React.$auth.email.replace(/@[\\s\\S]+/, '')}\r\n              </NavLink>\r\n              <span className=\"header-logout\" onClick={() => handleLogOut()}>Log out</span>\r\n            </span> :\r\n            <span className=\"header-signup\">\r\n              <NavLink\r\n                exact\r\n                activeClassName=\"link-text-active\"\r\n                to=\"/register\">\r\n                {!!pageText.appHeader ? pageText.appHeader[5] : \"\"}\r\n              </NavLink>\r\n            </span>\r\n          }\r\n          <LangRadio />\r\n        </div>\r\n      </Header>\r\n    </>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.globalState.locale\r\n  }\r\n}\r\n\r\n// export List component\r\nexport default connect(mapStateToProps, null)(withRouter(AppHeader));","// import from react\r\nimport React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import from echarts\r\nimport * as echarts from 'echarts/core';\r\nimport {\r\n  GridComponent,\r\n  ToolboxComponent,\r\n  LegendComponent\r\n} from 'echarts/components';\r\nimport {\r\n  LineChart,\r\n  PieChart\r\n} from 'echarts/charts';\r\nimport {\r\n  CanvasRenderer\r\n} from 'echarts/renderers';\r\n\r\nfunction ReactEcharts(props) {\r\n  echarts.use(\r\n    [GridComponent, LineChart, CanvasRenderer, ToolboxComponent,\r\n      LegendComponent, PieChart]\r\n  );\r\n  const echartsInstance = echarts; //echarts object\r\n  let echartsDOMElement = null; //echarts dom\r\n  let { option, style, className } = props // get props\r\n\r\n  // get real dom on didMount\r\n  useEffect(() => {\r\n    //get dom element instance, if no instance then init one\r\n    let echartObj = echartsInstance.getInstanceByDom(echartsDOMElement) ||\r\n      echartsInstance.init(echartsDOMElement);\r\n\r\n    //set echarts option\r\n    echartObj.setOption(option);\r\n\r\n    // Destory the element on WillUnmount\r\n    return function destroyEchartElement() {\r\n      echartObj.dispose();\r\n    }\r\n  }, [option])\r\n\r\n  return (\r\n    <div\r\n      ref={(e) => {echartsDOMElement = e}}\r\n      style={style}\r\n      className={className}\r\n    >Echarts</div>\r\n  )\r\n}\r\n\r\n// specify propTypes for component\r\nReactEcharts.propTypes = {\r\n  option: PropTypes.object.isRequired,\r\n  style: PropTypes.object,\r\n  className: PropTypes.string\r\n}\r\n\r\nReactEcharts.defaultProps = {\r\n  style: {height: \"300px\", width: \"500px\"},\r\n  className: \"\"\r\n}\r\n\r\nexport default ReactEcharts;","import React, {useEffect} from 'react';\r\n\r\n// import components\r\nimport ReactEcharts from \"../components/ReactEcharts\";\r\n\r\n\r\nfunction Dashboard() {\r\n  let option1 = {\r\n    xAxis: {\r\n      type: 'category',\r\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [{\r\n      data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n      type: 'line',\r\n      smooth: true\r\n    }]\r\n  }\r\n\r\n  let option2 = {\r\n    legend: {\r\n      top: 'bottom'\r\n    },\r\n    toolbox: {\r\n      show: true,\r\n      feature: {\r\n        mark: {show: true},\r\n        dataView: {show: true, readOnly: false},\r\n        restore: {show: true},\r\n        saveAsImage: {show: true}\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Pattern',\r\n        type: 'pie',\r\n        radius: [50, 100],\r\n        center: ['50%', '50%'],\r\n        roseType: 'area',\r\n        itemStyle: {\r\n          borderRadius: 8\r\n        },\r\n        data: [\r\n          {value: 40, name: 'rose 1'},\r\n          {value: 38, name: 'rose 2'},\r\n          {value: 32, name: 'rose 3'},\r\n          {value: 30, name: 'rose 4'},\r\n          {value: 28, name: 'rose 5'},\r\n          {value: 26, name: 'rose 6'},\r\n          {value: 22, name: 'rose 7'},\r\n          {value: 18, name: 'rose 8'}\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n  return (\r\n    <div id=\"main-container\" style={{display: 'flex', flexDirection: 'row'}}>\r\n      <ReactEcharts option={option1} />\r\n      <ReactEcharts option={option2} style={{\"width\": \"500px\", \"height\": \"350px\"}}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\n// import custimazied hook, get language data.\r\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\r\n\r\nfunction UserCenter(props) {\r\n  //const query = new URLSearchParams(props.location.search);\r\n  //const userId = props.location.state ? props.location.state.userId : '';\r\n\r\n  const { locale } = props\r\n\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  return (\r\n    <div>\r\n      <h1>{!!pageText.usercenterTitle && pageText.usercenterTitle[0]}</h1>\r\n      {\r\n        !!React.$auth.is_authenticated &&\r\n        <span>{!!pageText.usercenterTitle && pageText.usercenterTitle[1] + React.$auth.email.replace(/@[\\s\\S]+/, \"\")}</span>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.locale\r\n  }\r\n}\r\n\r\n// export user center component\r\nexport default connect(mapStateToProps, null)(UserCenter);","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Button(props) {\r\n  // get props\r\n  const { showBtn, value, onClickFunction, btnClass }= props;\r\n\r\n  // render virtual element\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"button\"\r\n        className={\"btn \" + (btnClass ? btnClass : \"\")}\r\n        value={value}\r\n        style={{display: showBtn ? \"block\" : \"none\"}}\r\n        onClick={() => onClickFunction()}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\n// specify Button component prop types\r\nButton.propTypes = {\r\n  showBtn: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  btnClass: PropTypes.string,\r\n  onClickFunction: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Button;","//1.添加所有的已经存在的任务\r\nexport const ADD_ALL_TASKS = 'add_all_tasks';\r\n//2.添加一条任务\r\nexport const ADD_ONE_TASK = 'add_one_task';\r\n//3.删除一条任务\r\nexport const DEL_ONE_TASK = 'del_one_task';\r\n//4.修改一条任务的完成状态\r\nexport const CHANGE_ONE_FINISHED = 'change_one_finished';\r\n//5.修改所有任务的完成状态（全选或全不选）\r\nexport const IS_ALL_FINISHED = 'is_all_finished';\r\n//6.清除所有已完成的任务\r\nexport const DEL_FINISHED_TASKS = 'del_finished_tasks';\r\n//7.move task item up and down\r\nexport const MOVE_TASK = 'move_task';","// React imports\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport useLanguagePageText from \"../../custimizedHook/LanguageHook\";\r\nimport Button from '../button/Button';\r\n// react-redux imports\r\nimport { connect } from 'react-redux';\r\nimport {changeOneFinished, delOneTask} from \"../todo/store/taskActionCreators\";;\r\n\r\n// components imports\r\n\r\nfunction Item(props) {\r\n  const [showBtns, setShowBtns] = useState(false);\r\n  const [showUpBtns, setShowUpBtns] = useState(false);\r\n  const [showDownBtns, setShowDownBtns] = useState(false);\r\n  const { locale } = props;\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  //flag is a boolean, flag = onMouseOver ? true : false\r\n  function handleShowDelBtn(flag) {\r\n    setShowBtns(flag);\r\n  }\r\n\r\n  //if index !== 0, then show up btn\r\n  function handleUpBtns(index) {\r\n    if(index !== 0 ){\r\n      setShowUpBtns(true);\r\n    }else{\r\n      setShowUpBtns(false);\r\n    }\r\n  }\r\n\r\n  //if index !== last index, then show down btn\r\n  function handleDownBtns(index) {\r\n    if(index !== tasks.length-1){\r\n      setShowDownBtns(true);\r\n    }else{\r\n      setShowDownBtns(false);\r\n    }\r\n  }\r\n \r\n\r\n  function handleShowBtn(flag, index){\r\n    // Mouse hover ? show : hide\r\n    handleShowDelBtn(flag);\r\n    \r\n    // control Up btn and down btn show/hide\r\n    if(index !== undefined){\r\n      handleUpBtns(index);\r\n      handleDownBtns(index);\r\n    }\r\n  }\r\n\r\n  // finished ? dispatch delete task : prompt confirm modal\r\n  function handleItemDelete(itemId, finshedStatus){\r\n    const { dispatchDelOneTask } = props;\r\n    if(finshedStatus){\r\n      dispatchDelOneTask(itemId);\r\n    }else{\r\n      // prompt Confirm modal\r\n      React.$modal.confirm(()=>{ // Ok clicked\r\n        dispatchDelOneTask(itemId);\r\n      }, ()=>{ // Cancel clicked\r\n        console.log(\"Clicked Cancel\");\r\n      }, \"Do you really want to delete unfinished task?\")\r\n    }\r\n  }\r\n\r\n  const { item, itemIndex, dispatchChangeTaskFinished, handleMoveEvent, tasks } = props;\r\n\r\n  return (\r\n    <li className=\"task-item\"\r\n        onMouseOver={() => handleShowBtn(true, itemIndex)}\r\n        onMouseOut={() => handleShowBtn(false)}\r\n    >\r\n      <label htmlFor={\"item-check-box\"+item.id}>\r\n        <input\r\n          className=\"item-check-box\"\r\n          type=\"checkbox\"\r\n          name=\"item-check-box\"\r\n          id={\"item-check-box\"+item.id}\r\n          checked={item.finished}\r\n          onChange={() => dispatchChangeTaskFinished(item.id, !item.finished)}/>\r\n        <span>{item.title}</span>\r\n      </label>\r\n      <div className=\"button-group\">\r\n        <Button\r\n          value={!!pageText.tasksBtns?pageText.tasksBtns[0]:\"\"}\r\n          showBtn={showBtns && showUpBtns}\r\n          onClickFunction={() => handleMoveEvent(itemIndex, -1)}\r\n        />\r\n        <Button\r\n          value={!!pageText.tasksBtns?pageText.tasksBtns[1]:\"\"}\r\n          showBtn={showBtns && showDownBtns}\r\n          onClickFunction={() => handleMoveEvent(itemIndex, 1)}\r\n        />\r\n        <Button\r\n          value={!!pageText.tasksBtns?pageText.tasksBtns[2]:\"\"}\r\n          showBtn={showBtns}\r\n          btnClass=\"delete-btn\"\r\n          onClickFunction={() => handleItemDelete(item.id, item.finished)}\r\n        />\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\nItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  handleMoveEvent: PropTypes.func.isRequired,\r\n  itemIndex: PropTypes.number.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.taskState.tasks,\r\n    locale: state.globalState.locale\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatchDelOneTask(taskId) {\r\n      // get action object ready\r\n      const action = delOneTask(taskId);\r\n      dispatch(action);\r\n    },\r\n    dispatchChangeTaskFinished(taskId, finishedStatus) {\r\n      // get action object ready\r\n      const action = changeOneFinished(taskId, finishedStatus);\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\n// export Item component\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","// 导入actionTypes\r\nimport {\r\n  ADD_ALL_TASKS,\r\n  ADD_ONE_TASK,\r\n  DEL_ONE_TASK,\r\n  CHANGE_ONE_FINISHED,\r\n  IS_ALL_FINISHED,\r\n  DEL_FINISHED_TASKS,\r\n  MOVE_TASK,\r\n} from \"./taskActionTypes\";\r\n\r\n//1.添加所有的已经存在的任务\r\nexport const addAllTasks = (tasks)=>{\r\n  return {\r\n    type: ADD_ALL_TASKS,\r\n    tasks\r\n  }\r\n}\r\n//2.添加一条任务\r\nexport const addOneTask = (task)=>{\r\n  return {\r\n    type: ADD_ONE_TASK,\r\n    task\r\n  }\r\n}\r\n//3.删除一条任务\r\nexport const delOneTask = (taskId)=>{\r\n  return {\r\n    type: DEL_ONE_TASK,\r\n    taskId\r\n  }\r\n}\r\n//4.修改一条任务的完成状态\r\nexport const changeOneFinished = (taskId, finishedStatus)=>{\r\n  return {\r\n    type: CHANGE_ONE_FINISHED,\r\n    taskId,\r\n    finishedStatus\r\n  }\r\n}\r\n//5.修改所有任务的完成状态（全选或全部选）\r\nexport const isAllFinished = (flag)=>{\r\n  return {\r\n    type: IS_ALL_FINISHED,\r\n    flag\r\n  }\r\n}\r\n//6.清除所有已完成的任务\r\nexport const delFinishedTasks = ()=>{\r\n  return {\r\n    type: DEL_FINISHED_TASKS,\r\n  }\r\n}\r\n\r\n//7. move task item up and down\r\nexport const moveTask = (index, diff) => {\r\n  return{\r\n    type: MOVE_TASK,\r\n    index,\r\n    diff\r\n  }\r\n}","import React from 'react';\r\n\r\n// import components\r\nimport Item from './Item';\r\n// react-redux imports\r\nimport { connect } from 'react-redux';\r\nimport { moveTask } from \"../todo/store/taskActionCreators\";\r\n\r\n// List component\r\nfunction List(props) {\r\n  // get tasks from props;\r\n  const { tasks, dispatchSortItem } = props;\r\n  return (\r\n    <ul className=\"task-list\">\r\n        {tasks.map((task, index) => (\r\n          <Item item={task} itemIndex={index} key={task.id} handleMoveEvent={(index, diff) => dispatchSortItem(index, diff)}/>\r\n        ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.taskState.tasks\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatchSortItem(index, diff){\r\n      const action = moveTask(index, diff);\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\n// export List component\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import React, {useState} from 'react';\r\nimport useLanguagePageText from \"../../custimizedHook/LanguageHook\";\r\n//import react-redux\r\nimport { connect } from 'react-redux';\r\nimport { addOneTask } from \"../todo/store/taskActionCreators\";;\r\n\r\nfunction TodoHeader(props) {\r\n  const [taskInput, setTaskInput] = useState('');\r\n  const { locale } = props;\r\n\r\n  //get lang data, passing \"locale\" to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  function handleInputChange(e) {\r\n    setTaskInput(e.target.value);\r\n  }\r\n\r\n  // handle Enter key down event\r\n  function handleKeyEvent(e) {\r\n    // 0. initial and get all tasks data\r\n    const { tasks } = props;\r\n\r\n    // 1. handle key down event; dispatch input data to store state\r\n    if(e.keyCode === 13 && !! taskInput) {\r\n      // calculate last task's id based on store state length\r\n      const lastItemId = tasks.length === 0 ? 1 : tasks[tasks.length - 1].id\r\n\r\n      // organize the newly created task object\r\n      const item = {\r\n        id: lastItemId + 1,\r\n        title: taskInput.trim(),\r\n        finished: false\r\n      }\r\n\r\n      // dispatch new tasks and set store state\r\n      const { dispatchAddOneTask } = props;\r\n      dispatchAddOneTask(item);\r\n\r\n      // clear header input, after successfully add input value\r\n      setTaskInput('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"tasks-header\">\r\n      <input className=\"task-input\"\r\n             type=\"text\"\r\n             placeholder={pageText.tasksInputPlaceholder}\r\n             value={taskInput}\r\n             onChange={(e) => handleInputChange(e)}\r\n             onKeyDown={(e) => handleKeyEvent(e)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n  // return newly matched store state to component props\r\n  return {\r\n    tasks: state.taskState.tasks,\r\n    locale: state.globalState.locale\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  // return newly matched store dispatch to component props\r\n  return {\r\n    dispatchAddOneTask(task) {\r\n      // get action object\r\n      const action = addOneTask(task);\r\n      // dispatch to reducer to update store state\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHeader)","import React from 'react';\r\nimport useLanguagePageText from \"../../custimizedHook/LanguageHook\";\r\n\r\n// import component\r\nimport Button from '../button/Button';\r\n// react-redux imports\r\nimport { connect } from 'react-redux';\r\nimport {isAllFinished, delFinishedTasks} from \"../todo/store/taskActionCreators\";;\r\n\r\n\r\nfunction TodoFooter (props) {\r\n  const { locale } = props;\r\n  \r\n  //get lang data, passing \"locale\" to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  // calculate the count of finished tasks\r\n  function _calculateFinishedTasks(tasks) {\r\n    let finishedTaskCount = 0;\r\n\r\n    tasks.forEach((task) => {\r\n      if (task.finished === true) {\r\n        finishedTaskCount += 1;\r\n      }\r\n    })\r\n    return finishedTaskCount\r\n  }\r\n\r\n  const {items, dispatchIsAllFinished, dispatchDelFinishedTasks} = props;\r\n  const finishedItems = _calculateFinishedTasks(items);\r\n  const totalItems = items.length;\r\n\r\n  return (\r\n    <div className=\"tasks-footer\">\r\n      <div className=\"tasks-footer-info\">\r\n        <label htmlFor=\"footer-checkbox\"></label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"footer-checkbox\"\r\n          checked={finishedItems === totalItems && totalItems > 0}\r\n          onChange={() => dispatchIsAllFinished(finishedItems !== totalItems)} // if it is not all-selected, then flag === true\r\n        />\r\n        {\r\n          !!pageText.tasksFooter && //if pageText.tasksFooter is Not undefined, then we render, otherwise it will thorw a error\r\n          <span className=\"task-info\">\r\n            {pageText.tasksFooter[0]} {finishedItems} {finishedItems===1?pageText.tasksFooter[1]:pageText.tasksFooter[2]} / {finishedItems===1?pageText.tasksFooter[3]:pageText.tasksFooter[4]} {totalItems}\r\n          </span>\r\n        }\r\n      </div>\r\n      {/* <input type=\"button\" className=\"btn\" value={!!pageText && pageText.tasksFooterBtn} onClick={() => dispatchDelFinishedTasks()} /> */}\r\n      <Button showBtn={true} value={pageText.tasksFooterBtn || ''} onClickFunction={() => dispatchDelFinishedTasks()}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props.\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.taskState.tasks,\r\n    locale: state.globalState.locale\r\n  }\r\n}\r\n\r\n// get dispatch function to set or change the redux state.\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatchDelFinishedTasks() {\r\n      // get action object ready\r\n      const action = delFinishedTasks();\r\n      dispatch(action);\r\n    },\r\n    dispatchIsAllFinished(flag) {\r\n      // get action object ready\r\n      const action = isAllFinished(flag);\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\n// export Item component\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoFooter);","import React from 'react';\r\n\r\n// Import components\r\nimport List from '../components/todo/List';\r\nimport Header from '../components/todo/TodoHeader';\r\nimport Footer from '../components/todo/TodoFooter';\r\nimport '../index.scss';\r\n\r\n// Import redux and react-redux\r\nimport { connect } from 'react-redux';\r\nimport {addAllTasks} from '../components/todo/store/taskActionCreators';\r\n\r\nclass Todos extends React.Component {\r\n  // Did Mount, get data\r\n  componentDidMount() {\r\n    const data = {\r\n      status: 200,\r\n      tasks: [\r\n        {id: 1, title: \"Learn react for 2 hours\", finished: false},\r\n        {id: 2, title: \"Learn node for 2 hours\", finished: true},\r\n        {id: 3, title: \"Learn vue js for 2 hours\", finished: false},\r\n        {id: 4, title: \"Play xbox one for 1 hour\", finished: false}\r\n      ]\r\n    }\r\n\r\n    //dispatch data to store\r\n    this.props.dispatchData(data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='tasks-wrapper'>\r\n        <div className='tasks-container'>\r\n          {/*Header Part - Task Input Box*/}\r\n          <Header />\r\n\r\n          {/*List Part - Task List*/}\r\n          <List />\r\n          {/*Below also works in the create-react-app, you don't have to use arrow func or bind this*/}\r\n          {/*<List tasksArr={tasks} handleCheckBoxChange={this.handleTasksFinish}/>*/}\r\n\r\n          {/*Footer Part - Task Control and Delete Btn*/}\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // return newly matched store dispatch to component props\r\n    dispatchData(data){\r\n      // get action\r\n      let action = addAllTasks(data.tasks);\r\n      // dispatch action to reducer to save data as new state\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\n// export default App;\r\nexport default connect(null, mapDispatchToProps)(Todos);\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n//import from antd icon\r\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons'\r\n\r\n\r\nfunction TextInput(props) {\r\n  // get props\r\n  const {inputTitle, inputType, className, value, onChange, onBlur} = props;\r\n\r\n  // store initial props.inputType, the state input type can be set to \"text\"\r\n  const [type, setType] = useState(props.inputType)\r\n\r\n  // icon style object ready to use\r\n  const iconStyle = {\r\n    fontSize: \"14px\",\r\n    position: \"absolute\",\r\n    right: \"0\",\r\n    height: \"30px\",\r\n    marginTop: \"8px\",\r\n    boxSizing: \"border-box\",\r\n    color: \"#ccc\",\r\n    minWidth: \"30px\"\r\n  }\r\n\r\n  // handle eye icon onClick event\r\n  function handleEyeSwitch(){\r\n    if(type === \"password\") {\r\n      setType(\"text\") // if current type === \"password\", then we switch it to \"text\"\r\n    } else {\r\n      setType(\"password\")\r\n    }\r\n  }\r\n\r\n  // prepare eyeIconDom, dynamic render based on input type\r\n  // if input type === password, we render eye invisible icon dom, else we render eye icon dom\r\n  const eyeIconDom = (\r\n    <a onClick={()=>{handleEyeSwitch()}}>\r\n      {type === \"password\" ? <EyeInvisibleOutlined style={iconStyle}/>: <EyeOutlined style={iconStyle} />}\r\n    </a>\r\n  )\r\n\r\n  // render\r\n  return (\r\n    <>\r\n      <div style={{position: \"relative\", marginTop: \"15px\"}}>\r\n        <label htmlFor={inputTitle}>{inputTitle}</label>\r\n        <input\r\n          type={type}\r\n          className={\"text-input \" + (className ? className: \"\")}\r\n          id={inputTitle}\r\n          value={value}\r\n          style={{width: \"100%\"}}\r\n          onChange={(e) => onChange(e)}\r\n          onBlur={(e) => onBlur(e)}\r\n        />\r\n        {/*If props.inputType is password, we render this icon, if the type is text, we do not render any icon*/}\r\n        {inputType===\"password\" ? eyeIconDom : null}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// specify Button component prop types\r\nTextInput.propTypes = {\r\n  inputTitle: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onBlur: PropTypes.func,\r\n  inputType: PropTypes.string,\r\n  className: PropTypes.string\r\n}\r\n\r\nTextInput.defaultProps = {\r\n  inputType: \"text\"\r\n}\r\n\r\nexport default TextInput;","import React, { useState } from 'react';\r\n\r\n// import redux\r\nimport {connect} from 'react-redux';\r\n\r\n// import component\r\nimport Button from '../components/button/Button';\r\nimport TextInput from '../components/input/TextInput';\r\n\r\n// import custimazied hook, get language data.\r\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\r\n\r\n\r\nfunction Register(props) {\r\n  // for form data\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmedPassword: \"\"\r\n  })\r\n\r\n  // for form fields validations.\r\n  const [errors, setErrors] = useState({});\r\n\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const { locale } = props;\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  // handle email input change function\r\n  function handleEmailChange(e) {\r\n    // deep copy current state data\r\n    let formDataObj = JSON.parse(JSON.stringify(formData));\r\n    // change copied data\r\n    formDataObj.email = e.target.value;\r\n    // setState the changed copy data to state\r\n    setFormData(formDataObj);\r\n  }\r\n\r\n  // handle password input change function\r\n  function handlePasswordChange(e) {\r\n    // deep copy current state data\r\n    let formDataObj = JSON.parse(JSON.stringify(formData));\r\n    // change copied data\r\n    formDataObj.password = e.target.value;\r\n    // setState the changed copy data to state\r\n    setFormData(formDataObj);\r\n  }\r\n\r\n  // handle email input change function\r\n  function handleConfirmedPasswordChange(e) {\r\n    // deep copy current state data\r\n    let formDataObj = JSON.parse(JSON.stringify(formData));\r\n    // change copied data\r\n    formDataObj.confirmedPassword = e.target.value;\r\n    // setState the changed copy data to state\r\n    setFormData(formDataObj);\r\n  }\r\n\r\n  //validate field\r\n  function validateField(...field) {\r\n    // deep copy errors state\r\n    let errorsObj = JSON.parse(JSON.stringify(errors));\r\n\r\n    // email field validate\r\n    if(field.length === 0 || field.indexOf('email') >= 0){\r\n      let re = /^\\w+[\\w-]+@\\w+[\\w-]+(\\.[-\\w]+)+$/;\r\n      if(!formData.email) { // if no email input\r\n        errorsObj.email = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[0] : '';\r\n      }else if (!re.test(formData.email)){ // if there is email and NOT pass the reg test\r\n        errorsObj.email = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[1] : '';\r\n      }else { //if there is email input and pass the reg test\r\n        errorsObj.email = \"\";\r\n      }\r\n    }\r\n\r\n    // password field validate\r\n    if(field.length === 0 || field.indexOf('password') >= 0){\r\n      // password has to be 6-15 in length, no Space\r\n      // password needs to include at least one letter, capital letter, number, and special character.\r\n      let regArray = [/^\\S{6,15}$/, /[A-Z]/, /[a-z]/, /[0-9]/, /[!@#$%^&*)(_\\-=?/<>.,+|~`]/];\r\n      let testResult = regArray.every(e => e.test(formData.password));\r\n      if(!formData.password) { // if no password input\r\n        errorsObj.password = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[2] : '';\r\n      }else if(!testResult){ // if the password NOT pass the reg test.\r\n        errorsObj.password = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[3] : '';\r\n      }else{ //if there is email input\r\n        errorsObj.password = \"\";\r\n      }\r\n    }\r\n\r\n    // confirmed password field validate\r\n    if(field.length === 0 || field.indexOf('confirmedPassword') >= 0){\r\n      if(!formData.confirmedPassword) { // if no confirm password input\r\n        errorsObj.confirmedPassword = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[4] : '';\r\n      } else { //if confirm password looks good\r\n        errorsObj.confirmedPassword = \"\";\r\n      }\r\n    }\r\n\r\n    //matching password and confirm password\r\n    if(field.length === 0 || field.indexOf('matchPassword') >= 0) {\r\n      if (formData.confirmedPassword !== formData.password) { // if not matching\r\n        errorsObj.confirmedPassword = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[5] : '';\r\n      } else { //if confirm password looks good\r\n        errorsObj.confirmedPassword = \"\";\r\n      }\r\n    }\r\n\r\n    // set error state\r\n    setErrors(errorsObj);\r\n\r\n    // once click submit btn, validate errorsObj.\r\n    for (let k in errorsObj) {\r\n      if(!!errorsObj[k]){\r\n        return false; // if there is item in errorsObj: Not pass\r\n      }\r\n    }\r\n    return true; // if there is NO item in errorObj: Passed;\r\n  }\r\n\r\n  // handle form submit\r\n  function onSubmit() {\r\n    // run validate func, it validates all fields when no parameters passing in;\r\n    const validateResult = validateField();\r\n\r\n    // do something once passed or NOT passed.\r\n    if(validateResult){\r\n      React.$auth.setUserAuth(formData.email); // set auth;\r\n      props.history.push('/') // redirect to home page;\r\n      React.$notice.success(pageText.signUpNoticeMsg[0],\r\n        pageText.signUpNoticeMsg[1], 6)\r\n    }else{\r\n      React.$notice.error(pageText.signUpNoticeMsg[2],\r\n        pageText.signUpNoticeMsg[3], 6)\r\n    }\r\n  }\r\n\r\n  // render virtual element\r\n  return (\r\n    <div className=\"register-wrapper\">\r\n      <div className=\"register-container\">\r\n        <div>\r\n          <h3>{pageText.signUpTitle || \"\"}</h3>\r\n        </div>\r\n        <form className=\"general-form\">\r\n          <TextInput\r\n            inputTitle={pageText.signUpInputTitle ? pageText.signUpInputTitle[0] : \"\"}\r\n            value={formData.email}\r\n            onChange={(e) => handleEmailChange(e)}\r\n            onBlur={() => validateField(\"email\")}\r\n          />\r\n          <span className=\"input-error\">{errors.email || \"\"}</span>\r\n          <TextInput\r\n            inputTitle={pageText.signUpInputTitle ? pageText.signUpInputTitle[1] : \"\"}\r\n            value={formData.password}\r\n            inputType=\"password\"\r\n            onChange={(e) => handlePasswordChange(e)}\r\n            onBlur={() => validateField(\"password\", \"matchPassword\")}\r\n          />\r\n          <span className=\"input-error\">{errors.password || \"\"}</span>\r\n          <TextInput\r\n            inputTitle={pageText.signUpInputTitle ? pageText.signUpInputTitle[2] : \"\"}\r\n            value={formData.confirmedPassword}\r\n            inputType=\"password\"\r\n            onChange={(e) => handleConfirmedPasswordChange(e)}\r\n            onBlur={() => validateField(\"confirmedPassword\", \"matchPassword\")}\r\n          />\r\n          <span className=\"input-error\">{errors.confirmedPassword || \"\"}</span>\r\n          <Button showBtn={true} btnClass=\"sign-up-btn\" value={pageText.signUpSubmitBtn || \"\"} onClickFunction={() => onSubmit()}/>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.globalState.locale\r\n  }\r\n}\r\n\r\n// export component\r\nexport default connect(mapStateToProps, null)(Register);","import { useState, useEffect, useRef, useCallback } from 'react';\r\n\r\n// hook for obtaining hook's previous state\r\nexport function usePrevious(value) {\r\n\tconst ref = useRef();\r\n\tuseEffect(() => {\r\n\t\tref.current = value;\r\n\t},[value]);\r\n\treturn ref.current;\r\n}\r\n\r\n// internal function for getting visible screen/windows width and height.\r\nfunction _getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\n// hook for getting windows dimensions (width and height)\r\nexport function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(_getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(_getWindowDimensions());\r\n    }\r\n    // add event listener onResize to window. everytime, after resizing, we re-triger handleResize func to re-setState.\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\n// hook for getting element width (Will work on the element height later)\r\nexport function useElementGetBoundingClientRect(element, listenScroll=false) {\r\n  const [ elementGetBoundingClientRect, setElementGetBoundingClientRect ] = useState({});\r\n\r\n  // get list element width\r\n  useEffect(() => {\r\n    // set state after first time mounted\r\n    const handleUpdateEleClientRect = () => {\r\n      if(element.current) {\r\n        const eleRect = element.current.getBoundingClientRect();\r\n        setElementGetBoundingClientRect({\r\n          width: eleRect.width,\r\n          top: eleRect.top,\r\n          left: eleRect.left,\r\n        });\r\n      }\r\n    }\r\n    window.addEventListener('resize', handleUpdateEleClientRect);\r\n    handleUpdateEleClientRect();\r\n    if(listenScroll) {\r\n      window.addEventListener('scroll', handleUpdateEleClientRect);\r\n    }\r\n    // on Component Will Unmount\r\n    return () => window.removeEventListener('resize', handleUpdateEleClientRect);\r\n  }, [element.current])\r\n\r\n  return elementGetBoundingClientRect;\r\n}\r\n\r\n// hook for getting element position scroll status (scrollTop and scrolling)\r\nexport function useScrollTop() {\r\n  const [ scrollStatus, setScrollStatus ] = useState({scrollTop: 0, scrolling: false});\r\n\tconst preScrollTop = usePrevious(scrollStatus.scrollTop);\r\n\r\n  useEffect(() => {\r\n    const handleOnScroll = () => {\r\n      setScrollStatus({\r\n        scrollTop: window.pageYOffset, // distance between visible screen's top to page top\r\n        scrolling: window.pageYOffset > preScrollTop\r\n      });\r\n    };\r\n    handleOnScroll();\r\n    window.addEventListener('scroll', handleOnScroll);\r\n\t\treturn () => window.removeEventListener('scroll', handleOnScroll);\r\n  }, [])\r\n\r\n\treturn scrollStatus;\r\n}\r\n\r\n// hook for getting element top to body top\r\nexport function useEleDistanceToTop (element) {\r\n  const [distanceToTop, setDistanceToTop] = useState(0);\r\n\r\n  const handleUpdateEleDistanceToTop = () => {\r\n    let eleDistanceToTop = element.current ? (window.pageYOffset + element.current.getBoundingClientRect().top) : 0;\r\n    setDistanceToTop(eleDistanceToTop);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleUpdateEleDistanceToTop();\r\n    window.addEventListener('resize', handleUpdateEleDistanceToTop);\r\n    window.addEventListener('scroll', handleUpdateEleDistanceToTop);\r\n    // on Component Will Unmount\r\n    return () => {\r\n      window.removeEventListener('resize', handleUpdateEleDistanceToTop)\r\n      window.removeEventListener('scroll', handleUpdateEleDistanceToTop)\r\n    };\r\n  }, []);\r\n\r\n  return distanceToTop;\r\n}","//import react\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n//import props limitation\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction LazyImage(props) {\r\n  // init state: image loading status\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  //prepare props\r\n  const { src, alt, className, onErrorSrc, loadingSrc } = props;\r\n\r\n  // load image once DOM mounted\r\n  useEffect(() => {\r\n    const image = new Image();\r\n\r\n    // handle load and error;\r\n    const handleLoad = () => {\r\n      setLoaded(true);\r\n    }\r\n    const handleError = () => {\r\n      setError(true);\r\n    }\r\n\r\n    image.onload = handleLoad;\r\n    image.onerror = handleError;\r\n\r\n    // assign the src from props to image;\r\n    image.src = src;\r\n\r\n    return ()=>{\r\n      image.removeEventListener('load', handleLoad);\r\n      image.removeEventListener('error', handleError);\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <img\r\n      className={className}\r\n      src={error ? onErrorSrc : !loaded ? loadingSrc : src}\r\n      alt={alt.join(\" \")}\r\n    />\r\n  )\r\n\r\n}\r\n\r\n// default props\r\nLazyImage.defaultProps = {\r\n  src: '',\r\n  alt: 'images',\r\n  onErrorSrc: process.env.PUBLIC_URL + '/handleimage/image-not-found.jpg',\r\n  loadingSrc: process.env.PUBLIC_URL + '/handleimage/image-loading.jpg',\r\n  className: 'img'\r\n}\r\n\r\n// prop types\r\nLazyImage.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.array,\r\n  onErrorSrc: PropTypes.string,\r\n  loadingSrc: PropTypes.string,\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default LazyImage;","// import react\r\nimport React, {useState, useRef} from 'react';\r\n\r\n// import from antd\r\nimport { Layout, Menu } from \"antd\";\r\n\r\n// import from react-router\r\nimport {NavLink, useRouteMatch, withRouter} from \"react-router-dom\";\r\n\r\n//import custimized hook\r\nimport useLanguagePageText from \"../../custimizedHook/LanguageHook\";\r\nimport {useElementGetBoundingClientRect} from \"../../custimizedHook/elementPositions\";\r\n\r\n// import component\r\nimport LazyImage from \"../image/LazyImage\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nfunction MakeupNav (props) {\r\n  let { url } = useRouteMatch();\r\n  // on window <= md 768px, set onSideBreak to true\r\n  const [onSideBreak, setOnSideBreak] = useState(false);\r\n\r\n  const { locale } = props;\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  // customized hook get side nav position\r\n  const brokenSideNavRef = useRef(null); // bind broken side nav element\r\n  const {top: elementTop, width: elementWidth} = useElementGetBoundingClientRect(brokenSideNavRef, true);\r\n\r\n  const navElement =\r\n    <Menu\r\n    mode=\"inline\"\r\n    selectedKeys={[props.history.location.pathname]}\r\n    defaultSelectedKeys={['1']}\r\n    defaultOpenKeys={['sub1']}\r\n    style={{ height: '100%' }}\r\n  >\r\n    <Menu.Item key={props.history.location.pathname === url ? url : `${url}/blush`}>\r\n      <NavLink to={`${url}/blush`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/blush-ff7992c3d7690d18a9b0224177cfbdedbc036497cf87c393ec01c6a2ef070258.svg\"\r\n          alt={[\"Blush\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[0] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/bronzer`}>\r\n      <NavLink to={`${url}/bronzer`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/bronzer-2d423487eea3e4571229bd95689bb4eb4331f05740f3921ede7c7c765c7954b1.svg\"\r\n          alt={[\"Bronzer\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[1] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/eyebrow`}>\r\n      <NavLink to={`${url}/eyebrow`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/eyebrow-fc49d8d480ace717203a21fe863c2231970063add91ed2f15181fe8e2d3b96b9.svg\"\r\n          alt={[\"Eyebrow\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[2] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/eyeliner`}>\r\n      <NavLink to={`${url}/eyeliner`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/eyeliner-de329b6d65d721a45190051af1153e23202df9eb1c393d1ac65972376ee42d50.svg\"\r\n          alt={[\"Eyeliner\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[3] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/eyeshadow`}>\r\n      <NavLink to={`${url}/eyeshadow`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/eyeshadow-67f9f8fd19df1862c95122f9b3460c7e6674d5a6d178cde00e6e4be908dd898a.svg\"\r\n          alt={[\"Eyeshadow\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[4] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/foundation`}>\r\n      <NavLink to={`${url}/foundation`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/foundation-9985c8a404d4a19cf7a2985ed504958cadd9f71252a73c90b6a7178bf7075143.svg\"\r\n          alt={[\"Foundation\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[5] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/lipliner`}>\r\n      <NavLink to={`${url}/lipliner`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/lip_liner-3f40bb63957aa7d47e3a2d1356b9380aa093271e5d58f3518181fd427e388d93.svg\"\r\n          alt={[\"Lip\", \"Liner\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[6] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/lipsticks`}>\r\n      <NavLink to={`${url}/lipsticks`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/lipstick-4531b48ee71839393857e24c8cbc4dede1f99d2284ef82a6eb0a2a4d03540a14.svg\"\r\n          alt={[\"Lipstick\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[7] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/mascara`}>\r\n      <NavLink to={`${url}/mascara`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/mascara-0deeeb81e58f31ddbff07847bfd0820e5ecdba1419f4281da743a05e0d6b3e69.svg\"\r\n          alt={[\"Mascara\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[8] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/nailpolish`}>\r\n      <NavLink to={`${url}/nailpolish`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/nail_polish-a7e7204834c0c30e8b57a1ba9896656331e228b0daa09d1705d1ab29bc0b7151.svg\"\r\n          alt={[\"Nail\", \"Polish\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[9] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n  </Menu>\r\n  return (\r\n    <>\r\n      <Sider className=\"site-layout-background\"\r\n             width={200}\r\n             breakpoint=\"md\"\r\n             collapsedWidth=\"50\"\r\n             style={onSideBreak?{display: \"none\"}:{}}\r\n             onBreakpoint={broken => {\r\n        if(broken) { // on sidebar broken, set state to hide side bar;\r\n          setOnSideBreak(true);\r\n        } else {\r\n          setOnSideBreak(false);\r\n        }\r\n      }}>\r\n        {navElement}\r\n      </Sider>\r\n      <div\r\n        className=\"makeup-broken-nav\"\r\n        ref={brokenSideNavRef}\r\n        style={!onSideBreak?{display: \"none\"}:{}}\r\n        //style={elementTop <= 0 ? {position: \"fixed\", top: \"0\", left:\"0\"} : {position: \"relative\"}}\r\n      >\r\n        {navElement}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.globalState.locale\r\n  }\r\n}\r\n\r\n// export List component\r\nexport default connect(mapStateToProps, null)(withRouter(MakeupNav));","// Capitalization String - first letter capitalized\r\nexport function capString(strArr) {\r\n  if(strArr.length > 0) {\r\n    return strArr.map(str => {\r\n      // if str is existed, then return uppercase str\r\n      return str && str.replace(str[0], str[0].toUpperCase());\r\n    })\r\n  }\r\n  return null;\r\n}\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n//import utils string filters\r\nimport { capString } from '../../utils/stringFilter';\r\n\r\n// import component\r\nimport LazyImage from '../image/LazyImage'\r\n\r\nfunction MakeupItem(props) {\r\n  // get props\r\n  const handleClick = props.handleClick;\r\n  const makeupItem = props.makeupItem;\r\n  const { name, image_link, brand, category, description, tag_list, product_colors } = makeupItem;\r\n\r\n  //prepare data string using capString filter\r\n  let strArr = [name, brand, category, description];\r\n  const [fName, fBrand, fCategory, fDescription] = capString(strArr);\r\n  let tagArr = [...tag_list];\r\n  const fTags = capString(tagArr);\r\n\r\n  //prepare color circle data\r\n  let productColors = product_colors.slice(0, 10);\r\n\r\n  //prepare makeup tag element\r\n  const tagElement = fTags && fTags.map(tag => {\r\n    return <span className=\"makeup-tag makeup-light-text\" key={tag}>{tag}</span>\r\n  })\r\n\r\n  //prepare makeup detailed info element\r\n  const makeupDetailElement =\r\n    <div className=\"makeup-details\">\r\n      <span className=\"makeup-title\">{fName}</span>\r\n      <div className=\"makeup-tags\">\r\n        {tagElement}\r\n      </div>\r\n      <span className=\"makeup-length makeup-light-text\">{fDescription && (fDescription.length>=50?fDescription.substr(0, 50) + \"...\" : fDescription)}</span>\r\n    </div>\r\n\r\n  //prepare makeup color circles element\r\n  const makeupColorElement =\r\n    <div className=\"makeup-colors\">\r\n      {productColors.map((color, index) => {\r\n        return <div className=\"makeup-color\" key={color.colour_name + index} style={{backgroundColor: color.hex_value}}></div>\r\n      })}\r\n    </div>\r\n\r\n\r\n  // render\r\n  return (\r\n    <>\r\n      {\r\n        !!props.makeupItem &&\r\n        <li className=\"makeup-item\" onClick={handleClick}>\r\n          <div className=\"makeup-image-wrapper\">\r\n            {/* makeup image element */}\r\n            <LazyImage src={image_link} alt={[fBrand,fCategory, fName]} className=\"makeup-image\"/>\r\n            {/* Makeup detail info */}\r\n            {makeupDetailElement}\r\n          </div>\r\n          {/* Makeup bar info */}\r\n          <div className=\"makeup-info\">\r\n            <span className=\"makeup-title\">{fName}</span>\r\n            <span className=\"makeup-light-text makeup-type\">{fBrand}</span>\r\n            {/* Makeup color element */}\r\n            {makeupColorElement}\r\n          </div>\r\n        </li>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n// specify Button component prop types\r\nMakeupItem.propTypes = {\r\n  makeupItem: PropTypes.object.isRequired,\r\n  handleClick: PropTypes.func\r\n}\r\n\r\nMakeupItem.defaultProps = {\r\n}\r\n\r\nexport default MakeupItem;","// import react\r\nimport React, { useRef } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import customized hook\r\nimport {useWindowDimensions, useElementGetBoundingClientRect, useScrollTop, useEleDistanceToTop} from '../../custimizedHook/elementPositions'\r\n\r\nfunction VerticalScrollVirtualList(props) {\r\n  // get data (props.list)\r\n  const list = props.list;\r\n  const listLength = list.length;\r\n\r\n  // get props.itemDimensions\r\n  const itemDimensions = props.itemDimensions;\r\n\r\n  // calculate screen height, after component mounted and updated\r\n  const { height } = useWindowDimensions();\r\n\r\n  // calculate scroll top\r\n  const { scrollTop } = useScrollTop();\r\n\r\n  // get bind list element\r\n  const listEleRef = useRef(null);\r\n  const listWrapperRef = useRef(null);\r\n\r\n  // get list element width\r\n  const { width: elementWidth } = useElementGetBoundingClientRect(listEleRef);\r\n  // calculate bind list element distance to page top\r\n  const eleDistanceToTop = useEleDistanceToTop(listWrapperRef);\r\n\r\n  // generate visible data items based on item dimensions, list position and window dimensions (visible area dimensions)\r\n  const itemHeight = itemDimensions.height; // item height\r\n  const itemWidth = itemDimensions.width; // item width\r\n  const itemsPerRow = Math.floor(elementWidth / itemWidth); // the number of item per row\r\n  const listTotalHeight = Math.ceil(listLength / itemsPerRow) * itemHeight; // the total height of list\r\n  const visibleRowsCount = Math.ceil(height / itemHeight) + 1; // visible screen can contain how many rows\r\n  const startIndex = Math.floor((scrollTop - eleDistanceToTop) / itemHeight); // the start position (row) index falls within visible screen\r\n  const endIndex = startIndex + visibleRowsCount; // the end position (row) index falls within visible screen\r\n  const startOffset = (scrollTop <= eleDistanceToTop) ? 0 : (scrollTop - eleDistanceToTop) - ((scrollTop - eleDistanceToTop) % itemHeight);// use for list ul transformation\r\n  const dataItemStart = startIndex <= 0 ? 0 : (startIndex * itemsPerRow); // data item start index\r\n  const dataItemEnd = (endIndex * itemsPerRow); // data item end index\r\n  const visibleItems = list.slice(dataItemStart, dataItemEnd); // slice all data to visible area data items based on data item start & end index\r\n\r\n  // prepare blank item to prevent flex display gap\r\n  let iElement = [];\r\n  const iElementLength =  Math.floor(elementWidth / itemWidth);\r\n  for(let i=0; i<iElementLength; i++) {\r\n    iElement.push(<i key={i} style={{width: itemWidth, height: 0}}></i>)\r\n  }\r\n\r\n  // prepare list css animation/translate3d\r\n  const getTransform = () => {\r\n    return `translate3d(0,${startOffset}px,0)`\r\n  }\r\n\r\n  // prepare list wrapper div style\r\n  const listWrapperStyle = {\r\n    'position': 'relative',\r\n    'height': listTotalHeight ? listTotalHeight : 0\r\n  }\r\n\r\n  // prepare list ul style\r\n  const listStyle = {\r\n    'listStyle': 'none',\r\n    'display': 'flex',\r\n    'flexDirection': 'row',\r\n    'justifyContent': 'space-between',\r\n    'flexWrap': 'wrap',\r\n    'padding': 0,\r\n    'marginBottom': 0,\r\n    'backgroundColor': 'rgba(255, 255, 255, 0)',\r\n    'transform': getTransform()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"list-wrapper\" ref={listWrapperRef} style={listWrapperStyle}>\r\n        <ul className=\"makeup-list\" ref={listEleRef} style={listStyle}>\r\n          {props.children(visibleItems)}\r\n          {/* iElement is for filling the gap of flex */}\r\n          {iElement}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nVerticalScrollVirtualList.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n  itemDimensions: PropTypes.object.isRequired,\r\n  children: PropTypes.func.isRequired\r\n}\r\n\r\nexport default VerticalScrollVirtualList;","import { useEffect, useState, useCallback } from 'react'\r\n\r\nexport default function useFetchHook(apiCallback) {\r\n  const [data, setData] = useState([]);\r\n  const [onError, setOnError] = useState(false);\r\n\r\n  const fetchTask = useCallback(async () => {\r\n    setOnError(false);\r\n    try {\r\n      const resp = await apiCallback();\r\n      setData(resp.data);\r\n    } catch (err) {\r\n      setOnError(true);\r\n      console.log(err)\r\n    }\r\n  }, [apiCallback, setData, setOnError])\r\n\r\n  useEffect(() => {\r\n    fetchTask();\r\n  }, [fetchTask])\r\n\r\n  return {\r\n    data,\r\n    onError\r\n  }\r\n}","// 1. import actionTypes\r\nimport {\r\n  ADD_ALL_TASKS,\r\n  ADD_ONE_TASK,\r\n  DEL_ONE_TASK,\r\n  CHANGE_ONE_FINISHED,\r\n  IS_ALL_FINISHED,\r\n  DEL_FINISHED_TASKS,\r\n  MOVE_TASK,\r\n} from \"./taskActionTypes\";\r\n\r\n//1.1 import language instance\r\n//import lang from '../languages/lang';\r\n\r\n// 2. reducer: create default state\r\nconst defaultState = {\r\n  tasks: []\r\n}\r\n\r\n// 3. reducer: core methods based on action type\r\nexport default function taskReducer(state=defaultState, action){\r\n  // 1.0 get all existing tasks from database\r\n  if(action.type === ADD_ALL_TASKS) {\r\n    // 1.1 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    // 1.2 passing actions data to the newState\r\n    newState.tasks = action.tasks;\r\n    return newState;\r\n  }\r\n  //2.add a new task\r\n  if(action.type === ADD_ONE_TASK) {\r\n    //2.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const tasks = newState.tasks;\r\n    const task = action.task\r\n    //2.1 push actions task data to the newState\r\n    tasks.push(task);\r\n    //2.2 set new state\r\n    return newState;\r\n  }\r\n  //3.delete one task\r\n  if(action.type === DEL_ONE_TASK) {\r\n    //3.0. clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const taskId = action.taskId;\r\n    const tasks = newState.tasks;\r\n    //3.1. use map loop, match task ID and return a new tempTasks array\r\n    tasks.forEach((task, index) => {\r\n      if(task.id === taskId) {\r\n        tasks.splice(index, 1);\r\n      }\r\n    })\r\n    //3.2. Assign new tasks array to newState\r\n    newState.tasks = tasks;\r\n    return newState;\r\n  }\r\n  //4.change one task's finished status\r\n  if(action.type === CHANGE_ONE_FINISHED) {\r\n    //4.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const tasks = newState.tasks;\r\n    const taskId = action.taskId;\r\n    const finishedStatus = action.finishedStatus;\r\n\r\n    //4.1. use loop match the task item and change it's finished status\r\n    tasks.forEach((task) => {\r\n      if(task.id === taskId) {\r\n        task.finished = finishedStatus;\r\n      }\r\n    })\r\n\r\n    //4.2. Assign new tempTasks array to new state\r\n    newState.tasks = tasks;\r\n    return newState;\r\n  }\r\n  //5.change all tasks finished status (select all and de-select all)\r\n  if(action.type === IS_ALL_FINISHED) {\r\n    //5.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const tasks = newState.tasks;\r\n    const flag = action.flag;\r\n\r\n    //5.1 According to flag, select/de-select all tasks\r\n    tasks.forEach((task) => {\r\n      if(flag){\r\n        task.finished = true;\r\n      } else {\r\n        task.finished = false;\r\n      }\r\n    })\r\n\r\n    //5.2 Assign new tempTasks array to new state\r\n    newState.tasks = tasks;\r\n    return newState;\r\n  }\r\n  //6.clean all finished tasks\r\n  if(action.type === DEL_FINISHED_TASKS) {\r\n    //6.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const tasks = newState.tasks;\r\n    const tempTasks = [];\r\n\r\n    //6.1 push all unfinished task to new Array\r\n    tasks.forEach((task) => {\r\n      if(!task.finished){\r\n        tempTasks.push(task);\r\n      }\r\n    })\r\n\r\n    //6.2 set State and re-rendering\r\n    newState.tasks = tempTasks;\r\n    return newState;\r\n  }\r\n  //7. move task item up and down\r\n  if(action.type === MOVE_TASK) {\r\n    //7.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const tasks = newState.tasks;\r\n    const index = action.index;\r\n    const diff = action.diff;\r\n\r\n    //7.1 handle item sorting\r\n    const item = tasks[index];\r\n    tasks.splice(index, 1);\r\n    tasks.splice(index + diff, 0, item);\r\n\r\n    //7.2 set state\r\n    newState.tasks = tasks;\r\n    return newState;\r\n  }\r\n  return state;\r\n}\r\n\r\n\r\n","const APP_LANG = 'APP_LANG'\r\n\r\nclass Lang {\r\n  constructor() {\r\n    //init lang\r\n    this.userLanguage = '';\r\n\r\n    //in constructor, we need to get existing APP_LANG from localStorage\r\n    this.userLanguage = localStorage.getItem(APP_LANG);\r\n\r\n    // if there is no APP_LANG in localStorage, we set lang based on browser preference.\r\n    if(!this.userLanguage){\r\n      const userLang = window.navigator.language.toLowerCase() || 'en'; //get browser language preference\r\n      if(userLang === 'zh-cn') {\r\n        this.userLanguage = 'zh-cn'\r\n        localStorage.setItem(APP_LANG, this.userLanguage);\r\n      } else {\r\n        this.userLanguage = 'en'\r\n        localStorage.setItem(APP_LANG, this.userLanguage);\r\n      }\r\n    }\r\n  }\r\n\r\n  static getInstance(){\r\n    if(!this._instance){\r\n      this._instance = new Lang();\r\n    }\r\n    return this._instance\r\n  }\r\n\r\n  // set localStorage APP_LANG\r\n  setLang(language) {\r\n    this.userLanguage = language.toLowerCase();\r\n    localStorage.setItem(APP_LANG, this.userLanguage);\r\n  }\r\n\r\n  // when call this function, will dynamically import matching language JSON file.\r\n  languageLoader() {\r\n    switch (this.userLanguage.toLowerCase()) {\r\n      case 'zh-cn':\r\n        return import('../languages/zhcn.json');\r\n      case 'en-us':\r\n        return import('../languages/enus.json');\r\n      default:\r\n        return import('../languages/enus.json');\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Lang.getInstance();\r\n","// 1. import actionTypes\r\nimport {\r\n  CHANGE_LOCALE,\r\n  OPEN_LOADING,\r\n  CLOSE_LOADING\r\n} from \"./globalActionTypes\";\r\n\r\n//1.1 import language instance\r\nimport lang from '../languages/lang';\r\n\r\n// 2. reducer: create default state\r\nconst defaultState = {\r\n  locale: lang.userLanguage,\r\n  loading: false\r\n}\r\n\r\n// 3. reducer: core methods based on action type\r\nexport default function globalReducer(state=defaultState, action){\r\n  //1. Change locale\r\n  if(action.type === CHANGE_LOCALE) {\r\n    // 1.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const localeValue = action.localeValue;\r\n\r\n    // 1.1 handle change locale\r\n    newState.locale = localeValue;\r\n\r\n    // 1.2 set state\r\n    return newState\r\n  }\r\n  //2. global loading open;\r\n  if(action.type === OPEN_LOADING) {\r\n    // 2.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const loading = action.loading;\r\n\r\n    // 2.1 handle change loading status to true\r\n    newState.loading = loading;\r\n\r\n    // 2.2 set state\r\n    return newState\r\n  }\r\n  //3. global loading close;\r\n  if(action.type === CLOSE_LOADING) {\r\n    // 3.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const loading = action.loading;\r\n\r\n    // 3.1 handle change loading status to false\r\n    newState.loading = loading;\r\n\r\n    // 3.2 set state\r\n    return newState\r\n  }\r\n  return state;\r\n}\r\n\r\n\r\n","import { createStore, combineReducers }  from 'redux';\r\nimport taskReducer from '../components/todo/store/taskReducers';\r\nimport globalReducer from '../store/globalReducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    taskState: taskReducer,\r\n    globalState: globalReducer\r\n})\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","// import axios xmlhttprequest package;\r\nimport axios from 'axios';\r\n\r\n// import actions to handle global loading effects\r\nimport {openLoading, closeLoading} from \"../store/globalActionCreators\";\r\n\r\n// import store for dispatching above actions\r\nimport store from \"../store/index\"\r\n\r\n// func for calculator current api request count which decides open/close loading effects\r\nlet requestCount = 0;\r\n\r\nfunction showGlobalLoading() {\r\n  if(requestCount === 0) { //if there is no previous requests, show loading\r\n    store.dispatch(openLoading())\r\n  }\r\n  requestCount ++; //increment 1 request count\r\n}\r\n\r\nfunction hideGlobalLoading() {\r\n  if(requestCount <= 1) { // if this is the last request, we hide loading;\r\n    store.dispatch(closeLoading());\r\n  }\r\n  requestCount --; // we decrease 1 request count\r\n}\r\n\r\n// the cors-anywhere is prefix is for compatibale with github pages https to send request to http api;\r\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json';\r\n// const BASE_URL = 'http://makeup-api.herokuapp.com/api/v1/products.json';\r\n\r\nconst axiosIns = axios.create({\r\n  baseURL: BASE_URL\r\n})\r\n\r\n// Add a request interceptor\r\naxiosIns.interceptors.request.use(config => {\r\n  // set store.loading to true, start global page loading effects.\r\n  showGlobalLoading();\r\n  return config;\r\n}, error => {\r\n  // Do something with request error\r\n  hideGlobalLoading();\r\n  return Promise.reject(error);\r\n})\r\n\r\n// Add a response interceptor\r\naxiosIns.interceptors.response.use(response => {\r\n  // Any status code that lie within the range of 2xx cause this function to trigger\r\n  hideGlobalLoading();\r\n  // Do something with response data\r\n  return response;\r\n}, error => {\r\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n  hideGlobalLoading();\r\n  // Do something with response error\r\n  return Promise.reject(error);\r\n})\r\n\r\nexport default axiosIns;\r\n\r\n// class Http {\r\n//   constructor() {\r\n//     this.http = axios.create({\r\n//       baseURL: BASE_URL\r\n//     })\r\n//\r\n//     // Add a request interceptor\r\n//     this.http.interceptors.request.use(config => {\r\n//       // set store.loading to true, start global page loading effects.\r\n//       showGlobalLoading();\r\n//       return config;\r\n//     }, error => {\r\n//       // Do something with request error\r\n//       hideGlobalLoading();\r\n//       return Promise.reject(error);\r\n//     })\r\n//\r\n//     // Add a response interceptor\r\n//     this.http.interceptors.response.use(response => {\r\n//       // Any status code that lie within the range of 2xx cause this function to trigger\r\n//       hideGlobalLoading();\r\n//       // Do something with response data\r\n//       return response;\r\n//     }, error => {\r\n//       // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n//       hideGlobalLoading();\r\n//       // Do something with response error\r\n//       return Promise.reject(error);\r\n//     })\r\n//   }\r\n//\r\n//   getLipSticks() {\r\n//     const url = '?product_type=lipstick';\r\n//     return axiosIns.get(url);\r\n//   }\r\n//\r\n//   getNailPolish() {\r\n//     const url = '?product_type=nail_polish';\r\n//     return this.http.get(url);\r\n//   }\r\n//\r\n//   getMascara() {\r\n//     const url = '?product_type=mascara';\r\n//     return this.http.get(url);\r\n//   }\r\n//\r\n//   getLipLiner() {\r\n//     const url = '?product_type=lip_liner';\r\n//     return this.http.get(url);\r\n//   }\r\n//\r\n//   getFoundation() {\r\n//     const url = '?product_type=foundation';\r\n//     return this.http.get(url);\r\n//   }\r\n//\r\n//   getProductDetail(id) {\r\n//     const url = `/${id}`\r\n//     return this.http.get(url);\r\n//   }\r\n  // getMovieDetails(movieId) {\r\n  //   const url = '/title/get-details?tconst=' + movieId;\r\n  //   return this.http.get(url);\r\n  // }\r\n// }\r\n//\r\n// export default new Http();\r\n","import axiosIns from \"../../auth/http\";\r\n\r\nexport const fetchLipStickList = () => {\r\n  return axiosIns.get('?product_type=lipstick')\r\n}\r\n\r\nexport const fetchNailPolish = () => {\r\n    const url = '?product_type=nail_polish';\r\n    return axiosIns.get(url);\r\n  }\r\n\r\nexport const fetchMascara = () => {\r\n    const url = '?product_type=mascara';\r\n    return axiosIns.get(url);\r\n  }\r\n\r\nexport const fetchLipLiner = () => {\r\n    const url = '?product_type=lip_liner';\r\n    return axiosIns.get(url);\r\n  }\r\n\r\nexport const fetchFoundation = () => {\r\n    const url = '?product_type=foundation';\r\n    return axiosIns.get(url);\r\n  }\r\n\r\nexport const fetchEyeshadow = () => {\r\n  const url = '?product_type=eyeshadow';\r\n  return axiosIns.get(url);\r\n}\r\n\r\nexport const fetchEyeliner = () => {\r\n  const url = '?product_type=eyeliner';\r\n  return axiosIns.get(url);\r\n}\r\n\r\nexport const fetchEyebrow = () => {\r\n  const url = '?product_type=eyebrow';\r\n  return axiosIns.get(url);\r\n}\r\n\r\nexport const fetchBronzer = () => {\r\n  const url = '?product_type=bronzer';\r\n  return axiosIns.get(url);\r\n}\r\n\r\nexport const fetchBlush = () => {\r\n  const url = '?product_type=blush';\r\n  return axiosIns.get(url);\r\n}","// import react\r\nimport React from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\r\n\r\nimport { fetchLipStickList } from './service'\r\n\r\n\r\nfunction LipsticksList(props) {\r\n\r\n  // fetch lipsticks data, and set state\r\n  let authNeeded = <div>\r\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\r\n    <iframe\r\n      title=\"Please give temp auth to request data.\"\r\n      width=\"100%\"\r\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\r\n    />\r\n  </div>;\r\n\r\n  // fetch data\r\n  const { data, onError } = useFetchHook(fetchLipStickList);\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map((item) => {\r\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n  //handle item click\r\n  function routeTo(item) {\r\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Lipsticks </h3>\r\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 390}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n      { onError ? authNeeded : \"\" }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LipsticksList;","// import react\r\nimport React from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\r\nimport { fetchNailPolish } from \"./service\";\r\n\r\nfunction NailPolishList(props) {\r\n  // fetch lipsticks data, and set state\r\n  let authNeeded = <div>\r\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\r\n    <iframe\r\n      title=\"Please give temp auth to request data.\"\r\n      width=\"100%\"\r\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\r\n    />\r\n  </div>;\r\n\r\n  // fetch data\r\n  const { data, onError } = useFetchHook(fetchNailPolish);\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map((item) => {\r\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n  //handle item click\r\n  function routeTo(item) {\r\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Nail Polish </h3>\r\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 390}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n      { onError ? authNeeded : \"\" }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NailPolishList;","// import react\r\nimport React from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\r\nimport {fetchMascara} from \"./service\";\r\n\r\nfunction MascaraList(props) {\r\n  // fetch lipsticks data, and set state\r\n  let authNeeded = <div>\r\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\r\n    <iframe\r\n      title=\"Please give temp auth to request data.\"\r\n      width=\"100%\"\r\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\r\n    />\r\n  </div>;\r\n\r\n  // fetch data\r\n  const { data, onError } = useFetchHook(fetchMascara);\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map((item) => {\r\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n  //handle item click\r\n  function routeTo(item) {\r\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Mascara </h3>\r\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 390}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n      { onError ? authNeeded : \"\" }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MascaraList;","// import react\r\nimport React from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\r\nimport {fetchLipLiner} from \"./service\";\r\n\r\nfunction LipLinerList(props) {\r\n  // fetch lipsticks data, and set state\r\n  let authNeeded = <div>\r\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\r\n    <iframe\r\n      title=\"Please give temp auth to request data.\"\r\n      width=\"100%\"\r\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\r\n    />\r\n  </div>;\r\n\r\n  // fetch data\r\n  const { data, onError } = useFetchHook(fetchLipLiner);\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map((item) => {\r\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n  //handle item click\r\n  function routeTo(item) {\r\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Lip Liner </h3>\r\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 390}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n      { onError ? authNeeded : \"\" }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LipLinerList;","// import react\r\nimport React from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\r\nimport {fetchFoundation} from \"./service\";\r\n\r\nfunction FoundationList(props) {\r\n  // fetch lipsticks data, and set state\r\n  let authNeeded = <div>\r\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\r\n    <iframe\r\n      title=\"Please give temp auth to request data.\"\r\n      width=\"100%\"\r\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\r\n    />\r\n  </div>;\r\n\r\n  // fetch data\r\n  const { data, onError } = useFetchHook(fetchFoundation);\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map((item) => {\r\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n  //handle item click\r\n  function routeTo(item) {\r\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Foundation </h3>\r\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 390}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n      { onError ? authNeeded : \"\" }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FoundationList;","// import react\r\nimport React from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\r\nimport { fetchEyeshadow } from \"./service\";\r\n\r\nfunction EyeshadowList(props) {\r\n  // fetch lipsticks data, and set state\r\n  let authNeeded = <div>\r\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\r\n    <iframe\r\n      title=\"Please give temp auth to request data.\"\r\n      width=\"100%\"\r\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\r\n    />\r\n  </div>;\r\n\r\n  // fetch data\r\n  const { data, onError } = useFetchHook(fetchEyeshadow);\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map((item) => {\r\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n  //handle item click\r\n  function routeTo(item) {\r\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Eyeshadow </h3>\r\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 390}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n      { onError ? authNeeded : \"\" }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EyeshadowList;","// import react\r\nimport React from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\r\nimport { fetchEyeliner } from \"./service\";\r\n\r\nfunction EyelinerList(props) {\r\n  // fetch lipsticks data, and set state\r\n  let authNeeded = <div>\r\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\r\n    <iframe\r\n      title=\"Please give temp auth to request data.\"\r\n      width=\"100%\"\r\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\r\n    />\r\n  </div>;\r\n\r\n  // fetch data\r\n  const { data, onError } = useFetchHook(fetchEyeliner);\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map((item) => {\r\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n  //handle item click\r\n  function routeTo(item) {\r\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Eyeliner </h3>\r\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 390}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n      { onError ? authNeeded : \"\" }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EyelinerList;","// import react\r\nimport React from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\r\nimport { fetchEyebrow } from \"./service\";\r\n\r\nfunction EyebrowList(props) {\r\n  // fetch lipsticks data, and set state\r\n  let authNeeded = <div>\r\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\r\n    <iframe\r\n      title=\"Please give temp auth to request data.\"\r\n      width=\"100%\"\r\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\r\n    />\r\n  </div>;\r\n\r\n  // fetch data\r\n  const { data, onError } = useFetchHook(fetchEyebrow);\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map((item) => {\r\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n  //handle item click\r\n  function routeTo(item) {\r\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Eyeliner </h3>\r\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 390}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n      { onError ? authNeeded : \"\" }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EyebrowList;","// import react\r\nimport React from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\r\nimport { fetchBronzer } from \"./service\";\r\n\r\nfunction BronzerList(props) {\r\n  // fetch lipsticks data, and set state\r\n  let authNeeded = <div>\r\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\r\n    <iframe\r\n      title=\"Please give temp auth to request data.\"\r\n      width=\"100%\"\r\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\r\n    />\r\n  </div>;\r\n\r\n  // fetch data\r\n  const { data, onError } = useFetchHook(fetchBronzer);\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map((item) => {\r\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n  //handle item click\r\n  function routeTo(item) {\r\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Eyeliner </h3>\r\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 390}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n      { onError ? authNeeded : \"\" }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BronzerList;","// import react\r\nimport React from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\r\nimport { fetchBlush } from \"./service\";\r\n\r\nfunction BlushList(props) {\r\n  // fetch lipsticks data, and set state\r\n  let authNeeded = <div>\r\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\r\n    <iframe\r\n      title=\"Please give temp auth to request data.\"\r\n      width=\"100%\"\r\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\r\n    />\r\n  </div>;\r\n\r\n  // fetch data\r\n  const { data, onError } = useFetchHook(fetchBlush);\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map((item) => {\r\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n  //handle item click\r\n  function routeTo(item) {\r\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Blush </h3>\r\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 390}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n      { onError ? authNeeded : \"\" }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlushList;","import React from 'react';\r\n\r\n// import from antd\r\nimport { Layout, Menu } from \"antd\";\r\n\r\n// import react router\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\n\r\n// import react-redux;\r\nimport {connect} from \"react-redux\";\r\n\r\n// import components\r\nimport MakeupNav from '../components/makeup/MakeupNav';\r\nimport LazyImage from '../components/image/LazyImage';\r\nimport LipsticksList from '../components/makeup/LipsticksList';\r\nimport NailPolishList from \"../components/makeup/NailPolishList\";\r\nimport MascaraList from \"../components/makeup/MascaraList\";\r\nimport LipLinerList from \"../components/makeup/LipLinerList\";\r\nimport FoundationList from \"../components/makeup/FoundationList\";\r\nimport EyeshadowList from \"../components/makeup/EyeshadowList\";\r\nimport EyelinerList from \"../components/makeup/EyelinerList\";\r\nimport EyebrowList from \"../components/makeup/EyebrowList\";\r\nimport BronzerList from \"../components/makeup/BronzerList\";\r\nimport BlushList from \"../components/makeup/BlushList\";\r\nimport useLanguagePageText from \"../custimizedHook/LanguageHook\";\r\n\r\n\r\n// get content components from Layout (Antd component)\r\nconst { Content } = Layout;\r\n\r\n\r\nfunction Makeup(props) {\r\n  let { path, url } = useRouteMatch();\r\n  const { locale } = props;\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  // render\r\n  return (\r\n    <div>\r\n      <h1>{pageText.makeupsTitle ? pageText.makeupsTitle : \"\"}</h1>\r\n      <h5>\r\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[0] : \"\"} <br />\r\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[1] : \"\"} <br />\r\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[2] : \"\"} <br />\r\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[3] : \"\"}\r\n      </h5>\r\n      <div className=\"image-grid\">\r\n        <div className=\"photo\">\r\n          <LazyImage\r\n            src=\"http://makeup-api.herokuapp.com/assets/brushes-6d2ab84631ecd47ced4fa07c47eb37521eb61c5a525965dafaf308f21338aa44.png\"\r\n            alt={[\"Brushes\"]}\r\n          />\r\n        </div>\r\n        <div className=\"photo photo-lips\">\r\n          <LazyImage\r\n            src=\"http://makeup-api.herokuapp.com/assets/lips-c35ec4a3350ec779c6bf6a785981ad9ef2e21bd9fe26a2be1c766d56edb2e11f.png\"\r\n            alt={[\"Lips\"]}\r\n          />\r\n        </div>\r\n        <div className=\"photo\">\r\n          <LazyImage\r\n            src=\"http://makeup-api.herokuapp.com/assets/nail-polish-4c7ee1a5f7a5cbaff9757c3bcfa4f6e89d7a6f2ffc49d267e04e010ba94cfd7c.png\"\r\n            alt={[\"Nail\", \"polish\"]}\r\n          />\r\n        </div>\r\n        <div className=\"photo\">\r\n          <LazyImage\r\n            src=\"http://makeup-api.herokuapp.com/assets/single-pot-4ce398e7d8c527ef248ace7a783cc52fd583375a25a7dcdb7b16f7a0958ccb17.png\"\r\n            alt={[\"Single\", \"pot\"]}\r\n          />\r\n        </div>\r\n        <div className=\"photo\">\r\n          <LazyImage\r\n            src=\"http://makeup-api.herokuapp.com/assets/eyeshadow-18fa4bed267bec6a67506150d9574259d0dcc67700e69de4ba720d9afe8204a2.png\"\r\n            alt={[\"Eyeshadow\"]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Layout className=\"makeup-layout-background\" style={{ padding: \"24px 0\", maxWidth: \"1200px\" }}>\r\n        {/* makeup page nav side bar component*/}\r\n        <MakeupNav />\r\n        {/* makeup page content component*/}\r\n        <Content style={{ padding: '0 24px', minHeight: 280 }}>\r\n          {/*Route View/output */}\r\n          <Switch>\r\n            <Route exact path={path} component={BlushList} />\r\n            <Route path={`${path}/blush`} component={BlushList} />\r\n            <Route path={`${path}/bronzer`} component={BronzerList} />\r\n            <Route path={`${path}/eyebrow`} component={EyebrowList} />\r\n            <Route path={`${path}/eyeliner`} component={EyelinerList} />\r\n            <Route path={`${path}/eyeshadow`} component={EyeshadowList} />\r\n            <Route path={`${path}/foundation`} component={FoundationList} />\r\n            <Route path={`${path}/lipliner`} component={LipLinerList} />\r\n            <Route path={`${path}/lipsticks`} component={LipsticksList} />\r\n            <Route path={`${path}/mascara`} component={MascaraList} />\r\n            <Route path={`${path}/nailpolish`} component={NailPolishList} />\r\n          </Switch>\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.globalState.locale\r\n  }\r\n}\r\n\r\n// export List component\r\nexport default connect(mapStateToProps, null)(Makeup);","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ButtonDark(props) {\r\n  // get props\r\n  const { showBtn, value, onClickFunction, btnClass, fullWidth }= props;\r\n\r\n  // render virtual element\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"button\"\r\n        className={\"btn \" + (btnClass ? btnClass : \"\")}\r\n        value={value}\r\n        style={{display: showBtn ? \"block\" : \"none\", backgroundColor: \"#404040\", color: \"#ffffff\", width: fullWidth ? \"100%\" : \"auto\"}}\r\n        onClick={onClickFunction}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\n// specify Button component prop types\r\nButtonDark.propTypes = {\r\n  showBtn: PropTypes.bool,\r\n  value: PropTypes.string.isRequired,\r\n  btnClass: PropTypes.string,\r\n  fullWidth: PropTypes.bool,\r\n  onClickFunction: PropTypes.func.isRequired\r\n}\r\n\r\nButtonDark.defaultProps = {\r\n  showBtn: true,\r\n  fullWidth: false\r\n}\r\n\r\nexport default ButtonDark;","import React, {useEffect} from 'react';\r\n\r\n// import components\r\nimport LazyImage from \"../components/image/LazyImage\";\r\nimport ButtonDark from \"../components/button/ButtonDark\";\r\n\r\nfunction MakeupsDetail(props) {\r\n  let makeupData = null;\r\n  if (props.location.state) {\r\n    makeupData = props.location.state.data;\r\n    localStorage.setItem(makeupData.id, JSON.stringify(makeupData))\r\n  }\r\n\r\n  // if there is no data passing in, need to using item id to request data from server\r\n  // however, the public api doesn't provide the id requesting. we store and get data from local storage.\r\n  if(!makeupData && props.location.pathname) {\r\n    const reg = /\\/(\\d+)$/;\r\n    const id = props.location.pathname.match(reg)[1];\r\n    makeupData = JSON.parse(localStorage.getItem(id));\r\n  }\r\n\r\n  //prepare makeup color circles element\r\n  const makeupColorElement =\r\n    <div className=\"makeup-colors\">\r\n      {makeupData.product_colors.map((color, index) => {\r\n        return <span key={color.colour_name + index}>\r\n          <span className=\"makeup-color\" style={{backgroundColor: color.hex_value}}></span>\r\n          <span className=\"color-name\">{color.colour_name}</span>\r\n        </span>\r\n      })}\r\n    </div>\r\n\r\n  //prepare makeup tag element\r\n  const tagElement = makeupData.tag_list.map(tag => {\r\n    return <span className=\"makeup-tag makeup-light-text\" key={tag}>{tag}</span>\r\n  })\r\n\r\n  // handle Add to Cart btn\r\n  const handleAddToCartBtn = () => {\r\n    console.log(\"clicked\")\r\n  }\r\n\r\n  // handle Add to Cart btn\r\n  const handlePurchaseBtn = () => {\r\n    console.log(\"purchase clicked\")\r\n  }\r\n\r\n  // estimated delivery date\r\n  const date = new Date();\r\n  console.log(date)\r\n\r\n  // render\r\n  return (\r\n    <>\r\n      {\r\n        !!makeupData &&\r\n        <div className=\"main-wrapper\">\r\n          <div className=\"detail-wrapper\">\r\n            <div className=\"leftWrapper\">\r\n              <LazyImage src={makeupData.image_link} className=\"detail-image\" alt={[makeupData.brand, makeupData.category]}/>\r\n              <div className=\"product-info\">\r\n                <h1>{ makeupData.name }</h1>\r\n                <p><strong>Brand: </strong>{makeupData.brand}</p>\r\n                <p><strong>Rating: </strong>{makeupData.rating ? makeupData.rating : \"No rating available\"}</p>\r\n                <div className=\"divider\"></div>\r\n                <p><strong>Colors: </strong></p>\r\n                { makeupColorElement }\r\n                <div className=\"divider\"></div>\r\n                { tagElement }\r\n                <div className=\"divider\"></div>\r\n                <p><strong>Price: </strong>${makeupData.price}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"rightWrapper\">\r\n              <select style={{width: \"100%\", padding: \"5px\", borderRadius: \"5px\"}} defaultValue=\"0\">\r\n                <option value=\"0\" disabled hidden>Qty</option>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n              </select>\r\n              <ButtonDark value=\"Add to Cart\" fullWidth={true} onClickFunction={()=>handleAddToCartBtn()}/>\r\n              <ButtonDark value=\"Purchase\" fullWidth={true} onClickFunction={()=>handlePurchaseBtn()}/>\r\n              <p>Estimated Delivery by</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"content\">\r\n            <p><strong>Description: </strong>{makeupData.description}</p>\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n// export List component\r\nexport default MakeupsDetail;","import React from 'react';\r\nimport { Layout } from 'antd'\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\n\r\n\r\n// import Home from '../pages/Home';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport UserCenter from '../pages/UserCenter';\r\nimport Todos from '../pages/Todos';\r\nimport Register from '../pages/Register';\r\nimport Makeups from '../pages/Makeups';\r\nimport MakeupsDetail from \"../pages/MakeupsDetail\";\r\n\r\nfunction AppContent() {\r\n  const { Content } = Layout;\r\n  return (\r\n    <>\r\n      <Content className=\"app-content\">\r\n        {/*Route View/output */}\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => {\r\n            return <Redirect to={\"/makeups\"} />\r\n          }} />\r\n          <Route path=\"/makeups\" component={Makeups} />\r\n          <Route path=\"/detail/makeups/\" component={MakeupsDetail} />\r\n          <Route exact path=\"/dashboard\" component={Dashboard} />\r\n          <Route exact path=\"/usercenter\" component={UserCenter} />\r\n          <Route exact path=\"/tasks\" component={Todos} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n        </Switch>\r\n      </Content>\r\n    </>\r\n  )\r\n}\r\nexport default AppContent;","//import react\r\nimport React, {useEffect} from 'react';\r\n\r\n//import react-router-dom\r\nimport { HashRouter as Router } from \"react-router-dom\"\r\n\r\n// import from react redux\r\nimport {connect} from \"react-redux\";\r\n\r\n//import antd\r\nimport { Layout, ConfigProvider, Spin } from 'antd';\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\nimport enUS from 'antd/lib/locale/en_US';\r\nimport zhCN from 'antd/lib/locale/zh_CN';\r\nimport { SmileOutlined } from '@ant-design/icons';\r\n\r\n//import page components\r\nimport AppFooter from './components/AppFooter';\r\nimport AppHeader from './components/AppHeader';\r\nimport AppContent from \"./components/AppContent\";\r\n\r\nmoment.locale('cn');\r\n\r\n// app file\r\nfunction App(props) {\r\n  const { locale, loading } = props;\r\n  console.log(\"Thank you for checking my code! Please contact me via email 'seanli9018@gmail.com' if you are hiring passionate web developer!!!\")\r\n\r\n  const antIcon = <SmileOutlined style={{ fontSize: 30 }} spin />;\r\n\r\n  // if loading is true, we prevent scrolling;\r\n  useEffect(() => {\r\n    if(loading) {\r\n      document.body.style.overflowY = \"hidden\"\r\n    } else {\r\n      document.body.style.overflowY = \"auto\"\r\n    }\r\n  }, [loading])\r\n\r\n  return (\r\n    <Spin spinning={props.loading} wrapperClassName=\"global-loading\" indicator={antIcon} tip=\"Working hard to get things you want!\" size=\"large\">\r\n      {/*ConfigProvider is for antdesign UI to pass language objects globally.*/}\r\n      <ConfigProvider locale={locale==='zh-cn' ? zhCN : enUS}>\r\n        <Router>\r\n          <Layout>\r\n            <AppHeader />\r\n            <AppContent />\r\n            <AppFooter />\r\n          </Layout>\r\n        </Router>\r\n      </ConfigProvider>\r\n    </Spin>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n  return {\r\n    locale: state.globalState.locale,\r\n    loading: state.globalState.loading\r\n  }\r\n}\r\n\r\n// export List component\r\nexport default connect(mapStateToProps, null)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { notification } from 'antd';\r\n\r\nclass AppNotification {\r\n    constructor(){\r\n        this.config = {}\r\n    }\r\n\r\n    _configNotice(message, description, duration){\r\n        this.config.message = message;\r\n        this.config.description = description;\r\n        this.config.duration = duration;\r\n    }\r\n\r\n    success(message=\"Notice\", description=\"Successfully operated\", duration=3) {\r\n        this._configNotice(message, description, duration);\r\n        notification.success(this.config)\r\n    }\r\n\r\n    info(message=\"Notice\", description=\"Infomation\", duration=3) {\r\n        this._configNotice(message, description, duration);\r\n        notification.info(this.config)\r\n    }\r\n\r\n    warning(message=\"Warning\", description=\"Warning message\", duration=5) {\r\n        this._configNotice(message, description, duration);\r\n        notification.warning(this.config)\r\n    }\r\n\r\n    error(message=\"Error\", description=\"Operation failed\", duration=5) {\r\n        this._configNotice(message, description, duration);\r\n        notification.error(this.config)\r\n    }\r\n}\r\n\r\nexport default new AppNotification();","import { Modal } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { confirm } = Modal;\r\n\r\nclass AppModal {\r\n    constructor(){\r\n        this.config = {\r\n            icon: <ExclamationCircleOutlined />\r\n        }\r\n    }\r\n\r\n    _configModal(onOk, onCancel, title, content){\r\n        this.config.onOk = onOk;\r\n        this.config.onCancel = onCancel;\r\n        this.config.title = title;\r\n        this.config.content = content;\r\n    }\r\n\r\n    confirm(onOK, onCancel, title=\"Do you want to delete this item?\", content=\"Click Yes or Cancel\") {\r\n        this._configModal(onOK, onCancel, title, content, );\r\n        confirm(this.config);\r\n    }\r\n}\r\n\r\nexport default new AppModal();","const EMAIL = 'EMAIL';\r\n\r\nclass Auth{\r\n  constructor() {\r\n    // initiate email\r\n    this.email = ''\r\n\r\n    //get email from local storage.\r\n    this.email = localStorage.getItem(EMAIL);\r\n  }\r\n\r\n  // achieve single instance\r\n  static getInstance(){\r\n    if(!this._instance){\r\n      this._instance = new Auth();\r\n    }\r\n    return this._instance;\r\n  }\r\n\r\n  // set auth email\r\n  setUserAuth(email){\r\n    this.email = email;\r\n    // then set new user auth email\r\n    localStorage.setItem(EMAIL, email);\r\n  }\r\n\r\n  // log out clear auth email\r\n  clearUserAuth(){\r\n    // clear this.email\r\n    this.email = '';\r\n    // clear localStorage\r\n    localStorage.removeItem(EMAIL);\r\n  }\r\n\r\n  // check if a user is logged in and authenticated\r\n  get is_authenticated() {\r\n    if(this.email) {\r\n      return true;\r\n    }else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Auth.getInstance();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// import Redux react-redux;\r\nimport { Provider } from 'react-redux';\r\nimport store from '../src/store/index';\r\n\r\nimport notice from '../src/utils/notification';\r\nimport modal from '../src/utils/modal';\r\nimport lang from '../src/languages/lang';\r\nimport auth from '../src/auth/auth';\r\n\r\n// bind notice class instance to React globally\r\nReact.$notice = notice;\r\n//bind modal class instance to React globally\r\nReact.$modal = modal;\r\n// bind lang class to React globally\r\nReact.$lang = lang;\r\n// bind frontend auth\r\nReact.$auth = auth;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}