{"version":3,"sources":["custimizedHook/LanguageHook.jsx","components/AppFooter.jsx","store/actionTypes.js","components/LangRadio.jsx","store/actionCreators.js","components/AppHeader.jsx","components/ReactEcharts.jsx","pages/Dashboard.jsx","pages/UserCenter.jsx","components/button/Button.jsx","components/Item.jsx","components/List.jsx","components/TodoHeader.jsx","components/TodoFooter.jsx","pages/Todos.jsx","components/input/TextInput.jsx","pages/Register.jsx","components/image/LazyImage.jsx","components/makeup/MakeupNav.jsx","utils/stringFilter.js","components/makeup/MakeupItem.jsx","custimizedHook/elementPositions.jsx","components/utils/VerticalScrollVirtualList.jsx","components/makeup/LipsticksList.jsx","components/makeup/NailPolishList.jsx","components/makeup/MascaraList.jsx","components/makeup/LipLinerList.jsx","components/makeup/FoundationList.jsx","pages/Makeups.jsx","components/button/ButtonDark.jsx","pages/MakeupsDetail.jsx","components/AppContent.jsx","App.js","reportWebVitals.js","languages/lang.js","store/reducers.js","store/index.js","utils/notification.js","utils/modal.js","auth/auth.js","auth/http.js","index.js"],"names":["useLanguagePageText","locale","useState","pageText","setPageText","useEffect","React","$lang","languageLoader","then","langData","default","connect","state","props","Footer","Layout","className","appFooter","ADD_ALL_TASKS","ADD_ONE_TASK","DEL_ONE_TASK","CHANGE_ONE_FINISHED","IS_ALL_FINISHED","DEL_FINISHED_TASKS","MOVE_TASK","CHANGE_LOCALE","OPEN_LOADING","CLOSE_LOADING","dispatch","dispatchChangeLocale","localValue","action","type","localeValue","Group","value","userLanguage","onChange","e","selectedLocaleValue","target","setLang","moment","Button","withRouter","Header","makeupsExsit","test","history","location","pathname","selectedKeys","mode","Item","icon","HeartOutlined","to","appHeader","UnorderedListOutlined","exact","UserOutlined","search","hash","fromDashboard","link","userId","$auth","email","replace","is_authenticated","activeClassName","onClick","clearUserAuth","logoutMsg","loginLogoutMsg","$notice","success","handleLogOut","ReactEcharts","echarts","GridComponent","LineChart","CanvasRenderer","ToolboxComponent","LegendComponent","PieChart","echartsInstance","echartsDOMElement","option","style","echartObj","getInstanceByDom","init","setOption","dispose","ref","defaultProps","height","width","Dashboard","id","display","flexDirection","xAxis","data","yAxis","series","smooth","legend","top","toolbox","show","feature","mark","dataView","readOnly","restore","saveAsImage","name","radius","center","roseType","itemStyle","borderRadius","usercenterTitle","showBtn","onClickFunction","btnClass","tasks","dispatchDelOneTask","taskId","delOneTask","dispatchChangeTaskFinished","finishedStatus","changeOneFinished","showBtns","setShowBtns","showUpBtns","setShowUpBtns","showDownBtns","setShowDownBtns","handleShowBtn","flag","index","handleShowDelBtn","undefined","handleUpBtns","length","handleDownBtns","item","itemIndex","handleMoveEvent","onMouseOver","onMouseOut","htmlFor","checked","finished","title","tasksBtns","handleItemDelete","dispatchSortItem","diff","moveTask","map","task","dispatchAddOneTask","addOneTask","taskInput","setTaskInput","placeholder","tasksInputPlaceholder","handleInputChange","onKeyDown","keyCode","trim","handleKeyEvent","items","dispatchDelFinishedTasks","dispatchIsAllFinished","isAllFinished","finishedItems","finishedTaskCount","forEach","_calculateFinishedTasks","totalItems","tasksFooter","tasksFooterBtn","Todos","this","dispatchData","status","Component","TextInput","inputTitle","inputType","onBlur","setType","iconStyle","fontSize","position","right","marginTop","boxSizing","color","minWidth","eyeIconDom","EyeInvisibleOutlined","EyeOutlined","password","confirmedPassword","formData","setFormData","errors","setErrors","validateField","errorsObj","JSON","parse","stringify","field","indexOf","re","signUpValidateMsg","regArray","testResult","every","k","signUpTitle","signUpInputTitle","formDataObj","handleEmailChange","handlePasswordChange","handleConfirmedPasswordChange","signUpSubmitBtn","setUserAuth","push","signUpNoticeMsg","error","LazyImage","loaded","setLoaded","setError","src","alt","onErrorSrc","loadingSrc","image","Image","handleLoad","handleError","onload","onerror","removeEventListener","join","process","Sider","useRouteMatch","url","path","defaultSelectedKeys","defaultOpenKeys","makeupsNav","capString","strArr","str","toUpperCase","MakeupItem","handleClick","makeupItem","image_link","brand","category","description","tag_list","product_colors","setDisplay","fName","fBrand","fCategory","fDescription","fTags","productColors","slice","tagElement","tag","makeupDetailElement","substr","makeupColorElement","backgroundColor","hex_value","colour_name","_getWindowDimensions","window","innerWidth","innerHeight","useScrollTop","scrollTop","scrolling","scrollStatus","setScrollStatus","preScrollTop","useRef","current","usePrevious","handleOnScroll","pageYOffset","addEventListener","VerticalScrollVirtualList","list","listLength","itemDimensions","windowDimensions","setWindowDimensions","handleResize","useWindowDimensions","listEleRef","listWrapperRef","elementWidth","element","setElementWidth","handleUpdateEleWidth","clientWidth","useEleDimensions","eleDistanceToTop","distanceToTop","setDistanceToTop","handleUpdateEleDistanceToTop","getBoundingClientRect","useEleDistanceToTop","itemHeight","itemWidth","itemsPerRow","Math","floor","listTotalHeight","ceil","visibleRowsCount","startIndex","startOffset","dataItemStart","dataItemEnd","visibleItems","iElement","iElementLength","i","listWrapperStyle","listStyle","children","LipsticksList","lipsticks","setLipsticks","authNeeded","$http","getLipSticks","res","catch","err","console","log","routeTo","NailPolishList","nailPolish","setNailPolish","getNailPolish","MascaraList","mascara","setMascara","getMascara","LipLinerList","lipLiner","setLipLiner","getLipLiner","FoundationList","foundation","setFoundation","getFoundation","Content","makeupsTitle","makeupsSubTitle","padding","maxWidth","minHeight","component","ButtonDark","fullWidth","MakeupsDetail","makeupData","localStorage","setItem","match","getItem","date","Date","rating","price","defaultValue","disabled","hidden","AppContent","render","Makeups","UserCenter","Register","loading","antIcon","SmileOutlined","spin","spinning","wrapperClassName","indicator","tip","size","zhCN","enUS","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_LANG","Lang","navigator","language","toLowerCase","_instance","getInstance","defaultState","lang","store","createStore","newState","splice","tempTasks","config","message","duration","_configNotice","notification","info","warning","confirm","Modal","ExclamationCircleOutlined","onOk","onCancel","content","onOK","_configModal","EMAIL","Auth","removeItem","requestCount","showGlobalLoading","hideGlobalLoading","http","axios","create","baseURL","interceptors","request","use","Promise","reject","response","get","notice","$modal","modal","auth","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79683a32.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport default function useLanguagePageText(locale) {\n  const [pageText, setPageText] = useState({});\n\n    // get lang data\n  useEffect(()=>{\n    // after componentDidMount and componentDidUpdate, we need to get langData file and set page text\n    React.$lang.languageLoader().then((langData)=>{\n      setPageText(langData.default);\n    })\n  }, [locale])\n\n  return pageText;\n}","import React from 'react';\n\n// import from redux\nimport {connect} from \"react-redux\";\n\n// import from antd UI\nimport {Layout} from 'antd'\n\n// import custimazied hook, get language data.\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\n\nfunction AppFooter(props) {\n  const { Footer } = Layout;\n  const { locale } = props\n\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  return (\n    <>\n      <Footer className=\"app-footer\">\n        <div className=\"footer-info\">\n          {\n            !!pageText.appFooter && \n            <span><strong>{pageText.appFooter[0]}</strong> seanli9018@gmail.com; <strong>{pageText.appFooter[1] || ''}</strong> 312-825-9982</span>\n          }\n        </div>\n      </Footer>\n    </>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.locale\n  }\n}\n\n// export component\nexport default connect(mapStateToProps, null)(AppFooter);","//1.添加所有的已经存在的任务\nexport const ADD_ALL_TASKS = 'add_all_tasks';\n//2.添加一条任务\nexport const ADD_ONE_TASK = 'add_one_task';\n//3.删除一条任务\nexport const DEL_ONE_TASK = 'del_one_task';\n//4.修改一条任务的完成状态\nexport const CHANGE_ONE_FINISHED = 'change_one_finished';\n//5.修改所有任务的完成状态（全选或全不选）\nexport const IS_ALL_FINISHED = 'is_all_finished';\n//6.清除所有已完成的任务\nexport const DEL_FINISHED_TASKS = 'del_finished_tasks';\n//7.move task item up and down\nexport const MOVE_TASK = 'move_task';\n//8. Change locale\nexport const CHANGE_LOCALE = 'change_locale';\n//9. Global loading state - open\nexport const OPEN_LOADING = 'open_loading';\n//10. Global loading state - close\nexport const CLOSE_LOADING = 'close_loading';","import React from 'react';\n\n//import from antd\nimport {  Radio } from 'antd';\n\nimport moment from \"moment\";\nimport {connect} from \"react-redux\";\nimport { changeLocale } from \"../store/actionCreators\";\n\n\nfunction LangRadio(props) {\n  const { dispatchChangeLocale } = props;\n\n  let handleLocale = e => {\n    let localeValue = {};\n    let selectedLocaleValue = e.target.value;\n\n    // set store locale state\n    dispatchChangeLocale(selectedLocaleValue);\n\n    // set localStorage APP_LANG\n    React.$lang.setLang(selectedLocaleValue);\n\n    if (!localeValue) {\n      moment.locale('en');\n    } else {\n      moment.locale('zh-cn');\n    }\n  };\n\n  return (\n    <>\n      <div className=\"change-locale\">\n        <Radio.Group value={!!React.$lang.userLanguage ? React.$lang.userLanguage : 'en'} onChange={handleLocale}>\n          <Radio.Button key=\"en\" value='en'>\n            English\n          </Radio.Button>\n          <Radio.Button key=\"cn\" value='zh-cn'>\n            中文\n          </Radio.Button>\n        </Radio.Group>\n      </div>\n    </>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.locale\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatchChangeLocale(localValue){\n      const action = changeLocale(localValue);\n      dispatch(action);\n    }\n  }\n}\n\n// export List component\nexport default connect(mapStateToProps, mapDispatchToProps)(LangRadio);","// 导入actionTypes\nimport {\n  ADD_ALL_TASKS,\n  ADD_ONE_TASK,\n  DEL_ONE_TASK,\n  CHANGE_ONE_FINISHED,\n  IS_ALL_FINISHED,\n  DEL_FINISHED_TASKS,\n  MOVE_TASK,\n  CHANGE_LOCALE, OPEN_LOADING, CLOSE_LOADING\n} from \"./actionTypes\";\n\n//1.添加所有的已经存在的任务\nexport const addAllTasks = (tasks)=>{\n  return {\n    type: ADD_ALL_TASKS,\n    tasks\n  }\n}\n//2.添加一条任务\nexport const addOneTask = (task)=>{\n  return {\n    type: ADD_ONE_TASK,\n    task\n  }\n}\n//3.删除一条任务\nexport const delOneTask = (taskId)=>{\n  return {\n    type: DEL_ONE_TASK,\n    taskId\n  }\n}\n//4.修改一条任务的完成状态\nexport const changeOneFinished = (taskId, finishedStatus)=>{\n  return {\n    type: CHANGE_ONE_FINISHED,\n    taskId,\n    finishedStatus\n  }\n}\n//5.修改所有任务的完成状态（全选或全部选）\nexport const isAllFinished = (flag)=>{\n  return {\n    type: IS_ALL_FINISHED,\n    flag\n  }\n}\n//6.清除所有已完成的任务\nexport const delFinishedTasks = ()=>{\n  return {\n    type: DEL_FINISHED_TASKS,\n  }\n}\n\n//7. move task item up and down\nexport const moveTask = (index, diff) => {\n  return{\n    type: MOVE_TASK,\n    index,\n    diff\n  }\n}\n\n//8. handle locale\nexport const changeLocale = (localeValue) => {\n  return {\n    type: CHANGE_LOCALE,\n    localeValue\n  }\n}\n\n//9. global loading open;\nexport const openLoading = () => {\n  return {\n    type: OPEN_LOADING,\n    loading: true\n  }\n}\n\n//10. global loading close;\nexport const closeLoading = () => {\n  return {\n    type: CLOSE_LOADING,\n    loading: false\n  }\n}","// import from react\nimport React from 'react';\n\n// import from antd\nimport {Layout, Menu} from 'antd'\nimport { DashboardOutlined, HomeOutlined, UnorderedListOutlined, UserOutlined, HeartOutlined } from \"@ant-design/icons\";\n\n// import from react-router-dom\nimport { NavLink, withRouter } from \"react-router-dom\";\n\n// import from redux\nimport { connect } from \"react-redux\";\n\n// import from components\nimport LangRadio from \"./LangRadio\";\n\n// import custimazied hook, get language data.\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\n\nfunction AppHeader(props) {\n  const { Header } = Layout;\n  const { locale } = props\n\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  // handle log out btn click event\n  function handleLogOut() {\n    // clear user auth\n    React.$auth.clearUserAuth();\n    // redirect to log in page\n    props.history.replace('/');\n    // show logout successfully modal\n    let logoutMsg = pageText.loginLogoutMsg ? pageText.loginLogoutMsg[1] : \"\";\n    React.$notice.success(logoutMsg, '', 6);\n  }\n\n  // test to see if nav selected keys match\n  const makeupsReg = /\\/makeups/\n  const makeupsExsit = makeupsReg.test(props.history.location.pathname);\n  return (\n    <>\n      <Header \n        className=\"app-header\"\n      >\n        <Menu selectedKeys={[props.history.location.pathname]} mode=\"horizontal\">\n          {/*Route Navi*/}\n          <Menu.Item key={makeupsExsit ? [props.history.location.pathname] : \"\"} icon={<HeartOutlined />}>\n            <NavLink to=\"/makeups\">{!!pageText.appHeader ? pageText.appHeader[4] : \"\"}</NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/tasks\" icon={<UnorderedListOutlined />}>\n            <NavLink exact to=\"/tasks\">{!!pageText.appHeader ? pageText.appHeader[3] : \"\"}</NavLink>\n          </Menu.Item>\n          {/*<Menu.Item key=\"/dashboard\" icon={<DashboardOutlined />}>*/}\n          {/*  <NavLink exact to=\"/dashboard\">{!!pageText.appHeader ? pageText.appHeader[1] : \"\"}</NavLink>*/}\n          {/*</Menu.Item>*/}\n          <Menu.Item key=\"/usercenter\" icon={<UserOutlined />}>\n            <NavLink exact to={{\n              pathname: \"/usercenter\",\n              search: \"?name=sean&age=18\",\n              hash: \"#hashtag\",\n              state: {fromDashboard: true, link: 'google.com', userId: React.$auth.email ? React.$auth.email.replace(/@[\\s\\S]+/, \"\") : \"\"}\n            }}>\n              {!!pageText.appHeader ? pageText.appHeader[2] : \"\"}\n            </NavLink>\n          </Menu.Item>\n        </Menu>\n        <div className=\"header-info\">\n          {/*if authenticated, show username, else show signup/login btn*/}\n          { React.$auth.is_authenticated ?\n            <span className=\"header-signup\">\n              <NavLink\n                exact\n                activeClassName=\"link-text-active\"\n                to=\"/usercenter\">\n                {React.$auth.email.replace(/@[\\s\\S]+/, '')}\n              </NavLink>\n              <span className=\"header-logout\" onClick={() => handleLogOut()}>Log out</span>\n            </span> :\n            <span className=\"header-signup\">\n              <NavLink\n                exact\n                activeClassName=\"link-text-active\"\n                to=\"/register\">\n                {!!pageText.appHeader ? pageText.appHeader[5] : \"\"}\n              </NavLink>\n            </span>\n          }\n          <LangRadio />\n        </div>\n      </Header>\n    </>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.locale\n  }\n}\n\n// export List component\nexport default connect(mapStateToProps, null)(withRouter(AppHeader));","// import from react\nimport React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\n// import from echarts\nimport * as echarts from 'echarts/core';\nimport {\n  GridComponent,\n  ToolboxComponent,\n  LegendComponent\n} from 'echarts/components';\nimport {\n  LineChart,\n  PieChart\n} from 'echarts/charts';\nimport {\n  CanvasRenderer\n} from 'echarts/renderers';\n\nfunction ReactEcharts(props) {\n  echarts.use(\n    [GridComponent, LineChart, CanvasRenderer, ToolboxComponent,\n      LegendComponent, PieChart]\n  );\n  const echartsInstance = echarts; //echarts object\n  let echartsDOMElement = null; //echarts dom\n  let { option, style, className } = props // get props\n\n  // get real dom on didMount\n  useEffect(() => {\n    //get dom element instance, if no instance then init one\n    let echartObj = echartsInstance.getInstanceByDom(echartsDOMElement) ||\n      echartsInstance.init(echartsDOMElement);\n\n    //set echarts option\n    echartObj.setOption(option);\n\n    // Destory the element on WillUnmount\n    return function destroyEchartElement() {\n      echartObj.dispose();\n    }\n  }, [option])\n\n  return (\n    <div\n      ref={(e) => {echartsDOMElement = e}}\n      style={style}\n      className={className}\n    >Echarts</div>\n  )\n}\n\n// specify propTypes for component\nReactEcharts.propTypes = {\n  option: PropTypes.object.isRequired,\n  style: PropTypes.object,\n  className: PropTypes.string\n}\n\nReactEcharts.defaultProps = {\n  style: {height: \"300px\", width: \"500px\"},\n  className: \"\"\n}\n\nexport default ReactEcharts;","import React, {useEffect} from 'react';\n\n// import components\nimport ReactEcharts from \"../components/ReactEcharts\";\n\n\nfunction Dashboard() {\n  let option1 = {\n    xAxis: {\n      type: 'category',\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series: [{\n      data: [820, 932, 901, 934, 1290, 1330, 1320],\n      type: 'line',\n      smooth: true\n    }]\n  }\n\n  let option2 = {\n    legend: {\n      top: 'bottom'\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        mark: {show: true},\n        dataView: {show: true, readOnly: false},\n        restore: {show: true},\n        saveAsImage: {show: true}\n      }\n    },\n    series: [\n      {\n        name: 'Pattern',\n        type: 'pie',\n        radius: [50, 100],\n        center: ['50%', '50%'],\n        roseType: 'area',\n        itemStyle: {\n          borderRadius: 8\n        },\n        data: [\n          {value: 40, name: 'rose 1'},\n          {value: 38, name: 'rose 2'},\n          {value: 32, name: 'rose 3'},\n          {value: 30, name: 'rose 4'},\n          {value: 28, name: 'rose 5'},\n          {value: 26, name: 'rose 6'},\n          {value: 22, name: 'rose 7'},\n          {value: 18, name: 'rose 8'}\n        ]\n      }\n    ]\n  }\n  return (\n    <div id=\"main-container\" style={{display: 'flex', flexDirection: 'row'}}>\n      <ReactEcharts option={option1} />\n      <ReactEcharts option={option2} style={{\"width\": \"500px\", \"height\": \"350px\"}}/>\n    </div>\n  )\n}\n\nexport default Dashboard;","import React from 'react';\nimport {connect} from \"react-redux\";\n\n// import custimazied hook, get language data.\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\n\nfunction UserCenter(props) {\n  //const query = new URLSearchParams(props.location.search);\n  //const userId = props.location.state ? props.location.state.userId : '';\n\n  const { locale } = props\n\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  return (\n    <div>\n      <h1>{!!pageText.usercenterTitle && pageText.usercenterTitle[0]}</h1>\n      {\n        !!React.$auth.is_authenticated &&\n        <span>{!!pageText.usercenterTitle && pageText.usercenterTitle[1] + React.$auth.email.replace(/@[\\s\\S]+/, \"\")}</span>\n      }\n    </div>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.locale\n  }\n}\n\n// export user center component\nexport default connect(mapStateToProps, null)(UserCenter);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nfunction Button(props) {\n  // get props\n  const { showBtn, value, onClickFunction, btnClass }= props;\n\n  // render virtual element\n  return (\n    <>\n      <input\n        type=\"button\"\n        className={\"btn \" + (btnClass ? btnClass : \"\")}\n        value={value}\n        style={{display: showBtn ? \"block\" : \"none\"}}\n        onClick={() => onClickFunction()}\n      />\n    </>\n  )\n}\n\n// specify Button component prop types\nButton.propTypes = {\n  showBtn: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  btnClass: PropTypes.string,\n  onClickFunction: PropTypes.func.isRequired\n}\n\nexport default Button;","// React imports\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\n// react-redux imports\nimport { connect } from 'react-redux';\nimport {changeOneFinished, delOneTask} from \"../store/actionCreators\";\n\n// components imports\nimport Button from './button/Button';\n\n// import custimazied hook, get language data.\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\n\nfunction Item(props) {\n  const [showBtns, setShowBtns] = useState(false);\n  const [showUpBtns, setShowUpBtns] = useState(false);\n  const [showDownBtns, setShowDownBtns] = useState(false);\n  const { locale } = props;\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  //flag is a boolean, flag = onMouseOver ? true : false\n  function handleShowDelBtn(flag) {\n    setShowBtns(flag);\n  }\n\n  //if index !== 0, then show up btn\n  function handleUpBtns(index) {\n    if(index !== 0 ){\n      setShowUpBtns(true);\n    }else{\n      setShowUpBtns(false);\n    }\n  }\n\n  //if index !== last index, then show down btn\n  function handleDownBtns(index) {\n    if(index !== tasks.length-1){\n      setShowDownBtns(true);\n    }else{\n      setShowDownBtns(false);\n    }\n  }\n \n\n  function handleShowBtn(flag, index){\n    // Mouse hover ? show : hide\n    handleShowDelBtn(flag);\n    \n    // control Up btn and down btn show/hide\n    if(index !== undefined){\n      handleUpBtns(index);\n      handleDownBtns(index);\n    }\n  }\n\n  // finished ? dispatch delete task : prompt confirm modal\n  function handleItemDelete(itemId, finshedStatus){\n    const { dispatchDelOneTask } = props;\n    if(finshedStatus){\n      dispatchDelOneTask(itemId);\n    }else{\n      // prompt Confirm modal\n      React.$modal.confirm(()=>{ // Ok clicked\n        dispatchDelOneTask(itemId);\n      }, ()=>{ // Cancel clicked\n        console.log(\"Clicked Cancel\");\n      }, \"Do you really want to delete unfinished task?\")\n    }\n  }\n\n  const { item, itemIndex, dispatchChangeTaskFinished, handleMoveEvent, tasks } = props;\n\n  return (\n    <li className=\"task-item\"\n        onMouseOver={() => handleShowBtn(true, itemIndex)}\n        onMouseOut={() => handleShowBtn(false)}\n    >\n      <label htmlFor={\"item-check-box\"+item.id}>\n        <input\n          className=\"item-check-box\"\n          type=\"checkbox\"\n          name=\"item-check-box\"\n          id={\"item-check-box\"+item.id}\n          checked={item.finished}\n          onChange={() => dispatchChangeTaskFinished(item.id, !item.finished)}/>\n        <span>{item.title}</span>\n      </label>\n      <div className=\"button-group\">\n        <Button\n          value={!!pageText.tasksBtns?pageText.tasksBtns[0]:\"\"}\n          showBtn={showBtns && showUpBtns}\n          onClickFunction={() => handleMoveEvent(itemIndex, -1)}\n        />\n        <Button\n          value={!!pageText.tasksBtns?pageText.tasksBtns[1]:\"\"}\n          showBtn={showBtns && showDownBtns}\n          onClickFunction={() => handleMoveEvent(itemIndex, 1)}\n        />\n        <Button\n          value={!!pageText.tasksBtns?pageText.tasksBtns[2]:\"\"}\n          showBtn={showBtns}\n          btnClass=\"delete-btn\"\n          onClickFunction={() => this.handleItemDelete(item.id, item.finished)}\n        />\n      </div>\n    </li>\n  )\n}\nItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  handleMoveEvent: PropTypes.func.isRequired,\n  itemIndex: PropTypes.number.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.tasks,\n    locale: state.locale\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatchDelOneTask(taskId) {\n      // get action object ready\n      const action = delOneTask(taskId);\n      dispatch(action);\n    },\n    dispatchChangeTaskFinished(taskId, finishedStatus) {\n      // get action object ready\n      const action = changeOneFinished(taskId, finishedStatus);\n      dispatch(action);\n    }\n  }\n}\n\n// export Item component\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\n\n// import components\nimport Item from './Item';\n\n// react-redux imports\nimport { connect } from 'react-redux';\nimport { moveTask } from \"../store/actionCreators\";\n\n\n// List component\nfunction List(props) {\n  // get tasks from props;\n  const { tasks, dispatchSortItem } = props;\n  return (\n    <ul className=\"task-list\">\n        {tasks.map((task, index) => (\n          <Item item={task} itemIndex={index} key={task.id} handleMoveEvent={(index, diff) => dispatchSortItem(index, diff)}/>\n        ))}\n    </ul>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.tasks\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatchSortItem(index, diff){\n      const action = moveTask(index, diff);\n      dispatch(action);\n    }\n  }\n}\n\n// export List component\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import React, {useState} from 'react';\n\n//import react-redux\nimport { connect } from 'react-redux';\nimport { addOneTask } from '../store/actionCreators';\n\n// import custimazied hook, get language data.\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\n\nfunction TodoHeader(props) {\n  const [taskInput, setTaskInput] = useState('');\n  const { locale } = props;\n\n  //get lang data, passing \"locale\" to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  function handleInputChange(e) {\n    setTaskInput(e.target.value);\n  }\n\n  // handle Enter key down event\n  function handleKeyEvent(e) {\n    // 0. initial and get all tasks data\n    const { tasks } = props;\n\n    // 1. handle key down event; dispatch input data to store state\n    if(e.keyCode === 13 && !! taskInput) {\n      // calculate last task's id based on store state length\n      const lastItemId = tasks.length === 0 ? 1 : tasks[tasks.length - 1].id\n\n      // organize the newly created task object\n      const item = {\n        id: lastItemId + 1,\n        title: taskInput.trim(),\n        finished: false\n      }\n\n      // dispatch new tasks and set store state\n      const { dispatchAddOneTask } = props;\n      dispatchAddOneTask(item);\n\n      // clear header input, after successfully add input value\n      setTaskInput('');\n    }\n  }\n\n  return (\n    <div className=\"tasks-header\">\n      <input className=\"task-input\"\n             type=\"text\"\n             placeholder={pageText.tasksInputPlaceholder}\n             value={taskInput}\n             onChange={(e) => handleInputChange(e)}\n             onKeyDown={(e) => handleKeyEvent(e)}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state /*, ownProps*/) => {\n  // return newly matched store state to component props\n  return {\n    tasks: state.tasks,\n    locale: state.locale\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  // return newly matched store dispatch to component props\n  return {\n    dispatchAddOneTask(task) {\n      // get action object\n      const action = addOneTask(task);\n      // dispatch to reducer to update store state\n      dispatch(action);\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHeader)","import React from 'react';\n\n// react-redux imports\nimport { connect } from 'react-redux';\nimport {isAllFinished, delFinishedTasks} from \"../store/actionCreators\";\n\n// import component\nimport Button from './button/Button';\n\n// import custimazied hook, get language data.\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\n\nfunction TodoFooter (props) {\n  const { locale } = props;\n  \n  //get lang data, passing \"locale\" to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  // calculate the count of finished tasks\n  function _calculateFinishedTasks(tasks) {\n    let finishedTaskCount = 0;\n\n    tasks.forEach((task) => {\n      if (task.finished === true) {\n        finishedTaskCount += 1;\n      }\n    })\n    return finishedTaskCount\n  }\n\n  const {items, dispatchIsAllFinished, dispatchDelFinishedTasks} = props;\n  const finishedItems = _calculateFinishedTasks(items);\n  const totalItems = items.length;\n\n  return (\n    <div className=\"tasks-footer\">\n      <div className=\"tasks-footer-info\">\n        <label htmlFor=\"footer-checkbox\"></label>\n        <input\n          type=\"checkbox\"\n          id=\"footer-checkbox\"\n          checked={finishedItems === totalItems && totalItems > 0}\n          onChange={() => dispatchIsAllFinished(finishedItems !== totalItems)} // if it is not all-selected, then flag === true\n        />\n        {\n          !!pageText.tasksFooter && //if pageText.tasksFooter is Not undefined, then we render, otherwise it will thorw a error\n          <span className=\"task-info\">\n            {pageText.tasksFooter[0]} {finishedItems} {finishedItems===1?pageText.tasksFooter[1]:pageText.tasksFooter[2]} / {finishedItems===1?pageText.tasksFooter[3]:pageText.tasksFooter[4]} {totalItems}\n          </span>\n        }\n      </div>\n      {/* <input type=\"button\" className=\"btn\" value={!!pageText && pageText.tasksFooterBtn} onClick={() => dispatchDelFinishedTasks()} /> */}\n      <Button showBtn={true} value={pageText.tasksFooterBtn || ''} onClickFunction={() => dispatchDelFinishedTasks()}/>\n    </div>\n  )\n}\n\n// get redux state and passing it to component props.\nconst mapStateToProps = (state) => {\n  return {\n    items: state.tasks,\n    locale: state.locale\n  }\n}\n\n// get dispatch function to set or change the redux state.\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatchDelFinishedTasks() {\n      // get action object ready\n      const action = delFinishedTasks();\n      dispatch(action);\n    },\n    dispatchIsAllFinished(flag) {\n      // get action object ready\n      const action = isAllFinished(flag);\n      dispatch(action);\n    }\n  }\n}\n\n// export Item component\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoFooter);","import React from 'react';\n\n// Import components\nimport List from '../components/List';\nimport Header from '../components/TodoHeader';\nimport Footer from '../components/TodoFooter';\nimport '../index.scss';\n\n// Import redux and react-redux\nimport { connect } from 'react-redux';\nimport {addAllTasks} from '../store/actionCreators';\n\nclass Todos extends React.Component {\n  // Did Mount, get data\n  componentDidMount() {\n    const data = {\n      status: 200,\n      tasks: [\n        {id: 1, title: \"Learn react for 2 hours\", finished: false},\n        {id: 2, title: \"Learn node for 2 hours\", finished: true},\n        {id: 3, title: \"Learn vue js for 2 hours\", finished: false},\n        {id: 4, title: \"Play xbox one for 1 hour\", finished: false}\n      ]\n    }\n\n    //dispatch data to store\n    this.props.dispatchData(data);\n  }\n\n  render() {\n    return (\n      <div className='tasks-wrapper'>\n        <div className='tasks-container'>\n          {/*Header Part - Task Input Box*/}\n          <Header />\n\n          {/*List Part - Task List*/}\n          <List />\n          {/*Below also works in the create-react-app, you don't have to use arrow func or bind this*/}\n          {/*<List tasksArr={tasks} handleCheckBoxChange={this.handleTasksFinish}/>*/}\n\n          {/*Footer Part - Task Control and Delete Btn*/}\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // return newly matched store dispatch to component props\n    dispatchData(data){\n      // get action\n      let action = addAllTasks(data.tasks);\n      // dispatch action to reducer to save data as new state\n      dispatch(action);\n    }\n  }\n}\n\n// export default App;\nexport default connect(null, mapDispatchToProps)(Todos);\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types'\n\n//import from antd icon\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons'\n\n\nfunction TextInput(props) {\n  // get props\n  const {inputTitle, inputType, className, value, onChange, onBlur} = props;\n\n  // store initial props.inputType, the state input type can be set to \"text\"\n  const [type, setType] = useState(props.inputType)\n\n  // icon style object ready to use\n  const iconStyle = {\n    fontSize: \"14px\",\n    position: \"absolute\",\n    right: \"0\",\n    height: \"30px\",\n    marginTop: \"8px\",\n    boxSizing: \"border-box\",\n    color: \"#ccc\",\n    minWidth: \"30px\"\n  }\n\n  // handle eye icon onClick event\n  function handleEyeSwitch(){\n    if(type === \"password\") {\n      setType(\"text\") // if current type === \"password\", then we switch it to \"text\"\n    } else {\n      setType(\"password\")\n    }\n  }\n\n  // prepare eyeIconDom, dynamic render based on input type\n  // if input type === password, we render eye invisible icon dom, else we render eye icon dom\n  const eyeIconDom = (\n    <a onClick={()=>{handleEyeSwitch()}}>\n      {type === \"password\" ? <EyeInvisibleOutlined style={iconStyle}/>: <EyeOutlined style={iconStyle} />}\n    </a>\n  )\n\n  // render\n  return (\n    <>\n      <div style={{position: \"relative\", marginTop: \"15px\"}}>\n        <label htmlFor={inputTitle}>{inputTitle}</label>\n        <input\n          type={type}\n          className={\"text-input \" + (className ? className: \"\")}\n          id={inputTitle}\n          value={value}\n          style={{width: \"100%\"}}\n          onChange={(e) => onChange(e)}\n          onBlur={(e) => onBlur(e)}\n        />\n        {/*If props.inputType is password, we render this icon, if the type is text, we do not render any icon*/}\n        {inputType===\"password\" ? eyeIconDom : null}\n      </div>\n    </>\n  )\n}\n\n// specify Button component prop types\nTextInput.propTypes = {\n  inputTitle: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  inputType: PropTypes.string,\n  className: PropTypes.string\n}\n\nTextInput.defaultProps = {\n  inputType: \"text\"\n}\n\nexport default TextInput;","import React, { useState } from 'react';\n\n// import redux\nimport {connect} from 'react-redux';\n\n// import component\nimport Button from '../components/button/Button';\nimport TextInput from '../components/input/TextInput';\n\n// import custimazied hook, get language data.\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\n\n\nfunction Register(props) {\n  // for form data\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmedPassword: \"\"\n  })\n\n  // for form fields validations.\n  const [errors, setErrors] = useState({});\n\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const { locale } = props;\n  const pageText = useLanguagePageText(locale);\n\n  // handle email input change function\n  function handleEmailChange(e) {\n    // deep copy current state data\n    let formDataObj = JSON.parse(JSON.stringify(formData));\n    // change copied data\n    formDataObj.email = e.target.value;\n    // setState the changed copy data to state\n    setFormData(formDataObj);\n  }\n\n  // handle password input change function\n  function handlePasswordChange(e) {\n    // deep copy current state data\n    let formDataObj = JSON.parse(JSON.stringify(formData));\n    // change copied data\n    formDataObj.password = e.target.value;\n    // setState the changed copy data to state\n    setFormData(formDataObj);\n  }\n\n  // handle email input change function\n  function handleConfirmedPasswordChange(e) {\n    // deep copy current state data\n    let formDataObj = JSON.parse(JSON.stringify(formData));\n    // change copied data\n    formDataObj.confirmedPassword = e.target.value;\n    // setState the changed copy data to state\n    setFormData(formDataObj);\n  }\n\n  //validate field\n  function validateField(...field) {\n    // deep copy errors state\n    let errorsObj = JSON.parse(JSON.stringify(errors));\n\n    // email field validate\n    if(field.length === 0 || field.indexOf('email') >= 0){\n      let re = /^\\w+[\\w-]+@\\w+[\\w-]+(\\.[-\\w]+)+$/;\n      if(!formData.email) { // if no email input\n        errorsObj.email = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[0] : '';\n      }else if (!re.test(formData.email)){ // if there is email and NOT pass the reg test\n        errorsObj.email = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[1] : '';\n      }else { //if there is email input and pass the reg test\n        errorsObj.email = \"\";\n      }\n    }\n\n    // password field validate\n    if(field.length === 0 || field.indexOf('password') >= 0){\n      // password has to be 6-15 in length, no Space\n      // password needs to include at least one letter, capital letter, number, and special character.\n      let regArray = [/^\\S{6,15}$/, /[A-Z]/, /[a-z]/, /[0-9]/, /[!@#$%^&*)(_\\-=?/<>.,+|~`]/];\n      let testResult = regArray.every(e => e.test(formData.password));\n      if(!formData.password) { // if no password input\n        errorsObj.password = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[2] : '';\n      }else if(!testResult){ // if the password NOT pass the reg test.\n        errorsObj.password = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[3] : '';\n      }else{ //if there is email input\n        errorsObj.password = \"\";\n      }\n    }\n\n    // confirmed password field validate\n    if(field.length === 0 || field.indexOf('confirmedPassword') >= 0){\n      if(!formData.confirmedPassword) { // if no confirm password input\n        errorsObj.confirmedPassword = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[4] : '';\n      } else { //if confirm password looks good\n        errorsObj.confirmedPassword = \"\";\n      }\n    }\n\n    //matching password and confirm password\n    if(field.length === 0 || field.indexOf('matchPassword') >= 0) {\n      if (formData.confirmedPassword !== formData.password) { // if not matching\n        errorsObj.confirmedPassword = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[5] : '';\n      } else { //if confirm password looks good\n        errorsObj.confirmedPassword = \"\";\n      }\n    }\n\n    // set error state\n    setErrors(errorsObj);\n\n    // once click submit btn, validate errorsObj.\n    for (let k in errorsObj) {\n      if(!!errorsObj[k]){\n        return false; // if there is item in errorsObj: Not pass\n      }\n    }\n    return true; // if there is NO item in errorObj: Passed;\n  }\n\n  // handle form submit\n  function onSubmit() {\n    // run validate func, it validates all fields when no parameters passing in;\n    const validateResult = validateField();\n\n    // do something once passed or NOT passed.\n    if(validateResult){\n      React.$auth.setUserAuth(formData.email); // set auth;\n      props.history.push('/') // redirect to home page;\n      React.$notice.success(pageText.signUpNoticeMsg[0],\n        pageText.signUpNoticeMsg[1], 6)\n    }else{\n      React.$notice.error(pageText.signUpNoticeMsg[2],\n        pageText.signUpNoticeMsg[3], 6)\n    }\n  }\n\n  // render virtual element\n  return (\n    <div className=\"register-wrapper\">\n      <div className=\"register-container\">\n        <div>\n          <h3>{pageText.signUpTitle || \"\"}</h3>\n        </div>\n        <form className=\"general-form\">\n          <TextInput\n            inputTitle={pageText.signUpInputTitle ? pageText.signUpInputTitle[0] : \"\"}\n            value={formData.email}\n            onChange={(e) => handleEmailChange(e)}\n            onBlur={() => validateField(\"email\")}\n          />\n          <span className=\"input-error\">{errors.email || \"\"}</span>\n          <TextInput\n            inputTitle={pageText.signUpInputTitle ? pageText.signUpInputTitle[1] : \"\"}\n            value={formData.password}\n            inputType=\"password\"\n            onChange={(e) => handlePasswordChange(e)}\n            onBlur={() => validateField(\"password\", \"matchPassword\")}\n          />\n          <span className=\"input-error\">{errors.password || \"\"}</span>\n          <TextInput\n            inputTitle={pageText.signUpInputTitle ? pageText.signUpInputTitle[2] : \"\"}\n            value={formData.confirmedPassword}\n            inputType=\"password\"\n            onChange={(e) => handleConfirmedPasswordChange(e)}\n            onBlur={() => validateField(\"confirmedPassword\", \"matchPassword\")}\n          />\n          <span className=\"input-error\">{errors.confirmedPassword || \"\"}</span>\n          <Button showBtn={true} btnClass=\"sign-up-btn\" value={pageText.signUpSubmitBtn || \"\"} onClickFunction={() => onSubmit()}/>\n        </form>\n      </div>\n    </div>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.locale\n  }\n}\n\n// export component\nexport default connect(mapStateToProps, null)(Register);","//import react\nimport React, {useState, useEffect} from 'react';\n\n//import props limitation\nimport PropTypes from 'prop-types';\n\nfunction LazyImage(props) {\n  // init state: image loading status\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(false);\n\n  //prepare props\n  const { src, alt, className, onErrorSrc, loadingSrc } = props;\n\n  // load image once DOM mounted\n  useEffect(() => {\n    const image = new Image();\n\n    // handle load and error;\n    const handleLoad = () => {\n      setLoaded(true);\n    }\n    const handleError = () => {\n      setError(true);\n    }\n\n    image.onload = handleLoad;\n    image.onerror = handleError;\n\n    // assign the src from props to image;\n    image.src = src;\n\n    return ()=>{\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n  }, [])\n\n\n  return (\n    <img\n      className={className}\n      src={error ? onErrorSrc : !loaded ? loadingSrc : src}\n      alt={alt.join(\" \")}\n    />\n  )\n\n}\n\n// default props\nLazyImage.defaultProps = {\n  src: '',\n  alt: 'images',\n  onErrorSrc: process.env.PUBLIC_URL + '/handleimage/image-not-found.jpg',\n  loadingSrc: process.env.PUBLIC_URL + '/handleimage/image-loading.jpg',\n  className: 'img'\n}\n\n// prop types\nLazyImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.array,\n  onErrorSrc: PropTypes.string,\n  loadingSrc: PropTypes.string,\n  className: PropTypes.string\n}\n\nexport default LazyImage;","// import react\nimport React from 'react';\n\n// import from antd\nimport { Layout, Menu } from \"antd\";\n\n// import from react-router\nimport {NavLink, useRouteMatch, withRouter} from \"react-router-dom\";\n\n//import custimized hook\nimport useLanguagePageText from \"../../custimizedHook/LanguageHook\";\n\n// import component\nimport LazyImage from \"../image/LazyImage\";\nimport {connect} from \"react-redux\";\n\nconst { Sider } = Layout;\n\nfunction MakeupNav (props) {\n  let { path, url } = useRouteMatch();\n\n  const { locale } = props;\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  return (\n    <div className=\"makeup-nav-wrapper\">\n      <Sider className=\"site-layout-background\" width={200}>\n        <Menu\n          mode=\"inline\"\n          selectedKeys={[props.history.location.pathname]}\n          defaultSelectedKeys={['1']}\n          defaultOpenKeys={['sub1']}\n          style={{ height: '100%' }}\n        >\n          <Menu.Item key={`${url}/blush`}>\n            <NavLink to={`${url}/blush`}>\n              <LazyImage\n                src=\"http://makeup-api.herokuapp.com/assets/blush-ff7992c3d7690d18a9b0224177cfbdedbc036497cf87c393ec01c6a2ef070258.svg\"\n                alt={[\"Blush\", \"product\"]}\n                className=\"makeup-nav-icon\"\n              />\n              {pageText.makeupsNav ? pageText.makeupsNav[0] : \"\"}\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key={`${url}/bronzer`}>\n            <NavLink to={`${url}/bronzer`}>\n              <LazyImage\n                src=\"http://makeup-api.herokuapp.com/assets/bronzer-2d423487eea3e4571229bd95689bb4eb4331f05740f3921ede7c7c765c7954b1.svg\"\n                alt={[\"Bronzer\", \"product\"]}\n                className=\"makeup-nav-icon\"\n              />\n              {pageText.makeupsNav ? pageText.makeupsNav[1] : \"\"}\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key={`${url}/eyebrow`}>\n            <NavLink to={`${url}/eyebrow`}>\n              <LazyImage\n                src=\"http://makeup-api.herokuapp.com/assets/eyebrow-fc49d8d480ace717203a21fe863c2231970063add91ed2f15181fe8e2d3b96b9.svg\"\n                alt={[\"Eyebrow\", \"product\"]}\n                className=\"makeup-nav-icon\"\n              />\n              {pageText.makeupsNav ? pageText.makeupsNav[2] : \"\"}\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key={`${url}/eyeliner`}>\n            <NavLink to={`${url}/eyeliner`}>\n              <LazyImage\n                src=\"http://makeup-api.herokuapp.com/assets/eyeliner-de329b6d65d721a45190051af1153e23202df9eb1c393d1ac65972376ee42d50.svg\"\n                alt={[\"Eyeliner\", \"product\"]}\n                className=\"makeup-nav-icon\"\n              />\n              {pageText.makeupsNav ? pageText.makeupsNav[3] : \"\"}\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key={`${url}/eyeshadow`}>\n            <NavLink to={`${url}/eyeshadow`}>\n              <LazyImage\n                src=\"http://makeup-api.herokuapp.com/assets/eyeshadow-67f9f8fd19df1862c95122f9b3460c7e6674d5a6d178cde00e6e4be908dd898a.svg\"\n                alt={[\"Eyeshadow\", \"product\"]}\n                className=\"makeup-nav-icon\"\n              />\n              {pageText.makeupsNav ? pageText.makeupsNav[4] : \"\"}\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key={`${url}/foundation`}>\n            <NavLink to={`${url}/foundation`}>\n              <LazyImage\n                src=\"http://makeup-api.herokuapp.com/assets/foundation-9985c8a404d4a19cf7a2985ed504958cadd9f71252a73c90b6a7178bf7075143.svg\"\n                alt={[\"Foundation\", \"product\"]}\n                className=\"makeup-nav-icon\"\n              />\n              {pageText.makeupsNav ? pageText.makeupsNav[5] : \"\"}\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key={`${url}/lipliner`}>\n            <NavLink to={`${url}/lipliner`}>\n              <LazyImage\n                src=\"http://makeup-api.herokuapp.com/assets/lip_liner-3f40bb63957aa7d47e3a2d1356b9380aa093271e5d58f3518181fd427e388d93.svg\"\n                alt={[\"Lip\", \"Liner\", \"product\"]}\n                className=\"makeup-nav-icon\"\n              />\n              {pageText.makeupsNav ? pageText.makeupsNav[6] : \"\"}\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key={props.history.location.pathname === url ? url : `${url}/lipsticks`}>\n            <NavLink to={`${url}/lipsticks`}>\n              <LazyImage\n                src=\"http://makeup-api.herokuapp.com/assets/lipstick-4531b48ee71839393857e24c8cbc4dede1f99d2284ef82a6eb0a2a4d03540a14.svg\"\n                alt={[\"Lipstick\", \"product\"]}\n                className=\"makeup-nav-icon\"\n              />\n              {pageText.makeupsNav ? pageText.makeupsNav[7] : \"\"}\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key={`${url}/mascara`}>\n            <NavLink to={`${url}/mascara`}>\n              <LazyImage\n                src=\"http://makeup-api.herokuapp.com/assets/mascara-0deeeb81e58f31ddbff07847bfd0820e5ecdba1419f4281da743a05e0d6b3e69.svg\"\n                alt={[\"Mascara\", \"product\"]}\n                className=\"makeup-nav-icon\"\n              />\n              {pageText.makeupsNav ? pageText.makeupsNav[8] : \"\"}\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key={`${url}/nailpolish`}>\n            <NavLink to={`${url}/nailpolish`}>\n              <LazyImage\n                src=\"http://makeup-api.herokuapp.com/assets/nail_polish-a7e7204834c0c30e8b57a1ba9896656331e228b0daa09d1705d1ab29bc0b7151.svg\"\n                alt={[\"Nail\", \"Polish\", \"product\"]}\n                className=\"makeup-nav-icon\"\n              />\n              {pageText.makeupsNav ? pageText.makeupsNav[9] : \"\"}\n            </NavLink>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    </div>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.locale\n  }\n}\n\n// export List component\nexport default connect(mapStateToProps, null)(withRouter(MakeupNav));","// Capitalization String - first letter capitalized\nexport function capString(strArr) {\n  if(strArr.length > 0) {\n    return strArr.map(str => {\n      // if str is existed, then return uppercase str\n      return str && str.replace(str[0], str[0].toUpperCase());\n    })\n  }\n  return null;\n}\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types'\n\n//import utils string filters\nimport { capString } from '../../utils/stringFilter';\n\n// import component\nimport LazyImage from '../image/LazyImage'\n\nfunction MakeupItem(props) {\n  // get props\n  const handleClick = props.handleClick;\n  const makeupItem = props.makeupItem;\n  const { name, image_link, brand, category, description, tag_list, product_colors } = makeupItem;\n\n  // init state\n  const [display, setDisplay] = useState(false)\n\n  //prepare data string using capString filter\n  let strArr = [name, brand, category, description];\n  const [fName, fBrand, fCategory, fDescription] = capString(strArr);\n  let tagArr = [...tag_list];\n  const fTags = capString(tagArr);\n\n  //prepare color circle data\n  let productColors = product_colors.slice(0, 10);\n\n  //prepare makeup tag element\n  const tagElement = fTags && fTags.map(tag => {\n    return <span className=\"makeup-tag makeup-light-text\" key={tag}>{tag}</span>\n  })\n\n  //prepare makeup detailed info element\n  const makeupDetailElement =\n    <div className=\"makeup-details\">\n      <span className=\"makeup-title\">{fName}</span>\n      <div className=\"makeup-tags\">\n        {tagElement}\n      </div>\n      <span className=\"makeup-length makeup-light-text\">{fDescription.length>=120?fDescription.substr(0, 120) + \"...\" : fDescription}</span>\n    </div>\n\n  //prepare makeup color circles element\n  const makeupColorElement =\n    <div className=\"makeup-colors\">\n      {productColors.map((color, index) => {\n        return <div className=\"makeup-color\" key={color.colour_name + index} style={{backgroundColor: color.hex_value}}></div>\n      })}\n    </div>\n\n\n  // render\n  return (\n    <>\n      {\n        !!props.makeupItem &&\n        <li className=\"makeup-item\" onClick={handleClick}>\n            {/* makeup image element */}\n            <LazyImage src={image_link} alt={[fBrand,fCategory, fName]} className=\"makeup-image\"/>\n            {/* Makeup detail info */}\n            {display && makeupDetailElement}\n            {/* Makeup bar info */}\n            <div className=\"makeup-info\">\n              <span className=\"makeup-title\">{fName}</span>\n              <span className=\"makeup-light-text makeup-type\">{fBrand}</span>\n              {/* Makeup color element */}\n              {makeupColorElement}\n            </div>\n            {/* Hover cover div */}\n            <div\n              className=\"makeup-item-cover\"\n              onMouseOver={() => setDisplay(true)}\n              onMouseOut={() => setDisplay(false)}\n            >\n            </div>\n        </li>\n      }\n    </>\n  )\n}\n\n// specify Button component prop types\nMakeupItem.propTypes = {\n  makeupItem: PropTypes.object.isRequired,\n  handleClick: PropTypes.func\n}\n\nMakeupItem.defaultProps = {\n}\n\nexport default MakeupItem;","import { useState, useEffect, useRef } from 'react';\n\n// hook for obtaining hook's previous state\nexport function usePrevious(value) {\n\tconst ref = useRef();\n\tuseEffect(() => {\n\t\tref.current = value;\n\t},[value]);\n\treturn ref.current;\n}\n\n// internal function for getting visible screen/windows width and height.\nfunction _getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\n// hook for getting windows dimensions (width and height)\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(_getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(_getWindowDimensions());\n    }\n    // add event listener onResize to window. everytime, after resizing, we re-triger handleResize func to re-setState.\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\n// hook for getting element width (Will work on the element height later)\nexport function useEleDimensions(element) {\n  const [ elementWidth, setElementWidth ] = useState(0);\n\n  // get list element width\n  useEffect(() => {\n    // set state after first time mounted\n    const handleUpdateEleWidth = () => {\n      if(element.current) {\n        setElementWidth(element.current.clientWidth);\n      }\n    }\n    window.addEventListener('resize', handleUpdateEleWidth);\n    handleUpdateEleWidth()\n    // on Component Will Unmount\n    return () => window.removeEventListener('resize', handleUpdateEleWidth);\n  }, [element.current])\n\n  return elementWidth;\n}\n\n// hook for getting element position scroll status (scrollTop and scrolling)\nexport function useScrollTop() {\n  const [ scrollStatus, setScrollStatus ] = useState({scrollTop: 0, scrolling: false});\n\tconst preScrollTop = usePrevious(scrollStatus.scrollTop);\n\n  useEffect(() => {\n    const handleOnScroll = () => {\n      setScrollStatus({\n        scrollTop: window.pageYOffset, // distance between visible screen's top to page top\n        scrolling: window.pageYOffset > preScrollTop\n      });\n    };\n    window.addEventListener('scroll', handleOnScroll);\n\t\treturn () => window.removeEventListener('scroll', handleOnScroll);\n  }, [scrollStatus])\n\n\treturn scrollStatus;\n}\n\n// hook for getting element top to body top distance after first time mounted\n// (not the distance to parent element, no dependencies, which means will not update after component updated)\nexport function useEleDistanceToTop (element) {\n  const [distanceToTop, setDistanceToTop] = useState(0);\n\n  useEffect(() => {\n    const handleUpdateEleDistanceToTop = () => {\n      let eleDistanceToTop = element.current ? (window.pageYOffset + element.current.getBoundingClientRect().top) : 0;\n      setDistanceToTop(eleDistanceToTop);\n    }\n    handleUpdateEleDistanceToTop();\n    window.addEventListener('resize', handleUpdateEleDistanceToTop);\n    // on Component Will Unmount\n    return () => window.removeEventListener('resize', handleUpdateEleDistanceToTop);\n  }, []);\n\n  return distanceToTop;\n}","// import react\nimport React, { useRef } from 'react';\nimport PropTypes from \"prop-types\";\n\n// import customized hook\nimport {useWindowDimensions, useEleDimensions, useScrollTop, useEleDistanceToTop} from '../../custimizedHook/elementPositions'\n\nfunction VerticalScrollVirtualList(props) {\n  // get data (props.list)\n  const list = props.list;\n  const listLength = list.length;\n\n  // get props.itemDimensions\n  const itemDimensions = props.itemDimensions;\n\n  // calculate screen height, after component mounted and updated\n  const { height } = useWindowDimensions();\n\n  // calculate scroll top\n  const { scrollTop } = useScrollTop();\n\n  // get bind list element\n  const listEleRef = useRef(null);\n  const listWrapperRef = useRef(null);\n\n  // get list element width\n  const elementWidth = useEleDimensions(listEleRef);\n\n  // calculate bind list element distance to page top\n  const eleDistanceToTop = useEleDistanceToTop(listWrapperRef);\n\n  // generate visible data items based on item dimensions, list position and window dimensions (visible area dimensions)\n  const itemHeight = itemDimensions.height; // item height\n  const itemWidth = itemDimensions.width; // item width\n  const itemsPerRow = Math.floor(elementWidth / itemWidth); // the number of item per row\n  const listTotalHeight = Math.ceil(listLength / itemsPerRow) * itemHeight; // the total height of list\n  const visibleRowsCount = Math.ceil(height / itemHeight) + 1; // visible screen can contain how many rows\n  const startIndex = Math.floor((scrollTop - eleDistanceToTop) / itemHeight); // the start position (row) index falls within visible screen\n  const endIndex = startIndex + visibleRowsCount; // the end position (row) index falls within visible screen\n  const startOffset = (scrollTop <= eleDistanceToTop) ? 0 : (scrollTop - eleDistanceToTop) - ((scrollTop - eleDistanceToTop) % itemHeight);// use for list ul transformation\n  const dataItemStart = startIndex <= 0 ? 0 : (startIndex * itemsPerRow); // data item start index\n  const dataItemEnd = (endIndex * itemsPerRow); // data item end index\n  const visibleItems = list.slice(dataItemStart, dataItemEnd); // slice all data to visible area data items based on data item start & end index\n\n  // prepare blank item to prevent flex display gap\n  let iElement = [];\n  const iElementLength =  Math.floor(elementWidth / itemWidth);\n  for(let i=0; i<iElementLength; i++) {\n    iElement.push(<i key={i} style={{width: itemWidth, height: 0}}></i>)\n  }\n\n  // prepare list css animation/translate3d\n  const getTransform = () => {\n    return `translate3d(0,${startOffset}px,0)`\n  }\n\n  // prepare list wrapper div style\n  const listWrapperStyle = {\n    'position': 'relative',\n    'height': listTotalHeight ? listTotalHeight : 0\n  }\n\n  // prepare list ul style\n  const listStyle = {\n    'listStyle': 'none',\n    'display': 'flex',\n    'flexDirection': 'row',\n    'justifyContent': 'space-between',\n    'flexWrap': 'wrap',\n    'padding': 0,\n    'marginBottom': 0,\n    'backgroundColor': 'rgba(255, 255, 255, 0)',\n    'position': 'absolute',\n    'top': 0,\n    'left': 0,\n    'right': 0,\n    'transform': getTransform()\n  }\n\n  return (\n    <>\n      <div className=\"list-wrapper\" ref={listWrapperRef} style={listWrapperStyle}>\n        <ul className=\"makeup-list\" ref={listEleRef} style={listStyle}>\n          {props.children(visibleItems)}\n          {/* iElement is for filling the gap of flex */}\n          {iElement}\n        </ul>\n      </div>\n    </>\n  )\n}\n\nVerticalScrollVirtualList.propTypes = {\n  list: PropTypes.array.isRequired,\n  itemDimensions: PropTypes.object.isRequired,\n  children: PropTypes.func.isRequired\n}\n\nexport default VerticalScrollVirtualList;","// import react\nimport React, {useState, useEffect} from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\n\nfunction LipsticksList(props) {\n  // init state\n  const [lipsticks, setLipsticks] = useState([]);\n\n  // fetch lipsticks data, and set state\n  let authNeeded = null;\n  useEffect(() => {\n    React.$http.getLipSticks().then(res => {\n      setLipsticks(res.data);\n    }).catch(err => {\n      authNeeded = <div>\n        <span>Sending request to a http API is not allowed from https, so used a little work around just for demo presenting. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetch.</span>\n        <iframe\n          title=\"Please give temp auth to request data.\"\n          width=\"100%\"\n          src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\n        ></iframe>\n      </div>\n      console.log(err)\n    })\n  }, [])\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map((item) => {\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\n      })\n    }\n    return null;\n  }\n  //handle item click\n  function routeTo(item) {\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Lipsticks </h3>\n      <VerticalScrollVirtualList list={lipsticks} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n      { authNeeded }\n    </>\n  )\n}\n\nexport default LipsticksList;","// import react\nimport React, {useState, useEffect} from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\n\nfunction NailPolishList(props) {\n  // init state\n  const [nailPolish, setNailPolish] = useState([]);\n\n  // fetch nail polish data, and set state\n  useEffect(() => {\n    console.log(\"getting nail polish data\")\n    React.$http.getNailPolish().then(res => {\n      setNailPolish(res.data);\n    }).catch(err => {\n      console.log(err)\n    })\n  }, [])\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map(item => {\n        return <MakeupItem key={item.id} makeupItem={item} />\n      })\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Nail Polish </h3>\n      <VerticalScrollVirtualList list={nailPolish} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n    </>\n  )\n}\n\nexport default NailPolishList;","// import react\nimport React, {useState, useEffect} from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\n\nfunction MascaraList(props) {\n  // init lipsticks state\n  const [mascara, setMascara] = useState([]);\n\n  // fetch nail polish data, and set state\n  useEffect(() => {\n    console.log(\"getting nail polish data\")\n    React.$http.getMascara().then(res => {\n      setMascara(res.data);\n    }).catch(err => {\n      console.log(err)\n    })\n  }, [])\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map(item => {\n        return <MakeupItem key={item.id} makeupItem={item} />\n      })\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Mascara </h3>\n      <VerticalScrollVirtualList list={mascara} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n    </>\n  )\n}\n\nexport default MascaraList;","// import react\nimport React, {useState, useEffect} from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\n\nfunction LipLinerList(props) {\n  // init state\n  const [lipLiner, setLipLiner] = useState([]);\n\n  // fetch nail polish data, and set state\n  useEffect(() => {\n    React.$http.getLipLiner().then(res => {\n      setLipLiner(res.data);\n    }).catch(err => {\n      console.log(err)\n    })\n  }, [])\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map(item => {\n        return <MakeupItem key={item.id} makeupItem={item} />\n      })\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Lip Liner </h3>\n      <VerticalScrollVirtualList list={lipLiner} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n    </>\n  )\n}\n\nexport default LipLinerList;","// import react\nimport React, {useState, useEffect} from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\n\nfunction FoundationList(props) {\n  // init state\n  const [foundation, setFoundation] = useState([]);\n\n  // fetch nail polish data, and set state\n  useEffect(() => {\n    React.$http.getFoundation().then(res => {\n      setFoundation(res.data);\n    }).catch(err => {\n      console.log(err)\n    })\n  }, [])\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map(item => {\n        return <MakeupItem key={item.id} makeupItem={item} />\n      })\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Foundation </h3>\n      <VerticalScrollVirtualList list={foundation} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n    </>\n  )\n}\n\nexport default FoundationList;","import React from 'react';\n\n// import from antd\nimport { Layout, Menu } from \"antd\";\n\n// import react router\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\n// import react-redux;\nimport {connect} from \"react-redux\";\n\n// import components\nimport MakeupNav from '../components/makeup/MakeupNav';\nimport LazyImage from '../components/image/LazyImage';\nimport LipsticksList from '../components/makeup/LipsticksList';\nimport NailPolishList from \"../components/makeup/NailPolishList\";\nimport MascaraList from \"../components/makeup/MascaraList\";\nimport LipLinerList from \"../components/makeup/LipLinerList\";\nimport FoundationList from \"../components/makeup/FoundationList\";\nimport useLanguagePageText from \"../custimizedHook/LanguageHook\";\n\n\n// get content components from Layout (Antd component)\nconst { Content } = Layout;\n\n\nfunction Makeup(props) {\n  let { path, url } = useRouteMatch();\n  const { locale } = props;\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  // render\n  return (\n    <div>\n      <h1>{pageText.makeupsTitle ? pageText.makeupsTitle : \"\"}</h1>\n      <h5>\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[0] : \"\"} <br />\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[1] : \"\"} <br />\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[2] : \"\"} <br />\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[3] : \"\"}\n      </h5>\n      <div className=\"image-grid\">\n        <div className=\"photo\">\n          <LazyImage\n            src=\"http://makeup-api.herokuapp.com/assets/brushes-6d2ab84631ecd47ced4fa07c47eb37521eb61c5a525965dafaf308f21338aa44.png\"\n            alt={[\"Brushes\"]}\n          />\n        </div>\n        <div className=\"photo photo-lips\">\n          <LazyImage\n            src=\"http://makeup-api.herokuapp.com/assets/lips-c35ec4a3350ec779c6bf6a785981ad9ef2e21bd9fe26a2be1c766d56edb2e11f.png\"\n            alt={[\"Lips\"]}\n          />\n        </div>\n        <div className=\"photo\">\n          <LazyImage\n            src=\"http://makeup-api.herokuapp.com/assets/nail-polish-4c7ee1a5f7a5cbaff9757c3bcfa4f6e89d7a6f2ffc49d267e04e010ba94cfd7c.png\"\n            alt={[\"Nail\", \"polish\"]}\n          />\n        </div>\n        <div className=\"photo\">\n          <LazyImage\n            src=\"http://makeup-api.herokuapp.com/assets/single-pot-4ce398e7d8c527ef248ace7a783cc52fd583375a25a7dcdb7b16f7a0958ccb17.png\"\n            alt={[\"Single\", \"pot\"]}\n          />\n        </div>\n        <div className=\"photo\">\n          <LazyImage\n            src=\"http://makeup-api.herokuapp.com/assets/eyeshadow-18fa4bed267bec6a67506150d9574259d0dcc67700e69de4ba720d9afe8204a2.png\"\n            alt={[\"Eyeshadow\"]}\n          />\n        </div>\n      </div>\n      <Layout className=\"makeup-layout-background\" style={{ padding: \"24px 0\", maxWidth: \"1200px\" }}>\n        {/* makeup page nav side bar component*/}\n        <MakeupNav />\n        {/* makeup page content component*/}\n        <Content style={{ padding: '0 24px', minHeight: 280 }}>\n          {/*Route View/output */}\n          <Switch>\n            <Route exact path={path} component={LipsticksList} />\n            <Route path={`${path}/foundation`} component={FoundationList} />\n            <Route path={`${path}/lipliner`} component={LipLinerList} />\n            <Route exact path={`${path}/lipsticks`} component={LipsticksList} />\n            <Route path={`${path}/mascara`} component={MascaraList} />\n            <Route path={`${path}/nailpolish`} component={NailPolishList} />\n          </Switch>\n        </Content>\n      </Layout>\n    </div>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.locale\n  }\n}\n\n// export List component\nexport default connect(mapStateToProps, null)(Makeup);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nfunction ButtonDark(props) {\n  // get props\n  const { showBtn, value, onClickFunction, btnClass, fullWidth }= props;\n\n  // render virtual element\n  return (\n    <>\n      <input\n        type=\"button\"\n        className={\"btn \" + (btnClass ? btnClass : \"\")}\n        value={value}\n        style={{display: showBtn ? \"block\" : \"none\", backgroundColor: \"#404040\", color: \"#ffffff\", width: fullWidth ? \"100%\" : \"auto\"}}\n        onClick={onClickFunction}\n      />\n    </>\n  )\n}\n\n// specify Button component prop types\nButtonDark.propTypes = {\n  showBtn: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n  btnClass: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  onClickFunction: PropTypes.func.isRequired\n}\n\nButtonDark.defaultProps = {\n  showBtn: true,\n  fullWidth: false\n}\n\nexport default ButtonDark;","import React, {useEffect} from 'react';\n\n// import components\nimport LazyImage from \"../components/image/LazyImage\";\nimport ButtonDark from \"../components/button/ButtonDark\";\n\nfunction MakeupsDetail(props) {\n  let makeupData = null;\n  if (props.location.state) {\n    makeupData = props.location.state.data;\n    localStorage.setItem(makeupData.id, JSON.stringify(makeupData))\n  }\n\n  // if there is no data passing in, need to using item id to request data from server\n  // however, the public api doesn't provide the id requesting. we store and get data from local storage.\n  if(!makeupData && props.location.pathname) {\n    const reg = /\\/(\\d+)$/;\n    const id = props.location.pathname.match(reg)[1];\n    makeupData = JSON.parse(localStorage.getItem(id));\n  }\n\n  //prepare makeup color circles element\n  const makeupColorElement =\n    <div className=\"makeup-colors\">\n      {makeupData.product_colors.map((color, index) => {\n        return <span key={color.colour_name + index}>\n          <span className=\"makeup-color\" style={{backgroundColor: color.hex_value}}></span>\n          <span className=\"color-name\">{color.colour_name}</span>\n        </span>\n      })}\n    </div>\n\n  //prepare makeup tag element\n  const tagElement = makeupData.tag_list.map(tag => {\n    return <span className=\"makeup-tag makeup-light-text\" key={tag}>{tag}</span>\n  })\n\n  // handle Add to Cart btn\n  const handleAddToCartBtn = () => {\n    console.log(\"clicked\")\n  }\n\n  // handle Add to Cart btn\n  const handlePurchaseBtn = () => {\n    console.log(\"purchase clicked\")\n  }\n\n  // estimated delivery date\n  const date = new Date();\n  console.log(date)\n\n  // render\n  return (\n    <>\n      {\n        !!makeupData &&\n        <div className=\"main-wrapper\">\n          <div className=\"detail-wrapper\">\n            <div className=\"leftWrapper\">\n              <LazyImage src={makeupData.image_link} className=\"detail-image\" alt={[makeupData.brand, makeupData.category]}/>\n              <div className=\"product-info\">\n                <h1>{ makeupData.name }</h1>\n                <p><strong>Brand: </strong>{makeupData.brand}</p>\n                <p><strong>Rating: </strong>{makeupData.rating ? makeupData.rating : \"No rating available\"}</p>\n                <div className=\"divider\"></div>\n                <p><strong>Colors: </strong></p>\n                { makeupColorElement }\n                <div className=\"divider\"></div>\n                { tagElement }\n                <div className=\"divider\"></div>\n                <p><strong>Price: </strong>${makeupData.price}</p>\n              </div>\n            </div>\n            <div className=\"rightWrapper\">\n              <select style={{width: \"100%\", padding: \"5px\", borderRadius: \"5px\"}} defaultValue=\"0\">\n                <option value=\"0\" disabled hidden>Qty</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n              </select>\n              <ButtonDark value=\"Add to Cart\" fullWidth={true} onClickFunction={()=>handleAddToCartBtn()}/>\n              <ButtonDark value=\"Purchase\" fullWidth={true} onClickFunction={()=>handlePurchaseBtn()}/>\n              <p>Estimated Delivery by</p>\n            </div>\n          </div>\n          <div className=\"content\">\n            <p><strong>Description: </strong>{makeupData.description}</p>\n          </div>\n        </div>\n      }\n    </>\n  )\n}\n\n\n// export List component\nexport default MakeupsDetail;","import React from 'react';\nimport { Layout } from 'antd'\nimport {Redirect, Route, Switch} from 'react-router-dom';\n\n\n// import Home from '../pages/Home';\nimport Dashboard from '../pages/Dashboard';\nimport UserCenter from '../pages/UserCenter';\nimport Todos from '../pages/Todos';\nimport Register from '../pages/Register';\nimport Makeups from '../pages/Makeups';\nimport MakeupsDetail from \"../pages/MakeupsDetail\";\n\nfunction AppContent() {\n  const { Content } = Layout;\n  return (\n    <>\n      <Content className=\"app-content\">\n        {/*Route View/output */}\n        <Switch>\n          <Route exact path=\"/\" render={() => {\n            return <Redirect to={\"/makeups\"} />\n          }} />\n          <Route path=\"/makeups\" component={Makeups} />\n          <Route path=\"/detail/makeups/\" component={MakeupsDetail} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/usercenter\" component={UserCenter} />\n          <Route exact path=\"/tasks\" component={Todos} />\n          <Route exact path=\"/register\" component={Register} />\n        </Switch>\n      </Content>\n    </>\n  )\n}\nexport default AppContent;","//import react\nimport React from 'react';\n\n//import react-router-dom\nimport { HashRouter as Router } from \"react-router-dom\"\n\n// import from react redux\nimport {connect} from \"react-redux\";\n\n//import antd\nimport { Layout, ConfigProvider, Spin } from 'antd';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport enUS from 'antd/lib/locale/en_US';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport { SmileOutlined } from '@ant-design/icons';\n\n//import page components\nimport AppFooter from './components/AppFooter';\nimport AppHeader from './components/AppHeader';\nimport AppContent from \"./components/AppContent\";\n\nmoment.locale('cn');\n\n// app file\nfunction App(props) {\n  const { locale } = props;\n  console.log(\"Thank you for checking my code! Please contact me via email 'seanli9018@gmail.com' if you are hiring passionate web developer!!!\")\n\n  const antIcon = <SmileOutlined style={{ fontSize: 30 }} spin />;\n  return (\n    <Spin spinning={props.loading} wrapperClassName=\"global-loading\" indicator={antIcon} tip=\"Working hard to get things you want!\" size=\"large\">\n      {/*ConfigProvider is for antdesign UI to pass language objects globally.*/}\n      <ConfigProvider locale={locale==='zh-cn' ? zhCN : enUS}>\n        <Router>\n          <Layout>\n            <AppHeader />\n            <AppContent />\n            <AppFooter />\n          </Layout>\n        </Router>\n      </ConfigProvider>\n    </Spin>\n  )\n}\n\nconst mapStateToProps = (state)=>{\n  return {\n    locale: state.locale,\n    loading: state.loading\n  }\n}\n\n// export List component\nexport default connect(mapStateToProps, null)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const APP_LANG = 'APP_LANG'\n\nclass Lang {\n  constructor() {\n    //init lang\n    this.userLanguage = '';\n\n    //in constructor, we need to get existing APP_LANG from localStorage\n    this.userLanguage = localStorage.getItem(APP_LANG);\n\n    // if there is no APP_LANG in localStorage, we set lang based on browser preference.\n    if(!this.userLanguage){\n      const userLang = window.navigator.language.toLowerCase() || 'en'; //get browser language preference\n      if(userLang === 'zh-cn') {\n        this.userLanguage = 'zh-cn'\n        localStorage.setItem(APP_LANG, this.userLanguage);\n      } else {\n        this.userLanguage = 'en'\n        localStorage.setItem(APP_LANG, this.userLanguage);\n      }\n    }\n  }\n\n  static getInstance(){\n    if(!this._instance){\n      this._instance = new Lang();\n    }\n    return this._instance\n  }\n\n  // set localStorage APP_LANG\n  setLang(language) {\n    this.userLanguage = language.toLowerCase();\n    localStorage.setItem(APP_LANG, this.userLanguage);\n  }\n\n  // when call this function, will dynamically import matching language JSON file.\n  languageLoader() {\n    switch (this.userLanguage.toLowerCase()) {\n      case 'zh-cn':\n        return import('../languages/zhcn.json');\n      case 'en-us':\n        return import('../languages/enus.json');\n      default:\n        return import('../languages/enus.json');\n    }\n  }\n}\n\n\n\nexport default Lang.getInstance();\n","// 1. import actionTypes\nimport {\n  ADD_ALL_TASKS,\n  ADD_ONE_TASK,\n  DEL_ONE_TASK,\n  CHANGE_ONE_FINISHED,\n  IS_ALL_FINISHED,\n  DEL_FINISHED_TASKS,\n  MOVE_TASK,\n  CHANGE_LOCALE,\n  OPEN_LOADING,\n  CLOSE_LOADING\n} from \"./actionTypes\";\n\n//1.1 import language instance\nimport lang from '../languages/lang';\n\n// 2. reducer: create default state\nconst defaultState = {\n  tasks: [],\n  locale: lang.userLanguage,\n  loading: false\n}\n\n// 3. reducer: core methods based on action type\nexport default function taskReducer(state=defaultState, action){\n  // 1.0 get all existing tasks from database\n  if(action.type === ADD_ALL_TASKS) {\n    // 1.1 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    // 1.2 passing actions data to the newState\n    newState.tasks = action.tasks;\n    return newState;\n  }\n  //2.add a new task\n  if(action.type === ADD_ONE_TASK) {\n    //2.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const tasks = newState.tasks;\n    const task = action.task\n    //2.1 push actions task data to the newState\n    tasks.push(task);\n    //2.2 set new state\n    return newState;\n  }\n  //3.delete one task\n  if(action.type === DEL_ONE_TASK) {\n    //3.0. clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const taskId = action.taskId;\n    const tasks = newState.tasks;\n    //3.1. use map loop, match task ID and return a new tempTasks array\n    tasks.forEach((task, index) => {\n      if(task.id === taskId) {\n        tasks.splice(index, 1);\n      }\n    })\n    //3.2. Assign new tasks array to newState\n    newState.tasks = tasks;\n    return newState;\n  }\n  //4.change one task's finished status\n  if(action.type === CHANGE_ONE_FINISHED) {\n    //4.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const tasks = newState.tasks;\n    const taskId = action.taskId;\n    const finishedStatus = action.finishedStatus;\n\n    //4.1. use loop match the task item and change it's finished status\n    tasks.forEach((task) => {\n      if(task.id === taskId) {\n        task.finished = finishedStatus;\n      }\n    })\n\n    //4.2. Assign new tempTasks array to new state\n    newState.tasks = tasks;\n    return newState;\n  }\n  //5.change all tasks finished status (select all and de-select all)\n  if(action.type === IS_ALL_FINISHED) {\n    //5.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const tasks = newState.tasks;\n    const flag = action.flag;\n\n    //5.1 According to flag, select/de-select all tasks\n    tasks.forEach((task) => {\n      if(flag){\n        task.finished = true;\n      } else {\n        task.finished = false;\n      }\n    })\n\n    //5.2 Assign new tempTasks array to new state\n    newState.tasks = tasks;\n    return newState;\n  }\n  //6.clean all finished tasks\n  if(action.type === DEL_FINISHED_TASKS) {\n    //6.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const tasks = newState.tasks;\n    const tempTasks = [];\n\n    //6.1 push all unfinished task to new Array\n    tasks.forEach((task) => {\n      if(!task.finished){\n        tempTasks.push(task);\n      }\n    })\n\n    //6.2 set State and re-rendering\n    newState.tasks = tempTasks;\n    return newState;\n  }\n  //7. move task item up and down\n  if(action.type === MOVE_TASK) {\n    //7.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const tasks = newState.tasks;\n    const index = action.index;\n    const diff = action.diff;\n\n    //7.1 handle item sorting\n    const item = tasks[index];\n    tasks.splice(index, 1);\n    tasks.splice(index + diff, 0, item);\n\n    //7.2 set state\n    newState.tasks = tasks;\n    return newState;\n  }\n  //8. Change locale\n  if(action.type === CHANGE_LOCALE) {\n    // 8.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const localeValue = action.localeValue;\n\n    // 8.1 handle change locale\n    newState.locale = localeValue;\n\n    // 8.2 set state\n    return newState\n  }\n  //9. global loading open;\n  if(action.type === OPEN_LOADING) {\n    // 9.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const loading = action.loading;\n\n    // 9.1 handle change loading status to true\n    newState.loading = loading;\n\n    // 9.2 set state\n    return newState\n  }\n  //10. global loading close;\n  if(action.type === CLOSE_LOADING) {\n    // 10.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const loading = action.loading;\n\n    // 8.1 handle change loading status to false\n    newState.loading = loading;\n\n    // 8.2 set state\n    return newState\n  }\n  return state;\n}\n\n\n","import { createStore }  from 'redux';\nimport reducers from './reducers'\n\nconst store = createStore(reducers);\n\nexport default store;","import { notification } from 'antd';\n\nclass AppNotification {\n    constructor(){\n        this.config = {}\n    }\n\n    _configNotice(message, description, duration){\n        this.config.message = message;\n        this.config.description = description;\n        this.config.duration = duration;\n    }\n\n    success(message=\"Notice\", description=\"Successfully operated\", duration=3) {\n        this._configNotice(message, description, duration);\n        notification.success(this.config)\n    }\n\n    info(message=\"Notice\", description=\"Infomation\", duration=3) {\n        this._configNotice(message, description, duration);\n        notification.info(this.config)\n    }\n\n    warning(message=\"Warning\", description=\"Warning message\", duration=5) {\n        this._configNotice(message, description, duration);\n        notification.warning(this.config)\n    }\n\n    error(message=\"Error\", description=\"Operation failed\", duration=5) {\n        this._configNotice(message, description, duration);\n        notification.error(this.config)\n    }\n}\n\nexport default new AppNotification();","import { Modal } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\n\nconst { confirm } = Modal;\n\nclass AppModal {\n    constructor(){\n        this.config = {\n            icon: <ExclamationCircleOutlined />\n        }\n    }\n\n    _configModal(onOk, onCancel, title, content){\n        this.config.onOk = onOk;\n        this.config.onCancel = onCancel;\n        this.config.title = title;\n        this.config.content = content;\n    }\n\n    confirm(onOK, onCancel, title=\"Do you want to delete this item?\", content=\"Click Yes or Cancel\") {\n        this._configModal(onOK, onCancel, title, content, );\n        confirm(this.config);\n    }\n}\n\nexport default new AppModal();","const EMAIL = 'EMAIL';\n\nclass Auth{\n  constructor() {\n    // initiate email\n    this.email = ''\n\n    //get email from local storage.\n    this.email = localStorage.getItem(EMAIL);\n  }\n\n  // achieve single instance\n  static getInstance(){\n    if(!this._instance){\n      this._instance = new Auth();\n    }\n    return this._instance;\n  }\n\n  // set auth email\n  setUserAuth(email){\n    this.email = email;\n    // then set new user auth email\n    localStorage.setItem(EMAIL, email);\n  }\n\n  // log out clear auth email\n  clearUserAuth(){\n    // clear this.email\n    this.email = '';\n    // clear localStorage\n    localStorage.removeItem(EMAIL);\n  }\n\n  // check if a user is logged in and authenticated\n  get is_authenticated() {\n    if(this.email) {\n      return true;\n    }else {\n      return false;\n    }\n  }\n}\n\nexport default Auth.getInstance();","// import axios xmlhttprequest package;\nimport axios from 'axios';\n\n// import actions to handle global loading effects\nimport {openLoading, closeLoading} from \"../store/actionCreators\";\n\n// import store for dispatching above actions\nimport store from \"../store/index\"\n\n// func for calculator current api request count which decides open/close loading effects\nlet requestCount = 0;\n\nfunction showGlobalLoading() {\n  if(requestCount === 0) { //if there is no previous requests, show loading\n    store.dispatch(openLoading())\n  }\n  requestCount ++; //increment 1 request count\n}\n\nfunction hideGlobalLoading() {\n  if(requestCount <= 1) { // if this is the last request, we hide loading;\n    store.dispatch(closeLoading());\n  }\n  requestCount --; // we decrease 1 request count\n}\n\n// the cors-anywhere is prefix is for compatibale with github pages https to send request to http api;\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json';\n// const BASE_URL = 'http://makeup-api.herokuapp.com/api/v1/products.json';\n\nclass Http {\n  constructor() {\n    this.http = axios.create({\n      baseURL: BASE_URL\n    })\n\n    // Add a request interceptor\n    this.http.interceptors.request.use(config => {\n      // set store.loading to true, start global page loading effects.\n      showGlobalLoading();\n      return config;\n    }, error => {\n      // Do something with request error\n      hideGlobalLoading();\n      return Promise.reject(error);\n    })\n\n    // Add a response interceptor\n    this.http.interceptors.response.use(response => {\n      // Any status code that lie within the range of 2xx cause this function to trigger\n      hideGlobalLoading();\n      // Do something with response data\n      return response;\n    }, error => {\n      // Any status codes that falls outside the range of 2xx cause this function to trigger\n      hideGlobalLoading();\n      // Do something with response error\n      return Promise.reject(error);\n    })\n  }\n\n  getLipSticks() {\n    const url = '?product_type=lipstick';\n    return this.http.get(url);\n  }\n\n  getNailPolish() {\n    const url = '?product_type=nail_polish';\n    return this.http.get(url);\n  }\n\n  getMascara() {\n    const url = '?product_type=mascara';\n    return this.http.get(url);\n  }\n\n  getLipLiner() {\n    const url = '?product_type=lip_liner';\n    return this.http.get(url);\n  }\n\n  getFoundation() {\n    const url = '?product_type=foundation';\n    return this.http.get(url);\n  }\n\n  getProductDetail(id) {\n    const url = `/${id}`\n    return this.http.get(url);\n  }\n  // getMovieDetails(movieId) {\n  //   const url = '/title/get-details?tconst=' + movieId;\n  //   return this.http.get(url);\n  // }\n}\n\nexport default new Http();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import Redux react-redux;\nimport { Provider } from 'react-redux';\nimport store from '../src/store/index';\n\nimport notice from '../src/utils/notification';\nimport modal from '../src/utils/modal';\nimport lang from '../src/languages/lang';\nimport auth from '../src/auth/auth';\nimport http from '../src/auth/http';\n\n// React.$notification = (message) => {\n//   console.log(message);\n//   notification.success({message: message});\n// }\n\n// bind notice class instance to React globally\nReact.$notice = notice;\n//bind modal class instance to React globally\nReact.$modal = modal;\n// bind lang class to React globally\nReact.$lang = lang;\n// bind frontend auth\nReact.$auth = auth;\n// bind http.js to send xmlhttprequest to API\nReact.$http = http;\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}