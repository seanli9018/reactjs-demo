{"version":3,"sources":["custimizedHook/LanguageHook.jsx","components/AppFooter.jsx","store/actionTypes.js","components/LangRadio.jsx","store/actionCreators.js","components/AppHeader.jsx","components/ReactEcharts.jsx","pages/Dashboard.jsx","pages/UserCenter.jsx","components/button/Button.jsx","components/Item.jsx","components/List.jsx","components/TodoHeader.jsx","components/TodoFooter.jsx","pages/Todos.jsx","components/input/TextInput.jsx","pages/Register.jsx","custimizedHook/elementPositions.jsx","components/image/LazyImage.jsx","components/makeup/MakeupNav.jsx","utils/stringFilter.js","components/makeup/MakeupItem.jsx","components/utils/VerticalScrollVirtualList.jsx","components/makeup/LipsticksList.jsx","components/makeup/NailPolishList.jsx","components/makeup/MascaraList.jsx","components/makeup/LipLinerList.jsx","components/makeup/FoundationList.jsx","pages/Makeups.jsx","components/button/ButtonDark.jsx","pages/MakeupsDetail.jsx","components/AppContent.jsx","App.js","reportWebVitals.js","languages/lang.js","store/reducers.js","store/index.js","utils/notification.js","utils/modal.js","auth/auth.js","auth/http.js","index.js"],"names":["useLanguagePageText","locale","useState","pageText","setPageText","useEffect","React","$lang","languageLoader","then","langData","default","connect","state","props","Footer","Layout","className","appFooter","ADD_ALL_TASKS","ADD_ONE_TASK","DEL_ONE_TASK","CHANGE_ONE_FINISHED","IS_ALL_FINISHED","DEL_FINISHED_TASKS","MOVE_TASK","CHANGE_LOCALE","OPEN_LOADING","CLOSE_LOADING","dispatch","dispatchChangeLocale","localValue","action","type","localeValue","Group","value","userLanguage","onChange","e","selectedLocaleValue","target","setLang","moment","Button","withRouter","Header","makeupsExsit","test","history","location","pathname","selectedKeys","mode","Item","icon","HeartOutlined","to","appHeader","UnorderedListOutlined","exact","UserOutlined","search","hash","fromDashboard","link","userId","$auth","email","replace","is_authenticated","activeClassName","onClick","clearUserAuth","logoutMsg","loginLogoutMsg","$notice","success","handleLogOut","ReactEcharts","echarts","GridComponent","LineChart","CanvasRenderer","ToolboxComponent","LegendComponent","PieChart","echartsInstance","echartsDOMElement","option","style","echartObj","getInstanceByDom","init","setOption","dispose","ref","defaultProps","height","width","Dashboard","id","display","flexDirection","xAxis","data","yAxis","series","smooth","legend","top","toolbox","show","feature","mark","dataView","readOnly","restore","saveAsImage","name","radius","center","roseType","itemStyle","borderRadius","usercenterTitle","showBtn","onClickFunction","btnClass","tasks","dispatchDelOneTask","taskId","delOneTask","dispatchChangeTaskFinished","finishedStatus","changeOneFinished","showBtns","setShowBtns","showUpBtns","setShowUpBtns","showDownBtns","setShowDownBtns","handleShowBtn","flag","index","handleShowDelBtn","undefined","handleUpBtns","length","handleDownBtns","item","itemIndex","handleMoveEvent","onMouseOver","onMouseOut","htmlFor","checked","finished","title","tasksBtns","itemId","finshedStatus","$modal","confirm","console","log","handleItemDelete","dispatchSortItem","diff","moveTask","map","task","dispatchAddOneTask","addOneTask","taskInput","setTaskInput","placeholder","tasksInputPlaceholder","handleInputChange","onKeyDown","keyCode","trim","handleKeyEvent","items","dispatchDelFinishedTasks","dispatchIsAllFinished","isAllFinished","finishedItems","finishedTaskCount","forEach","_calculateFinishedTasks","totalItems","tasksFooter","tasksFooterBtn","Todos","this","dispatchData","status","Component","TextInput","inputTitle","inputType","onBlur","setType","iconStyle","fontSize","position","right","marginTop","boxSizing","color","minWidth","eyeIconDom","EyeInvisibleOutlined","EyeOutlined","password","confirmedPassword","formData","setFormData","errors","setErrors","validateField","errorsObj","JSON","parse","stringify","field","indexOf","re","signUpValidateMsg","regArray","testResult","every","k","signUpTitle","signUpInputTitle","formDataObj","handleEmailChange","handlePasswordChange","handleConfirmedPasswordChange","signUpSubmitBtn","setUserAuth","push","signUpNoticeMsg","error","_getWindowDimensions","window","innerWidth","innerHeight","useElementGetBoundingClientRect","element","listenScroll","elementGetBoundingClientRect","setElementGetBoundingClientRect","handleUpdateEleClientRect","current","eleRect","getBoundingClientRect","left","addEventListener","removeEventListener","useScrollTop","scrollTop","scrolling","scrollStatus","setScrollStatus","preScrollTop","useRef","usePrevious","handleOnScroll","pageYOffset","LazyImage","loaded","setLoaded","setError","src","alt","onErrorSrc","loadingSrc","image","Image","handleLoad","handleError","onload","onerror","join","process","Sider","useRouteMatch","url","path","onSideBreak","setOnSideBreak","brokenSideNavRef","navElement","defaultSelectedKeys","defaultOpenKeys","makeupsNav","breakpoint","collapsedWidth","onBreakpoint","broken","capString","strArr","str","toUpperCase","MakeupItem","handleClick","makeupItem","image_link","brand","category","description","tag_list","product_colors","setDisplay","fName","fBrand","fCategory","fDescription","fTags","productColors","slice","tagElement","tag","makeupDetailElement","substr","makeupColorElement","backgroundColor","hex_value","colour_name","VerticalScrollVirtualList","list","listLength","itemDimensions","windowDimensions","setWindowDimensions","handleResize","useWindowDimensions","listEleRef","listWrapperRef","elementWidth","eleDistanceToTop","distanceToTop","setDistanceToTop","handleUpdateEleDistanceToTop","useEleDistanceToTop","itemHeight","itemWidth","itemsPerRow","Math","floor","listTotalHeight","ceil","visibleRowsCount","startIndex","startOffset","dataItemStart","dataItemEnd","visibleItems","iElement","iElementLength","i","listWrapperStyle","listStyle","children","LipsticksList","lipsticks","setLipsticks","onRequestError","setOnRequestError","authNeeded","$http","getLipSticks","res","catch","err","routeTo","NailPolishList","nailPolish","setNailPolish","getNailPolish","MascaraList","mascara","setMascara","getMascara","LipLinerList","lipLiner","setLipLiner","getLipLiner","FoundationList","foundation","setFoundation","getFoundation","Content","makeupsTitle","makeupsSubTitle","padding","maxWidth","minHeight","component","ButtonDark","fullWidth","MakeupsDetail","makeupData","localStorage","setItem","match","getItem","date","Date","rating","price","defaultValue","disabled","hidden","AppContent","render","Makeups","UserCenter","Register","loading","antIcon","SmileOutlined","spin","document","body","overflowY","spinning","wrapperClassName","indicator","tip","size","zhCN","enUS","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","APP_LANG","Lang","navigator","language","toLowerCase","_instance","getInstance","defaultState","lang","store","createStore","newState","splice","tempTasks","config","message","duration","_configNotice","notification","info","warning","Modal","ExclamationCircleOutlined","onOk","onCancel","content","onOK","_configModal","EMAIL","Auth","removeItem","requestCount","showGlobalLoading","hideGlobalLoading","http","axios","create","baseURL","interceptors","request","use","Promise","reject","response","get","notice","modal","auth","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c92ab707.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport default function useLanguagePageText(locale) {\r\n  const [pageText, setPageText] = useState({});\r\n\r\n    // get lang data\r\n  useEffect(()=>{\r\n    // after componentDidMount and componentDidUpdate, we need to get langData file and set page text\r\n    React.$lang.languageLoader().then((langData)=>{\r\n      setPageText(langData.default);\r\n    })\r\n  }, [locale])\r\n\r\n  return pageText;\r\n}","import React from 'react';\r\n\r\n// import from redux\r\nimport {connect} from \"react-redux\";\r\n\r\n// import from antd UI\r\nimport {Layout} from 'antd'\r\n\r\n// import custimazied hook, get language data.\r\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\r\n\r\nfunction AppFooter(props) {\r\n  const { Footer } = Layout;\r\n  const { locale } = props\r\n\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  return (\r\n    <>\r\n      <Footer className=\"app-footer\">\r\n        <div className=\"footer-info\">\r\n          {\r\n            !!pageText.appFooter && \r\n            <span><strong>{pageText.appFooter[0]}</strong> seanli9018@gmail.com; <strong>{pageText.appFooter[1] || ''}</strong> 312-825-9982</span>\r\n          }\r\n        </div>\r\n      </Footer>\r\n    </>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.locale\r\n  }\r\n}\r\n\r\n// export component\r\nexport default connect(mapStateToProps, null)(AppFooter);","//1.添加所有的已经存在的任务\r\nexport const ADD_ALL_TASKS = 'add_all_tasks';\r\n//2.添加一条任务\r\nexport const ADD_ONE_TASK = 'add_one_task';\r\n//3.删除一条任务\r\nexport const DEL_ONE_TASK = 'del_one_task';\r\n//4.修改一条任务的完成状态\r\nexport const CHANGE_ONE_FINISHED = 'change_one_finished';\r\n//5.修改所有任务的完成状态（全选或全不选）\r\nexport const IS_ALL_FINISHED = 'is_all_finished';\r\n//6.清除所有已完成的任务\r\nexport const DEL_FINISHED_TASKS = 'del_finished_tasks';\r\n//7.move task item up and down\r\nexport const MOVE_TASK = 'move_task';\r\n//8. Change locale\r\nexport const CHANGE_LOCALE = 'change_locale';\r\n//9. Global loading state - open\r\nexport const OPEN_LOADING = 'open_loading';\r\n//10. Global loading state - close\r\nexport const CLOSE_LOADING = 'close_loading';","import React from 'react';\r\n\r\n//import from antd\r\nimport {  Radio } from 'antd';\r\n\r\nimport moment from \"moment\";\r\nimport {connect} from \"react-redux\";\r\nimport { changeLocale } from \"../store/actionCreators\";\r\n\r\n\r\nfunction LangRadio(props) {\r\n  const { dispatchChangeLocale } = props;\r\n\r\n  let handleLocale = e => {\r\n    let localeValue = {};\r\n    let selectedLocaleValue = e.target.value;\r\n\r\n    // set store locale state\r\n    dispatchChangeLocale(selectedLocaleValue);\r\n\r\n    // set localStorage APP_LANG\r\n    React.$lang.setLang(selectedLocaleValue);\r\n\r\n    if (!localeValue) {\r\n      moment.locale('en');\r\n    } else {\r\n      moment.locale('zh-cn');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"change-locale\">\r\n        <Radio.Group value={!!React.$lang.userLanguage ? React.$lang.userLanguage : 'en'} onChange={handleLocale}>\r\n          <Radio.Button key=\"en\" value='en'>\r\n            English\r\n          </Radio.Button>\r\n          <Radio.Button key=\"cn\" value='zh-cn'>\r\n            中文\r\n          </Radio.Button>\r\n        </Radio.Group>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.locale\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatchChangeLocale(localValue){\r\n      const action = changeLocale(localValue);\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\n// export List component\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LangRadio);","// 导入actionTypes\r\nimport {\r\n  ADD_ALL_TASKS,\r\n  ADD_ONE_TASK,\r\n  DEL_ONE_TASK,\r\n  CHANGE_ONE_FINISHED,\r\n  IS_ALL_FINISHED,\r\n  DEL_FINISHED_TASKS,\r\n  MOVE_TASK,\r\n  CHANGE_LOCALE, OPEN_LOADING, CLOSE_LOADING\r\n} from \"./actionTypes\";\r\n\r\n//1.添加所有的已经存在的任务\r\nexport const addAllTasks = (tasks)=>{\r\n  return {\r\n    type: ADD_ALL_TASKS,\r\n    tasks\r\n  }\r\n}\r\n//2.添加一条任务\r\nexport const addOneTask = (task)=>{\r\n  return {\r\n    type: ADD_ONE_TASK,\r\n    task\r\n  }\r\n}\r\n//3.删除一条任务\r\nexport const delOneTask = (taskId)=>{\r\n  return {\r\n    type: DEL_ONE_TASK,\r\n    taskId\r\n  }\r\n}\r\n//4.修改一条任务的完成状态\r\nexport const changeOneFinished = (taskId, finishedStatus)=>{\r\n  return {\r\n    type: CHANGE_ONE_FINISHED,\r\n    taskId,\r\n    finishedStatus\r\n  }\r\n}\r\n//5.修改所有任务的完成状态（全选或全部选）\r\nexport const isAllFinished = (flag)=>{\r\n  return {\r\n    type: IS_ALL_FINISHED,\r\n    flag\r\n  }\r\n}\r\n//6.清除所有已完成的任务\r\nexport const delFinishedTasks = ()=>{\r\n  return {\r\n    type: DEL_FINISHED_TASKS,\r\n  }\r\n}\r\n\r\n//7. move task item up and down\r\nexport const moveTask = (index, diff) => {\r\n  return{\r\n    type: MOVE_TASK,\r\n    index,\r\n    diff\r\n  }\r\n}\r\n\r\n//8. handle locale\r\nexport const changeLocale = (localeValue) => {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    localeValue\r\n  }\r\n}\r\n\r\n//9. global loading open;\r\nexport const openLoading = () => {\r\n  return {\r\n    type: OPEN_LOADING,\r\n    loading: true\r\n  }\r\n}\r\n\r\n//10. global loading close;\r\nexport const closeLoading = () => {\r\n  return {\r\n    type: CLOSE_LOADING,\r\n    loading: false\r\n  }\r\n}","// import from react\r\nimport React from 'react';\r\n\r\n// import from antd\r\nimport {Layout, Menu} from 'antd'\r\nimport { DashboardOutlined, HomeOutlined, UnorderedListOutlined, UserOutlined, HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import from react-router-dom\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\n// import from redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// import from components\r\nimport LangRadio from \"./LangRadio\";\r\n\r\n// import custimazied hook, get language data.\r\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\r\n\r\nfunction AppHeader(props) {\r\n  const { Header } = Layout;\r\n  const { locale } = props\r\n\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  // handle log out btn click event\r\n  function handleLogOut() {\r\n    // clear user auth\r\n    React.$auth.clearUserAuth();\r\n    // redirect to log in page\r\n    props.history.replace('/');\r\n    // show logout successfully modal\r\n    let logoutMsg = pageText.loginLogoutMsg ? pageText.loginLogoutMsg[1] : \"\";\r\n    React.$notice.success(logoutMsg, '', 6);\r\n  }\r\n\r\n  // test to see if nav selected keys match\r\n  const makeupsReg = /\\/makeups/\r\n  const makeupsExsit = makeupsReg.test(props.history.location.pathname);\r\n  return (\r\n    <>\r\n      <Header \r\n        className=\"app-header\"\r\n      >\r\n        <Menu selectedKeys={[props.history.location.pathname]} mode=\"horizontal\">\r\n          {/*Route Navi*/}\r\n          <Menu.Item key={makeupsExsit ? [props.history.location.pathname] : \"\"} icon={<HeartOutlined />}>\r\n            <NavLink to=\"/makeups\">{!!pageText.appHeader ? pageText.appHeader[4] : \"\"}</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/tasks\" icon={<UnorderedListOutlined />}>\r\n            <NavLink exact to=\"/tasks\">{!!pageText.appHeader ? pageText.appHeader[3] : \"\"}</NavLink>\r\n          </Menu.Item>\r\n          {/*<Menu.Item key=\"/dashboard\" icon={<DashboardOutlined />}>*/}\r\n          {/*  <NavLink exact to=\"/dashboard\">{!!pageText.appHeader ? pageText.appHeader[1] : \"\"}</NavLink>*/}\r\n          {/*</Menu.Item>*/}\r\n          <Menu.Item key=\"/usercenter\" icon={<UserOutlined />}>\r\n            <NavLink exact to={{\r\n              pathname: \"/usercenter\",\r\n              search: \"?name=sean&age=18\",\r\n              hash: \"#hashtag\",\r\n              state: {fromDashboard: true, link: 'google.com', userId: React.$auth.email ? React.$auth.email.replace(/@[\\s\\S]+/, \"\") : \"\"}\r\n            }}>\r\n              {!!pageText.appHeader ? pageText.appHeader[2] : \"\"}\r\n            </NavLink>\r\n          </Menu.Item>\r\n        </Menu>\r\n        <div className=\"header-info\">\r\n          {/*if authenticated, show username, else show signup/login btn*/}\r\n          { React.$auth.is_authenticated ?\r\n            <span className=\"header-signup\">\r\n              <NavLink\r\n                exact\r\n                activeClassName=\"link-text-active\"\r\n                to=\"/usercenter\">\r\n                {React.$auth.email.replace(/@[\\s\\S]+/, '')}\r\n              </NavLink>\r\n              <span className=\"header-logout\" onClick={() => handleLogOut()}>Log out</span>\r\n            </span> :\r\n            <span className=\"header-signup\">\r\n              <NavLink\r\n                exact\r\n                activeClassName=\"link-text-active\"\r\n                to=\"/register\">\r\n                {!!pageText.appHeader ? pageText.appHeader[5] : \"\"}\r\n              </NavLink>\r\n            </span>\r\n          }\r\n          <LangRadio />\r\n        </div>\r\n      </Header>\r\n    </>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.locale\r\n  }\r\n}\r\n\r\n// export List component\r\nexport default connect(mapStateToProps, null)(withRouter(AppHeader));","// import from react\r\nimport React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import from echarts\r\nimport * as echarts from 'echarts/core';\r\nimport {\r\n  GridComponent,\r\n  ToolboxComponent,\r\n  LegendComponent\r\n} from 'echarts/components';\r\nimport {\r\n  LineChart,\r\n  PieChart\r\n} from 'echarts/charts';\r\nimport {\r\n  CanvasRenderer\r\n} from 'echarts/renderers';\r\n\r\nfunction ReactEcharts(props) {\r\n  echarts.use(\r\n    [GridComponent, LineChart, CanvasRenderer, ToolboxComponent,\r\n      LegendComponent, PieChart]\r\n  );\r\n  const echartsInstance = echarts; //echarts object\r\n  let echartsDOMElement = null; //echarts dom\r\n  let { option, style, className } = props // get props\r\n\r\n  // get real dom on didMount\r\n  useEffect(() => {\r\n    //get dom element instance, if no instance then init one\r\n    let echartObj = echartsInstance.getInstanceByDom(echartsDOMElement) ||\r\n      echartsInstance.init(echartsDOMElement);\r\n\r\n    //set echarts option\r\n    echartObj.setOption(option);\r\n\r\n    // Destory the element on WillUnmount\r\n    return function destroyEchartElement() {\r\n      echartObj.dispose();\r\n    }\r\n  }, [option])\r\n\r\n  return (\r\n    <div\r\n      ref={(e) => {echartsDOMElement = e}}\r\n      style={style}\r\n      className={className}\r\n    >Echarts</div>\r\n  )\r\n}\r\n\r\n// specify propTypes for component\r\nReactEcharts.propTypes = {\r\n  option: PropTypes.object.isRequired,\r\n  style: PropTypes.object,\r\n  className: PropTypes.string\r\n}\r\n\r\nReactEcharts.defaultProps = {\r\n  style: {height: \"300px\", width: \"500px\"},\r\n  className: \"\"\r\n}\r\n\r\nexport default ReactEcharts;","import React, {useEffect} from 'react';\r\n\r\n// import components\r\nimport ReactEcharts from \"../components/ReactEcharts\";\r\n\r\n\r\nfunction Dashboard() {\r\n  let option1 = {\r\n    xAxis: {\r\n      type: 'category',\r\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [{\r\n      data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n      type: 'line',\r\n      smooth: true\r\n    }]\r\n  }\r\n\r\n  let option2 = {\r\n    legend: {\r\n      top: 'bottom'\r\n    },\r\n    toolbox: {\r\n      show: true,\r\n      feature: {\r\n        mark: {show: true},\r\n        dataView: {show: true, readOnly: false},\r\n        restore: {show: true},\r\n        saveAsImage: {show: true}\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Pattern',\r\n        type: 'pie',\r\n        radius: [50, 100],\r\n        center: ['50%', '50%'],\r\n        roseType: 'area',\r\n        itemStyle: {\r\n          borderRadius: 8\r\n        },\r\n        data: [\r\n          {value: 40, name: 'rose 1'},\r\n          {value: 38, name: 'rose 2'},\r\n          {value: 32, name: 'rose 3'},\r\n          {value: 30, name: 'rose 4'},\r\n          {value: 28, name: 'rose 5'},\r\n          {value: 26, name: 'rose 6'},\r\n          {value: 22, name: 'rose 7'},\r\n          {value: 18, name: 'rose 8'}\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n  return (\r\n    <div id=\"main-container\" style={{display: 'flex', flexDirection: 'row'}}>\r\n      <ReactEcharts option={option1} />\r\n      <ReactEcharts option={option2} style={{\"width\": \"500px\", \"height\": \"350px\"}}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\n// import custimazied hook, get language data.\r\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\r\n\r\nfunction UserCenter(props) {\r\n  //const query = new URLSearchParams(props.location.search);\r\n  //const userId = props.location.state ? props.location.state.userId : '';\r\n\r\n  const { locale } = props\r\n\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  return (\r\n    <div>\r\n      <h1>{!!pageText.usercenterTitle && pageText.usercenterTitle[0]}</h1>\r\n      {\r\n        !!React.$auth.is_authenticated &&\r\n        <span>{!!pageText.usercenterTitle && pageText.usercenterTitle[1] + React.$auth.email.replace(/@[\\s\\S]+/, \"\")}</span>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.locale\r\n  }\r\n}\r\n\r\n// export user center component\r\nexport default connect(mapStateToProps, null)(UserCenter);","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Button(props) {\r\n  // get props\r\n  const { showBtn, value, onClickFunction, btnClass }= props;\r\n\r\n  // render virtual element\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"button\"\r\n        className={\"btn \" + (btnClass ? btnClass : \"\")}\r\n        value={value}\r\n        style={{display: showBtn ? \"block\" : \"none\"}}\r\n        onClick={() => onClickFunction()}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\n// specify Button component prop types\r\nButton.propTypes = {\r\n  showBtn: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  btnClass: PropTypes.string,\r\n  onClickFunction: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Button;","// React imports\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n// react-redux imports\r\nimport { connect } from 'react-redux';\r\nimport {changeOneFinished, delOneTask} from \"../store/actionCreators\";\r\n\r\n// components imports\r\nimport Button from './button/Button';\r\n\r\n// import custimazied hook, get language data.\r\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\r\n\r\nfunction Item(props) {\r\n  const [showBtns, setShowBtns] = useState(false);\r\n  const [showUpBtns, setShowUpBtns] = useState(false);\r\n  const [showDownBtns, setShowDownBtns] = useState(false);\r\n  const { locale } = props;\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  //flag is a boolean, flag = onMouseOver ? true : false\r\n  function handleShowDelBtn(flag) {\r\n    setShowBtns(flag);\r\n  }\r\n\r\n  //if index !== 0, then show up btn\r\n  function handleUpBtns(index) {\r\n    if(index !== 0 ){\r\n      setShowUpBtns(true);\r\n    }else{\r\n      setShowUpBtns(false);\r\n    }\r\n  }\r\n\r\n  //if index !== last index, then show down btn\r\n  function handleDownBtns(index) {\r\n    if(index !== tasks.length-1){\r\n      setShowDownBtns(true);\r\n    }else{\r\n      setShowDownBtns(false);\r\n    }\r\n  }\r\n \r\n\r\n  function handleShowBtn(flag, index){\r\n    // Mouse hover ? show : hide\r\n    handleShowDelBtn(flag);\r\n    \r\n    // control Up btn and down btn show/hide\r\n    if(index !== undefined){\r\n      handleUpBtns(index);\r\n      handleDownBtns(index);\r\n    }\r\n  }\r\n\r\n  // finished ? dispatch delete task : prompt confirm modal\r\n  function handleItemDelete(itemId, finshedStatus){\r\n    const { dispatchDelOneTask } = props;\r\n    if(finshedStatus){\r\n      dispatchDelOneTask(itemId);\r\n    }else{\r\n      // prompt Confirm modal\r\n      React.$modal.confirm(()=>{ // Ok clicked\r\n        dispatchDelOneTask(itemId);\r\n      }, ()=>{ // Cancel clicked\r\n        console.log(\"Clicked Cancel\");\r\n      }, \"Do you really want to delete unfinished task?\")\r\n    }\r\n  }\r\n\r\n  const { item, itemIndex, dispatchChangeTaskFinished, handleMoveEvent, tasks } = props;\r\n\r\n  return (\r\n    <li className=\"task-item\"\r\n        onMouseOver={() => handleShowBtn(true, itemIndex)}\r\n        onMouseOut={() => handleShowBtn(false)}\r\n    >\r\n      <label htmlFor={\"item-check-box\"+item.id}>\r\n        <input\r\n          className=\"item-check-box\"\r\n          type=\"checkbox\"\r\n          name=\"item-check-box\"\r\n          id={\"item-check-box\"+item.id}\r\n          checked={item.finished}\r\n          onChange={() => dispatchChangeTaskFinished(item.id, !item.finished)}/>\r\n        <span>{item.title}</span>\r\n      </label>\r\n      <div className=\"button-group\">\r\n        <Button\r\n          value={!!pageText.tasksBtns?pageText.tasksBtns[0]:\"\"}\r\n          showBtn={showBtns && showUpBtns}\r\n          onClickFunction={() => handleMoveEvent(itemIndex, -1)}\r\n        />\r\n        <Button\r\n          value={!!pageText.tasksBtns?pageText.tasksBtns[1]:\"\"}\r\n          showBtn={showBtns && showDownBtns}\r\n          onClickFunction={() => handleMoveEvent(itemIndex, 1)}\r\n        />\r\n        <Button\r\n          value={!!pageText.tasksBtns?pageText.tasksBtns[2]:\"\"}\r\n          showBtn={showBtns}\r\n          btnClass=\"delete-btn\"\r\n          onClickFunction={() => handleItemDelete(item.id, item.finished)}\r\n        />\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\nItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  handleMoveEvent: PropTypes.func.isRequired,\r\n  itemIndex: PropTypes.number.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.tasks,\r\n    locale: state.locale\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatchDelOneTask(taskId) {\r\n      // get action object ready\r\n      const action = delOneTask(taskId);\r\n      dispatch(action);\r\n    },\r\n    dispatchChangeTaskFinished(taskId, finishedStatus) {\r\n      // get action object ready\r\n      const action = changeOneFinished(taskId, finishedStatus);\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\n// export Item component\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\r\n\r\n// import components\r\nimport Item from './Item';\r\n\r\n// react-redux imports\r\nimport { connect } from 'react-redux';\r\nimport { moveTask } from \"../store/actionCreators\";\r\n\r\n\r\n// List component\r\nfunction List(props) {\r\n  // get tasks from props;\r\n  const { tasks, dispatchSortItem } = props;\r\n  return (\r\n    <ul className=\"task-list\">\r\n        {tasks.map((task, index) => (\r\n          <Item item={task} itemIndex={index} key={task.id} handleMoveEvent={(index, diff) => dispatchSortItem(index, diff)}/>\r\n        ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.tasks\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatchSortItem(index, diff){\r\n      const action = moveTask(index, diff);\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\n// export List component\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import React, {useState} from 'react';\r\n\r\n//import react-redux\r\nimport { connect } from 'react-redux';\r\nimport { addOneTask } from '../store/actionCreators';\r\n\r\n// import custimazied hook, get language data.\r\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\r\n\r\nfunction TodoHeader(props) {\r\n  const [taskInput, setTaskInput] = useState('');\r\n  const { locale } = props;\r\n\r\n  //get lang data, passing \"locale\" to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  function handleInputChange(e) {\r\n    setTaskInput(e.target.value);\r\n  }\r\n\r\n  // handle Enter key down event\r\n  function handleKeyEvent(e) {\r\n    // 0. initial and get all tasks data\r\n    const { tasks } = props;\r\n\r\n    // 1. handle key down event; dispatch input data to store state\r\n    if(e.keyCode === 13 && !! taskInput) {\r\n      // calculate last task's id based on store state length\r\n      const lastItemId = tasks.length === 0 ? 1 : tasks[tasks.length - 1].id\r\n\r\n      // organize the newly created task object\r\n      const item = {\r\n        id: lastItemId + 1,\r\n        title: taskInput.trim(),\r\n        finished: false\r\n      }\r\n\r\n      // dispatch new tasks and set store state\r\n      const { dispatchAddOneTask } = props;\r\n      dispatchAddOneTask(item);\r\n\r\n      // clear header input, after successfully add input value\r\n      setTaskInput('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"tasks-header\">\r\n      <input className=\"task-input\"\r\n             type=\"text\"\r\n             placeholder={pageText.tasksInputPlaceholder}\r\n             value={taskInput}\r\n             onChange={(e) => handleInputChange(e)}\r\n             onKeyDown={(e) => handleKeyEvent(e)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state /*, ownProps*/) => {\r\n  // return newly matched store state to component props\r\n  return {\r\n    tasks: state.tasks,\r\n    locale: state.locale\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  // return newly matched store dispatch to component props\r\n  return {\r\n    dispatchAddOneTask(task) {\r\n      // get action object\r\n      const action = addOneTask(task);\r\n      // dispatch to reducer to update store state\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHeader)","import React from 'react';\r\n\r\n// react-redux imports\r\nimport { connect } from 'react-redux';\r\nimport {isAllFinished, delFinishedTasks} from \"../store/actionCreators\";\r\n\r\n// import component\r\nimport Button from './button/Button';\r\n\r\n// import custimazied hook, get language data.\r\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\r\n\r\nfunction TodoFooter (props) {\r\n  const { locale } = props;\r\n  \r\n  //get lang data, passing \"locale\" to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  // calculate the count of finished tasks\r\n  function _calculateFinishedTasks(tasks) {\r\n    let finishedTaskCount = 0;\r\n\r\n    tasks.forEach((task) => {\r\n      if (task.finished === true) {\r\n        finishedTaskCount += 1;\r\n      }\r\n    })\r\n    return finishedTaskCount\r\n  }\r\n\r\n  const {items, dispatchIsAllFinished, dispatchDelFinishedTasks} = props;\r\n  const finishedItems = _calculateFinishedTasks(items);\r\n  const totalItems = items.length;\r\n\r\n  return (\r\n    <div className=\"tasks-footer\">\r\n      <div className=\"tasks-footer-info\">\r\n        <label htmlFor=\"footer-checkbox\"></label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"footer-checkbox\"\r\n          checked={finishedItems === totalItems && totalItems > 0}\r\n          onChange={() => dispatchIsAllFinished(finishedItems !== totalItems)} // if it is not all-selected, then flag === true\r\n        />\r\n        {\r\n          !!pageText.tasksFooter && //if pageText.tasksFooter is Not undefined, then we render, otherwise it will thorw a error\r\n          <span className=\"task-info\">\r\n            {pageText.tasksFooter[0]} {finishedItems} {finishedItems===1?pageText.tasksFooter[1]:pageText.tasksFooter[2]} / {finishedItems===1?pageText.tasksFooter[3]:pageText.tasksFooter[4]} {totalItems}\r\n          </span>\r\n        }\r\n      </div>\r\n      {/* <input type=\"button\" className=\"btn\" value={!!pageText && pageText.tasksFooterBtn} onClick={() => dispatchDelFinishedTasks()} /> */}\r\n      <Button showBtn={true} value={pageText.tasksFooterBtn || ''} onClickFunction={() => dispatchDelFinishedTasks()}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props.\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.tasks,\r\n    locale: state.locale\r\n  }\r\n}\r\n\r\n// get dispatch function to set or change the redux state.\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatchDelFinishedTasks() {\r\n      // get action object ready\r\n      const action = delFinishedTasks();\r\n      dispatch(action);\r\n    },\r\n    dispatchIsAllFinished(flag) {\r\n      // get action object ready\r\n      const action = isAllFinished(flag);\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\n// export Item component\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoFooter);","import React from 'react';\r\n\r\n// Import components\r\nimport List from '../components/List';\r\nimport Header from '../components/TodoHeader';\r\nimport Footer from '../components/TodoFooter';\r\nimport '../index.scss';\r\n\r\n// Import redux and react-redux\r\nimport { connect } from 'react-redux';\r\nimport {addAllTasks} from '../store/actionCreators';\r\n\r\nclass Todos extends React.Component {\r\n  // Did Mount, get data\r\n  componentDidMount() {\r\n    const data = {\r\n      status: 200,\r\n      tasks: [\r\n        {id: 1, title: \"Learn react for 2 hours\", finished: false},\r\n        {id: 2, title: \"Learn node for 2 hours\", finished: true},\r\n        {id: 3, title: \"Learn vue js for 2 hours\", finished: false},\r\n        {id: 4, title: \"Play xbox one for 1 hour\", finished: false}\r\n      ]\r\n    }\r\n\r\n    //dispatch data to store\r\n    this.props.dispatchData(data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='tasks-wrapper'>\r\n        <div className='tasks-container'>\r\n          {/*Header Part - Task Input Box*/}\r\n          <Header />\r\n\r\n          {/*List Part - Task List*/}\r\n          <List />\r\n          {/*Below also works in the create-react-app, you don't have to use arrow func or bind this*/}\r\n          {/*<List tasksArr={tasks} handleCheckBoxChange={this.handleTasksFinish}/>*/}\r\n\r\n          {/*Footer Part - Task Control and Delete Btn*/}\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // return newly matched store dispatch to component props\r\n    dispatchData(data){\r\n      // get action\r\n      let action = addAllTasks(data.tasks);\r\n      // dispatch action to reducer to save data as new state\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\n// export default App;\r\nexport default connect(null, mapDispatchToProps)(Todos);\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n//import from antd icon\r\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons'\r\n\r\n\r\nfunction TextInput(props) {\r\n  // get props\r\n  const {inputTitle, inputType, className, value, onChange, onBlur} = props;\r\n\r\n  // store initial props.inputType, the state input type can be set to \"text\"\r\n  const [type, setType] = useState(props.inputType)\r\n\r\n  // icon style object ready to use\r\n  const iconStyle = {\r\n    fontSize: \"14px\",\r\n    position: \"absolute\",\r\n    right: \"0\",\r\n    height: \"30px\",\r\n    marginTop: \"8px\",\r\n    boxSizing: \"border-box\",\r\n    color: \"#ccc\",\r\n    minWidth: \"30px\"\r\n  }\r\n\r\n  // handle eye icon onClick event\r\n  function handleEyeSwitch(){\r\n    if(type === \"password\") {\r\n      setType(\"text\") // if current type === \"password\", then we switch it to \"text\"\r\n    } else {\r\n      setType(\"password\")\r\n    }\r\n  }\r\n\r\n  // prepare eyeIconDom, dynamic render based on input type\r\n  // if input type === password, we render eye invisible icon dom, else we render eye icon dom\r\n  const eyeIconDom = (\r\n    <a onClick={()=>{handleEyeSwitch()}}>\r\n      {type === \"password\" ? <EyeInvisibleOutlined style={iconStyle}/>: <EyeOutlined style={iconStyle} />}\r\n    </a>\r\n  )\r\n\r\n  // render\r\n  return (\r\n    <>\r\n      <div style={{position: \"relative\", marginTop: \"15px\"}}>\r\n        <label htmlFor={inputTitle}>{inputTitle}</label>\r\n        <input\r\n          type={type}\r\n          className={\"text-input \" + (className ? className: \"\")}\r\n          id={inputTitle}\r\n          value={value}\r\n          style={{width: \"100%\"}}\r\n          onChange={(e) => onChange(e)}\r\n          onBlur={(e) => onBlur(e)}\r\n        />\r\n        {/*If props.inputType is password, we render this icon, if the type is text, we do not render any icon*/}\r\n        {inputType===\"password\" ? eyeIconDom : null}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// specify Button component prop types\r\nTextInput.propTypes = {\r\n  inputTitle: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onBlur: PropTypes.func,\r\n  inputType: PropTypes.string,\r\n  className: PropTypes.string\r\n}\r\n\r\nTextInput.defaultProps = {\r\n  inputType: \"text\"\r\n}\r\n\r\nexport default TextInput;","import React, { useState } from 'react';\r\n\r\n// import redux\r\nimport {connect} from 'react-redux';\r\n\r\n// import component\r\nimport Button from '../components/button/Button';\r\nimport TextInput from '../components/input/TextInput';\r\n\r\n// import custimazied hook, get language data.\r\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\r\n\r\n\r\nfunction Register(props) {\r\n  // for form data\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmedPassword: \"\"\r\n  })\r\n\r\n  // for form fields validations.\r\n  const [errors, setErrors] = useState({});\r\n\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const { locale } = props;\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  // handle email input change function\r\n  function handleEmailChange(e) {\r\n    // deep copy current state data\r\n    let formDataObj = JSON.parse(JSON.stringify(formData));\r\n    // change copied data\r\n    formDataObj.email = e.target.value;\r\n    // setState the changed copy data to state\r\n    setFormData(formDataObj);\r\n  }\r\n\r\n  // handle password input change function\r\n  function handlePasswordChange(e) {\r\n    // deep copy current state data\r\n    let formDataObj = JSON.parse(JSON.stringify(formData));\r\n    // change copied data\r\n    formDataObj.password = e.target.value;\r\n    // setState the changed copy data to state\r\n    setFormData(formDataObj);\r\n  }\r\n\r\n  // handle email input change function\r\n  function handleConfirmedPasswordChange(e) {\r\n    // deep copy current state data\r\n    let formDataObj = JSON.parse(JSON.stringify(formData));\r\n    // change copied data\r\n    formDataObj.confirmedPassword = e.target.value;\r\n    // setState the changed copy data to state\r\n    setFormData(formDataObj);\r\n  }\r\n\r\n  //validate field\r\n  function validateField(...field) {\r\n    // deep copy errors state\r\n    let errorsObj = JSON.parse(JSON.stringify(errors));\r\n\r\n    // email field validate\r\n    if(field.length === 0 || field.indexOf('email') >= 0){\r\n      let re = /^\\w+[\\w-]+@\\w+[\\w-]+(\\.[-\\w]+)+$/;\r\n      if(!formData.email) { // if no email input\r\n        errorsObj.email = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[0] : '';\r\n      }else if (!re.test(formData.email)){ // if there is email and NOT pass the reg test\r\n        errorsObj.email = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[1] : '';\r\n      }else { //if there is email input and pass the reg test\r\n        errorsObj.email = \"\";\r\n      }\r\n    }\r\n\r\n    // password field validate\r\n    if(field.length === 0 || field.indexOf('password') >= 0){\r\n      // password has to be 6-15 in length, no Space\r\n      // password needs to include at least one letter, capital letter, number, and special character.\r\n      let regArray = [/^\\S{6,15}$/, /[A-Z]/, /[a-z]/, /[0-9]/, /[!@#$%^&*)(_\\-=?/<>.,+|~`]/];\r\n      let testResult = regArray.every(e => e.test(formData.password));\r\n      if(!formData.password) { // if no password input\r\n        errorsObj.password = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[2] : '';\r\n      }else if(!testResult){ // if the password NOT pass the reg test.\r\n        errorsObj.password = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[3] : '';\r\n      }else{ //if there is email input\r\n        errorsObj.password = \"\";\r\n      }\r\n    }\r\n\r\n    // confirmed password field validate\r\n    if(field.length === 0 || field.indexOf('confirmedPassword') >= 0){\r\n      if(!formData.confirmedPassword) { // if no confirm password input\r\n        errorsObj.confirmedPassword = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[4] : '';\r\n      } else { //if confirm password looks good\r\n        errorsObj.confirmedPassword = \"\";\r\n      }\r\n    }\r\n\r\n    //matching password and confirm password\r\n    if(field.length === 0 || field.indexOf('matchPassword') >= 0) {\r\n      if (formData.confirmedPassword !== formData.password) { // if not matching\r\n        errorsObj.confirmedPassword = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[5] : '';\r\n      } else { //if confirm password looks good\r\n        errorsObj.confirmedPassword = \"\";\r\n      }\r\n    }\r\n\r\n    // set error state\r\n    setErrors(errorsObj);\r\n\r\n    // once click submit btn, validate errorsObj.\r\n    for (let k in errorsObj) {\r\n      if(!!errorsObj[k]){\r\n        return false; // if there is item in errorsObj: Not pass\r\n      }\r\n    }\r\n    return true; // if there is NO item in errorObj: Passed;\r\n  }\r\n\r\n  // handle form submit\r\n  function onSubmit() {\r\n    // run validate func, it validates all fields when no parameters passing in;\r\n    const validateResult = validateField();\r\n\r\n    // do something once passed or NOT passed.\r\n    if(validateResult){\r\n      React.$auth.setUserAuth(formData.email); // set auth;\r\n      props.history.push('/') // redirect to home page;\r\n      React.$notice.success(pageText.signUpNoticeMsg[0],\r\n        pageText.signUpNoticeMsg[1], 6)\r\n    }else{\r\n      React.$notice.error(pageText.signUpNoticeMsg[2],\r\n        pageText.signUpNoticeMsg[3], 6)\r\n    }\r\n  }\r\n\r\n  // render virtual element\r\n  return (\r\n    <div className=\"register-wrapper\">\r\n      <div className=\"register-container\">\r\n        <div>\r\n          <h3>{pageText.signUpTitle || \"\"}</h3>\r\n        </div>\r\n        <form className=\"general-form\">\r\n          <TextInput\r\n            inputTitle={pageText.signUpInputTitle ? pageText.signUpInputTitle[0] : \"\"}\r\n            value={formData.email}\r\n            onChange={(e) => handleEmailChange(e)}\r\n            onBlur={() => validateField(\"email\")}\r\n          />\r\n          <span className=\"input-error\">{errors.email || \"\"}</span>\r\n          <TextInput\r\n            inputTitle={pageText.signUpInputTitle ? pageText.signUpInputTitle[1] : \"\"}\r\n            value={formData.password}\r\n            inputType=\"password\"\r\n            onChange={(e) => handlePasswordChange(e)}\r\n            onBlur={() => validateField(\"password\", \"matchPassword\")}\r\n          />\r\n          <span className=\"input-error\">{errors.password || \"\"}</span>\r\n          <TextInput\r\n            inputTitle={pageText.signUpInputTitle ? pageText.signUpInputTitle[2] : \"\"}\r\n            value={formData.confirmedPassword}\r\n            inputType=\"password\"\r\n            onChange={(e) => handleConfirmedPasswordChange(e)}\r\n            onBlur={() => validateField(\"confirmedPassword\", \"matchPassword\")}\r\n          />\r\n          <span className=\"input-error\">{errors.confirmedPassword || \"\"}</span>\r\n          <Button showBtn={true} btnClass=\"sign-up-btn\" value={pageText.signUpSubmitBtn || \"\"} onClickFunction={() => onSubmit()}/>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.locale\r\n  }\r\n}\r\n\r\n// export component\r\nexport default connect(mapStateToProps, null)(Register);","import { useState, useEffect, useRef } from 'react';\r\n\r\n// hook for obtaining hook's previous state\r\nexport function usePrevious(value) {\r\n\tconst ref = useRef();\r\n\tuseEffect(() => {\r\n\t\tref.current = value;\r\n\t},[value]);\r\n\treturn ref.current;\r\n}\r\n\r\n// internal function for getting visible screen/windows width and height.\r\nfunction _getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\n// hook for getting windows dimensions (width and height)\r\nexport function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(_getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(_getWindowDimensions());\r\n    }\r\n    // add event listener onResize to window. everytime, after resizing, we re-triger handleResize func to re-setState.\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\n// hook for getting element width (Will work on the element height later)\r\nexport function useElementGetBoundingClientRect(element, listenScroll=false) {\r\n  const [ elementGetBoundingClientRect, setElementGetBoundingClientRect ] = useState({});\r\n\r\n  // get list element width\r\n  useEffect(() => {\r\n    // set state after first time mounted\r\n    const handleUpdateEleClientRect = () => {\r\n      if(element.current) {\r\n        const eleRect = element.current.getBoundingClientRect();\r\n        setElementGetBoundingClientRect({\r\n          width: eleRect.width,\r\n          top: eleRect.top,\r\n          left: eleRect.left,\r\n        });\r\n      }\r\n    }\r\n    window.addEventListener('resize', handleUpdateEleClientRect);\r\n    handleUpdateEleClientRect();\r\n    if(listenScroll) {\r\n      window.addEventListener('scroll', handleUpdateEleClientRect);\r\n    }\r\n    // on Component Will Unmount\r\n    return () => window.removeEventListener('resize', handleUpdateEleClientRect);\r\n  }, [element.current])\r\n\r\n  return elementGetBoundingClientRect;\r\n}\r\n\r\n// hook for getting element position scroll status (scrollTop and scrolling)\r\nexport function useScrollTop() {\r\n  const [ scrollStatus, setScrollStatus ] = useState({scrollTop: 0, scrolling: false});\r\n\tconst preScrollTop = usePrevious(scrollStatus.scrollTop);\r\n\r\n  useEffect(() => {\r\n    const handleOnScroll = () => {\r\n      setScrollStatus({\r\n        scrollTop: window.pageYOffset, // distance between visible screen's top to page top\r\n        scrolling: window.pageYOffset > preScrollTop\r\n      });\r\n    };\r\n    window.addEventListener('scroll', handleOnScroll);\r\n\t\treturn () => window.removeEventListener('scroll', handleOnScroll);\r\n  }, [scrollStatus])\r\n\r\n\treturn scrollStatus;\r\n}\r\n\r\n// hook for getting element top to body top distance after first time mounted\r\n// (not the distance to parent element, no dependencies, which means will not update after component updated)\r\nexport function useEleDistanceToTop (element) {\r\n  const [distanceToTop, setDistanceToTop] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const handleUpdateEleDistanceToTop = () => {\r\n      let eleDistanceToTop = element.current ? (window.pageYOffset + element.current.getBoundingClientRect().top) : 0;\r\n      setDistanceToTop(eleDistanceToTop);\r\n    }\r\n    handleUpdateEleDistanceToTop();\r\n    window.addEventListener('resize', handleUpdateEleDistanceToTop);\r\n    // on Component Will Unmount\r\n    return () => window.removeEventListener('resize', handleUpdateEleDistanceToTop);\r\n  }, []);\r\n\r\n  return distanceToTop;\r\n}","//import react\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n//import props limitation\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction LazyImage(props) {\r\n  // init state: image loading status\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  //prepare props\r\n  const { src, alt, className, onErrorSrc, loadingSrc } = props;\r\n\r\n  // load image once DOM mounted\r\n  useEffect(() => {\r\n    const image = new Image();\r\n\r\n    // handle load and error;\r\n    const handleLoad = () => {\r\n      setLoaded(true);\r\n    }\r\n    const handleError = () => {\r\n      setError(true);\r\n    }\r\n\r\n    image.onload = handleLoad;\r\n    image.onerror = handleError;\r\n\r\n    // assign the src from props to image;\r\n    image.src = src;\r\n\r\n    return ()=>{\r\n      image.removeEventListener('load', handleLoad);\r\n      image.removeEventListener('error', handleError);\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <img\r\n      className={className}\r\n      src={error ? onErrorSrc : !loaded ? loadingSrc : src}\r\n      alt={alt.join(\" \")}\r\n    />\r\n  )\r\n\r\n}\r\n\r\n// default props\r\nLazyImage.defaultProps = {\r\n  src: '',\r\n  alt: 'images',\r\n  onErrorSrc: process.env.PUBLIC_URL + '/handleimage/image-not-found.jpg',\r\n  loadingSrc: process.env.PUBLIC_URL + '/handleimage/image-loading.jpg',\r\n  className: 'img'\r\n}\r\n\r\n// prop types\r\nLazyImage.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.array,\r\n  onErrorSrc: PropTypes.string,\r\n  loadingSrc: PropTypes.string,\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default LazyImage;","// import react\r\nimport React, {useState, useRef} from 'react';\r\n\r\n// import from antd\r\nimport { Layout, Menu } from \"antd\";\r\n\r\n// import from react-router\r\nimport {NavLink, useRouteMatch, withRouter} from \"react-router-dom\";\r\n\r\n//import custimized hook\r\nimport useLanguagePageText from \"../../custimizedHook/LanguageHook\";\r\nimport {useElementGetBoundingClientRect} from \"../../custimizedHook/elementPositions\";\r\n\r\n// import component\r\nimport LazyImage from \"../image/LazyImage\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nfunction MakeupNav (props) {\r\n  let { path, url } = useRouteMatch();\r\n  // on window <= md 768px, set onSideBreak to true\r\n  const [onSideBreak, setOnSideBreak] = useState(false);\r\n\r\n  const { locale } = props;\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  // customized hook get side nav position\r\n  const brokenSideNavRef = useRef(null); // bind broken side nav element\r\n  const {top: elementTop, width: elementWidth} = useElementGetBoundingClientRect(brokenSideNavRef, true);\r\n\r\n  const navElement =\r\n    <Menu\r\n    mode=\"inline\"\r\n    selectedKeys={[props.history.location.pathname]}\r\n    defaultSelectedKeys={['1']}\r\n    defaultOpenKeys={['sub1']}\r\n    style={{ height: '100%' }}\r\n  >\r\n    <Menu.Item key={`${url}/blush`}>\r\n      <NavLink to={`${url}/blush`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/blush-ff7992c3d7690d18a9b0224177cfbdedbc036497cf87c393ec01c6a2ef070258.svg\"\r\n          alt={[\"Blush\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[0] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/bronzer`}>\r\n      <NavLink to={`${url}/bronzer`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/bronzer-2d423487eea3e4571229bd95689bb4eb4331f05740f3921ede7c7c765c7954b1.svg\"\r\n          alt={[\"Bronzer\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[1] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/eyebrow`}>\r\n      <NavLink to={`${url}/eyebrow`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/eyebrow-fc49d8d480ace717203a21fe863c2231970063add91ed2f15181fe8e2d3b96b9.svg\"\r\n          alt={[\"Eyebrow\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[2] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/eyeliner`}>\r\n      <NavLink to={`${url}/eyeliner`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/eyeliner-de329b6d65d721a45190051af1153e23202df9eb1c393d1ac65972376ee42d50.svg\"\r\n          alt={[\"Eyeliner\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[3] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/eyeshadow`}>\r\n      <NavLink to={`${url}/eyeshadow`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/eyeshadow-67f9f8fd19df1862c95122f9b3460c7e6674d5a6d178cde00e6e4be908dd898a.svg\"\r\n          alt={[\"Eyeshadow\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[4] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/foundation`}>\r\n      <NavLink to={`${url}/foundation`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/foundation-9985c8a404d4a19cf7a2985ed504958cadd9f71252a73c90b6a7178bf7075143.svg\"\r\n          alt={[\"Foundation\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[5] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/lipliner`}>\r\n      <NavLink to={`${url}/lipliner`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/lip_liner-3f40bb63957aa7d47e3a2d1356b9380aa093271e5d58f3518181fd427e388d93.svg\"\r\n          alt={[\"Lip\", \"Liner\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[6] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={props.history.location.pathname === url ? url : `${url}/lipsticks`}>\r\n      <NavLink to={`${url}/lipsticks`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/lipstick-4531b48ee71839393857e24c8cbc4dede1f99d2284ef82a6eb0a2a4d03540a14.svg\"\r\n          alt={[\"Lipstick\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[7] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/mascara`}>\r\n      <NavLink to={`${url}/mascara`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/mascara-0deeeb81e58f31ddbff07847bfd0820e5ecdba1419f4281da743a05e0d6b3e69.svg\"\r\n          alt={[\"Mascara\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[8] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n    <Menu.Item key={`${url}/nailpolish`}>\r\n      <NavLink to={`${url}/nailpolish`}>\r\n        <LazyImage\r\n          src=\"http://makeup-api.herokuapp.com/assets/nail_polish-a7e7204834c0c30e8b57a1ba9896656331e228b0daa09d1705d1ab29bc0b7151.svg\"\r\n          alt={[\"Nail\", \"Polish\", \"product\"]}\r\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\r\n        />\r\n        {pageText.makeupsNav ? pageText.makeupsNav[9] : \"\"}\r\n      </NavLink>\r\n    </Menu.Item>\r\n  </Menu>\r\n  return (\r\n    <>\r\n      <Sider className=\"site-layout-background\"\r\n             width={200}\r\n             breakpoint=\"md\"\r\n             collapsedWidth=\"50\"\r\n             style={onSideBreak?{display: \"none\"}:{}}\r\n             onBreakpoint={broken => {\r\n        if(broken) { // on sidebar broken, set state to hide side bar;\r\n          setOnSideBreak(true);\r\n        } else {\r\n          setOnSideBreak(false);\r\n        }\r\n      }}>\r\n        {navElement}\r\n      </Sider>\r\n      <div\r\n        className=\"makeup-broken-nav\"\r\n        ref={brokenSideNavRef}\r\n        style={!onSideBreak?{display: \"none\"}:{}}\r\n        //style={elementTop <= 0 ? {position: \"fixed\", top: \"0\", left:\"0\"} : {position: \"relative\"}}\r\n      >\r\n        {navElement}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.locale\r\n  }\r\n}\r\n\r\n// export List component\r\nexport default connect(mapStateToProps, null)(withRouter(MakeupNav));","// Capitalization String - first letter capitalized\r\nexport function capString(strArr) {\r\n  if(strArr.length > 0) {\r\n    return strArr.map(str => {\r\n      // if str is existed, then return uppercase str\r\n      return str && str.replace(str[0], str[0].toUpperCase());\r\n    })\r\n  }\r\n  return null;\r\n}\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n//import utils string filters\r\nimport { capString } from '../../utils/stringFilter';\r\n\r\n// import component\r\nimport LazyImage from '../image/LazyImage'\r\n\r\nfunction MakeupItem(props) {\r\n  // get props\r\n  const handleClick = props.handleClick;\r\n  const makeupItem = props.makeupItem;\r\n  const { name, image_link, brand, category, description, tag_list, product_colors } = makeupItem;\r\n\r\n  // init state\r\n  const [display, setDisplay] = useState(false)\r\n\r\n  //prepare data string using capString filter\r\n  let strArr = [name, brand, category, description];\r\n  const [fName, fBrand, fCategory, fDescription] = capString(strArr);\r\n  let tagArr = [...tag_list];\r\n  const fTags = capString(tagArr);\r\n\r\n  //prepare color circle data\r\n  let productColors = product_colors.slice(0, 10);\r\n\r\n  //prepare makeup tag element\r\n  const tagElement = fTags && fTags.map(tag => {\r\n    return <span className=\"makeup-tag makeup-light-text\" key={tag}>{tag}</span>\r\n  })\r\n\r\n  //prepare makeup detailed info element\r\n  const makeupDetailElement =\r\n    <div className=\"makeup-details\">\r\n      <span className=\"makeup-title\">{fName}</span>\r\n      <div className=\"makeup-tags\">\r\n        {tagElement}\r\n      </div>\r\n      <span className=\"makeup-length makeup-light-text\">{fDescription.length>=120?fDescription.substr(0, 120) + \"...\" : fDescription}</span>\r\n    </div>\r\n\r\n  //prepare makeup color circles element\r\n  const makeupColorElement =\r\n    <div className=\"makeup-colors\">\r\n      {productColors.map((color, index) => {\r\n        return <div className=\"makeup-color\" key={color.colour_name + index} style={{backgroundColor: color.hex_value}}></div>\r\n      })}\r\n    </div>\r\n\r\n\r\n  // render\r\n  return (\r\n    <>\r\n      {\r\n        !!props.makeupItem &&\r\n        <li className=\"makeup-item\" onClick={handleClick}>\r\n            {/* makeup image element */}\r\n            <LazyImage src={image_link} alt={[fBrand,fCategory, fName]} className=\"makeup-image\"/>\r\n            {/* Makeup detail info */}\r\n            {display && makeupDetailElement}\r\n            {/* Makeup bar info */}\r\n            <div className=\"makeup-info\">\r\n              <span className=\"makeup-title\">{fName}</span>\r\n              <span className=\"makeup-light-text makeup-type\">{fBrand}</span>\r\n              {/* Makeup color element */}\r\n              {makeupColorElement}\r\n            </div>\r\n            {/* Hover cover div */}\r\n            <div\r\n              className=\"makeup-item-cover\"\r\n              onMouseOver={() => setDisplay(true)}\r\n              onMouseOut={() => setDisplay(false)}\r\n            >\r\n            </div>\r\n        </li>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n// specify Button component prop types\r\nMakeupItem.propTypes = {\r\n  makeupItem: PropTypes.object.isRequired,\r\n  handleClick: PropTypes.func\r\n}\r\n\r\nMakeupItem.defaultProps = {\r\n}\r\n\r\nexport default MakeupItem;","// import react\r\nimport React, { useRef } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import customized hook\r\nimport {useWindowDimensions, useElementGetBoundingClientRect, useScrollTop, useEleDistanceToTop} from '../../custimizedHook/elementPositions'\r\n\r\nfunction VerticalScrollVirtualList(props) {\r\n  // get data (props.list)\r\n  const list = props.list;\r\n  const listLength = list.length;\r\n\r\n  // get props.itemDimensions\r\n  const itemDimensions = props.itemDimensions;\r\n\r\n  // calculate screen height, after component mounted and updated\r\n  const { height } = useWindowDimensions();\r\n\r\n  // calculate scroll top\r\n  const { scrollTop } = useScrollTop();\r\n\r\n  // get bind list element\r\n  const listEleRef = useRef(null);\r\n  const listWrapperRef = useRef(null);\r\n\r\n  // get list element width\r\n  const { width: elementWidth } = useElementGetBoundingClientRect(listEleRef);\r\n  // calculate bind list element distance to page top\r\n  const eleDistanceToTop = useEleDistanceToTop(listWrapperRef);\r\n\r\n  // generate visible data items based on item dimensions, list position and window dimensions (visible area dimensions)\r\n  const itemHeight = itemDimensions.height; // item height\r\n  const itemWidth = itemDimensions.width; // item width\r\n  const itemsPerRow = Math.floor(elementWidth / itemWidth); // the number of item per row\r\n  const listTotalHeight = Math.ceil(listLength / itemsPerRow) * itemHeight; // the total height of list\r\n  const visibleRowsCount = Math.ceil(height / itemHeight) + 1; // visible screen can contain how many rows\r\n  const startIndex = Math.floor((scrollTop - eleDistanceToTop) / itemHeight); // the start position (row) index falls within visible screen\r\n  const endIndex = startIndex + visibleRowsCount; // the end position (row) index falls within visible screen\r\n  const startOffset = (scrollTop <= eleDistanceToTop) ? 0 : (scrollTop - eleDistanceToTop) - ((scrollTop - eleDistanceToTop) % itemHeight);// use for list ul transformation\r\n  const dataItemStart = startIndex <= 0 ? 0 : (startIndex * itemsPerRow); // data item start index\r\n  const dataItemEnd = (endIndex * itemsPerRow); // data item end index\r\n  const visibleItems = list.slice(dataItemStart, dataItemEnd); // slice all data to visible area data items based on data item start & end index\r\n  // console.log(startIndex)nu\r\n  // console.log(endIndex)\r\n  // console.log(visibleItems)\r\n  // prepare blank item to prevent flex display gap\r\n  let iElement = [];\r\n  const iElementLength =  Math.floor(elementWidth / itemWidth);\r\n  for(let i=0; i<iElementLength; i++) {\r\n    iElement.push(<i key={i} style={{width: itemWidth, height: 0}}></i>)\r\n  }\r\n\r\n  // prepare list css animation/translate3d\r\n  const getTransform = () => {\r\n    return `translate3d(0,${startOffset}px,0)`\r\n  }\r\n\r\n  // prepare list wrapper div style\r\n  const listWrapperStyle = {\r\n    'position': 'relative',\r\n    'height': listTotalHeight ? listTotalHeight : 0\r\n  }\r\n\r\n  // prepare list ul style\r\n  const listStyle = {\r\n    'listStyle': 'none',\r\n    'display': 'flex',\r\n    'flexDirection': 'row',\r\n    'justifyContent': 'space-between',\r\n    'flexWrap': 'wrap',\r\n    'padding': 0,\r\n    'marginBottom': 0,\r\n    'backgroundColor': 'rgba(255, 255, 255, 0)',\r\n    'transform': getTransform()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"list-wrapper\" ref={listWrapperRef} style={listWrapperStyle}>\r\n        <ul className=\"makeup-list\" ref={listEleRef} style={listStyle}>\r\n          {props.children(visibleItems)}\r\n          {/* iElement is for filling the gap of flex */}\r\n          {iElement}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nVerticalScrollVirtualList.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n  itemDimensions: PropTypes.object.isRequired,\r\n  children: PropTypes.func.isRequired\r\n}\r\n\r\nexport default VerticalScrollVirtualList;","// import react\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\n\r\nfunction LipsticksList(props) {\r\n  // init state\r\n  const [lipsticks, setLipsticks] = useState([]);\r\n  const [onRequestError, setOnRequestError] = useState(false);\r\n\r\n  // fetch lipsticks data, and set state\r\n  let authNeeded = <div>\r\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\r\n    <iframe\r\n      title=\"Please give temp auth to request data.\"\r\n      width=\"100%\"\r\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\r\n    ></iframe>\r\n  </div>;\r\n\r\n  // fetch data\r\n  useEffect(() => {\r\n    React.$http.getLipSticks().then(res => {\r\n        setLipsticks(res.data);\r\n    }).catch(err => {\r\n      setOnRequestError(true);\r\n      console.log(err)\r\n    })\r\n  }, [])\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map((item) => {\r\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n  //handle item click\r\n  function routeTo(item) {\r\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Lipsticks </h3>\r\n      <VerticalScrollVirtualList list={lipsticks} itemDimensions={{width: 206, height: 361}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n      { onRequestError ? authNeeded : \"\" }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LipsticksList;","// import react\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\n\r\nfunction NailPolishList(props) {\r\n  // init state\r\n  const [nailPolish, setNailPolish] = useState([]);\r\n\r\n  // fetch nail polish data, and set state\r\n  useEffect(() => {\r\n    console.log(\"getting nail polish data\")\r\n    React.$http.getNailPolish().then(res => {\r\n      setNailPolish(res.data);\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }, [])\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map(item => {\r\n        return <MakeupItem key={item.id} makeupItem={item} />\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Nail Polish </h3>\r\n      <VerticalScrollVirtualList list={nailPolish} itemDimensions={{width: 206, height: 361}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NailPolishList;","// import react\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\n\r\nfunction MascaraList(props) {\r\n  // init lipsticks state\r\n  const [mascara, setMascara] = useState([]);\r\n\r\n  // fetch nail polish data, and set state\r\n  useEffect(() => {\r\n    console.log(\"getting nail polish data\")\r\n    React.$http.getMascara().then(res => {\r\n      setMascara(res.data);\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }, [])\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map(item => {\r\n        return <MakeupItem key={item.id} makeupItem={item} />\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Mascara </h3>\r\n      <VerticalScrollVirtualList list={mascara} itemDimensions={{width: 206, height: 361}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MascaraList;","// import react\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\n\r\nfunction LipLinerList(props) {\r\n  // init state\r\n  const [lipLiner, setLipLiner] = useState([]);\r\n\r\n  // fetch nail polish data, and set state\r\n  useEffect(() => {\r\n    React.$http.getLipLiner().then(res => {\r\n      setLipLiner(res.data);\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }, [])\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map(item => {\r\n        return <MakeupItem key={item.id} makeupItem={item} />\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Lip Liner </h3>\r\n      <VerticalScrollVirtualList list={lipLiner} itemDimensions={{width: 206, height: 361}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LipLinerList;","// import react\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n// import antd icon\r\nimport { HeartOutlined } from \"@ant-design/icons\";\r\n\r\n// import components\r\nimport MakeupItem from \"./MakeupItem\";\r\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\r\n\r\nfunction FoundationList(props) {\r\n  // init state\r\n  const [foundation, setFoundation] = useState([]);\r\n\r\n  // fetch nail polish data, and set state\r\n  useEffect(() => {\r\n    React.$http.getFoundation().then(res => {\r\n      setFoundation(res.data);\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }, [])\r\n\r\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\r\n  const renderChildren = (visibleItems) => {\r\n    if (visibleItems) {\r\n      return visibleItems.map(item => {\r\n        return <MakeupItem key={item.id} makeupItem={item} />\r\n      })\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3><HeartOutlined /> Foundation </h3>\r\n      <VerticalScrollVirtualList list={foundation} itemDimensions={{width: 206, height: 361}}>\r\n        {/* VerticalScrollVirtualList takes a function as children.\r\n        function should take visibleItems as argument and loop the argument to return a item list*/}\r\n        { renderChildren }\r\n      </VerticalScrollVirtualList>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FoundationList;","import React from 'react';\r\n\r\n// import from antd\r\nimport { Layout, Menu } from \"antd\";\r\n\r\n// import react router\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\n\r\n// import react-redux;\r\nimport {connect} from \"react-redux\";\r\n\r\n// import components\r\nimport MakeupNav from '../components/makeup/MakeupNav';\r\nimport LazyImage from '../components/image/LazyImage';\r\nimport LipsticksList from '../components/makeup/LipsticksList';\r\nimport NailPolishList from \"../components/makeup/NailPolishList\";\r\nimport MascaraList from \"../components/makeup/MascaraList\";\r\nimport LipLinerList from \"../components/makeup/LipLinerList\";\r\nimport FoundationList from \"../components/makeup/FoundationList\";\r\nimport useLanguagePageText from \"../custimizedHook/LanguageHook\";\r\n\r\n\r\n// get content components from Layout (Antd component)\r\nconst { Content } = Layout;\r\n\r\n\r\nfunction Makeup(props) {\r\n  let { path, url } = useRouteMatch();\r\n  const { locale } = props;\r\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\r\n  const pageText = useLanguagePageText(locale);\r\n\r\n  // render\r\n  return (\r\n    <div>\r\n      <h1>{pageText.makeupsTitle ? pageText.makeupsTitle : \"\"}</h1>\r\n      <h5>\r\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[0] : \"\"} <br />\r\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[1] : \"\"} <br />\r\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[2] : \"\"} <br />\r\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[3] : \"\"}\r\n      </h5>\r\n      <div className=\"image-grid\">\r\n        <div className=\"photo\">\r\n          <LazyImage\r\n            src=\"http://makeup-api.herokuapp.com/assets/brushes-6d2ab84631ecd47ced4fa07c47eb37521eb61c5a525965dafaf308f21338aa44.png\"\r\n            alt={[\"Brushes\"]}\r\n          />\r\n        </div>\r\n        <div className=\"photo photo-lips\">\r\n          <LazyImage\r\n            src=\"http://makeup-api.herokuapp.com/assets/lips-c35ec4a3350ec779c6bf6a785981ad9ef2e21bd9fe26a2be1c766d56edb2e11f.png\"\r\n            alt={[\"Lips\"]}\r\n          />\r\n        </div>\r\n        <div className=\"photo\">\r\n          <LazyImage\r\n            src=\"http://makeup-api.herokuapp.com/assets/nail-polish-4c7ee1a5f7a5cbaff9757c3bcfa4f6e89d7a6f2ffc49d267e04e010ba94cfd7c.png\"\r\n            alt={[\"Nail\", \"polish\"]}\r\n          />\r\n        </div>\r\n        <div className=\"photo\">\r\n          <LazyImage\r\n            src=\"http://makeup-api.herokuapp.com/assets/single-pot-4ce398e7d8c527ef248ace7a783cc52fd583375a25a7dcdb7b16f7a0958ccb17.png\"\r\n            alt={[\"Single\", \"pot\"]}\r\n          />\r\n        </div>\r\n        <div className=\"photo\">\r\n          <LazyImage\r\n            src=\"http://makeup-api.herokuapp.com/assets/eyeshadow-18fa4bed267bec6a67506150d9574259d0dcc67700e69de4ba720d9afe8204a2.png\"\r\n            alt={[\"Eyeshadow\"]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Layout className=\"makeup-layout-background\" style={{ padding: \"24px 0\", maxWidth: \"1200px\" }}>\r\n        {/* makeup page nav side bar component*/}\r\n        <MakeupNav />\r\n        {/* makeup page content component*/}\r\n        <Content style={{ padding: '0 24px', minHeight: 280 }}>\r\n          {/*Route View/output */}\r\n          <Switch>\r\n            <Route exact path={path} component={LipsticksList} />\r\n            <Route path={`${path}/foundation`} component={FoundationList} />\r\n            <Route path={`${path}/lipliner`} component={LipLinerList} />\r\n            <Route exact path={`${path}/lipsticks`} component={LipsticksList} />\r\n            <Route path={`${path}/mascara`} component={MascaraList} />\r\n            <Route path={`${path}/nailpolish`} component={NailPolishList} />\r\n          </Switch>\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n  )\r\n}\r\n\r\n// get redux state and passing it to component props\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.locale\r\n  }\r\n}\r\n\r\n// export List component\r\nexport default connect(mapStateToProps, null)(Makeup);","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ButtonDark(props) {\r\n  // get props\r\n  const { showBtn, value, onClickFunction, btnClass, fullWidth }= props;\r\n\r\n  // render virtual element\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"button\"\r\n        className={\"btn \" + (btnClass ? btnClass : \"\")}\r\n        value={value}\r\n        style={{display: showBtn ? \"block\" : \"none\", backgroundColor: \"#404040\", color: \"#ffffff\", width: fullWidth ? \"100%\" : \"auto\"}}\r\n        onClick={onClickFunction}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\n// specify Button component prop types\r\nButtonDark.propTypes = {\r\n  showBtn: PropTypes.bool,\r\n  value: PropTypes.string.isRequired,\r\n  btnClass: PropTypes.string,\r\n  fullWidth: PropTypes.bool,\r\n  onClickFunction: PropTypes.func.isRequired\r\n}\r\n\r\nButtonDark.defaultProps = {\r\n  showBtn: true,\r\n  fullWidth: false\r\n}\r\n\r\nexport default ButtonDark;","import React, {useEffect} from 'react';\r\n\r\n// import components\r\nimport LazyImage from \"../components/image/LazyImage\";\r\nimport ButtonDark from \"../components/button/ButtonDark\";\r\n\r\nfunction MakeupsDetail(props) {\r\n  let makeupData = null;\r\n  if (props.location.state) {\r\n    makeupData = props.location.state.data;\r\n    localStorage.setItem(makeupData.id, JSON.stringify(makeupData))\r\n  }\r\n\r\n  // if there is no data passing in, need to using item id to request data from server\r\n  // however, the public api doesn't provide the id requesting. we store and get data from local storage.\r\n  if(!makeupData && props.location.pathname) {\r\n    const reg = /\\/(\\d+)$/;\r\n    const id = props.location.pathname.match(reg)[1];\r\n    makeupData = JSON.parse(localStorage.getItem(id));\r\n  }\r\n\r\n  //prepare makeup color circles element\r\n  const makeupColorElement =\r\n    <div className=\"makeup-colors\">\r\n      {makeupData.product_colors.map((color, index) => {\r\n        return <span key={color.colour_name + index}>\r\n          <span className=\"makeup-color\" style={{backgroundColor: color.hex_value}}></span>\r\n          <span className=\"color-name\">{color.colour_name}</span>\r\n        </span>\r\n      })}\r\n    </div>\r\n\r\n  //prepare makeup tag element\r\n  const tagElement = makeupData.tag_list.map(tag => {\r\n    return <span className=\"makeup-tag makeup-light-text\" key={tag}>{tag}</span>\r\n  })\r\n\r\n  // handle Add to Cart btn\r\n  const handleAddToCartBtn = () => {\r\n    console.log(\"clicked\")\r\n  }\r\n\r\n  // handle Add to Cart btn\r\n  const handlePurchaseBtn = () => {\r\n    console.log(\"purchase clicked\")\r\n  }\r\n\r\n  // estimated delivery date\r\n  const date = new Date();\r\n  console.log(date)\r\n\r\n  // render\r\n  return (\r\n    <>\r\n      {\r\n        !!makeupData &&\r\n        <div className=\"main-wrapper\">\r\n          <div className=\"detail-wrapper\">\r\n            <div className=\"leftWrapper\">\r\n              <LazyImage src={makeupData.image_link} className=\"detail-image\" alt={[makeupData.brand, makeupData.category]}/>\r\n              <div className=\"product-info\">\r\n                <h1>{ makeupData.name }</h1>\r\n                <p><strong>Brand: </strong>{makeupData.brand}</p>\r\n                <p><strong>Rating: </strong>{makeupData.rating ? makeupData.rating : \"No rating available\"}</p>\r\n                <div className=\"divider\"></div>\r\n                <p><strong>Colors: </strong></p>\r\n                { makeupColorElement }\r\n                <div className=\"divider\"></div>\r\n                { tagElement }\r\n                <div className=\"divider\"></div>\r\n                <p><strong>Price: </strong>${makeupData.price}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"rightWrapper\">\r\n              <select style={{width: \"100%\", padding: \"5px\", borderRadius: \"5px\"}} defaultValue=\"0\">\r\n                <option value=\"0\" disabled hidden>Qty</option>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n              </select>\r\n              <ButtonDark value=\"Add to Cart\" fullWidth={true} onClickFunction={()=>handleAddToCartBtn()}/>\r\n              <ButtonDark value=\"Purchase\" fullWidth={true} onClickFunction={()=>handlePurchaseBtn()}/>\r\n              <p>Estimated Delivery by</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"content\">\r\n            <p><strong>Description: </strong>{makeupData.description}</p>\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n// export List component\r\nexport default MakeupsDetail;","import React from 'react';\r\nimport { Layout } from 'antd'\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\n\r\n\r\n// import Home from '../pages/Home';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport UserCenter from '../pages/UserCenter';\r\nimport Todos from '../pages/Todos';\r\nimport Register from '../pages/Register';\r\nimport Makeups from '../pages/Makeups';\r\nimport MakeupsDetail from \"../pages/MakeupsDetail\";\r\n\r\nfunction AppContent() {\r\n  const { Content } = Layout;\r\n  return (\r\n    <>\r\n      <Content className=\"app-content\">\r\n        {/*Route View/output */}\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => {\r\n            return <Redirect to={\"/makeups\"} />\r\n          }} />\r\n          <Route path=\"/makeups\" component={Makeups} />\r\n          <Route path=\"/detail/makeups/\" component={MakeupsDetail} />\r\n          <Route exact path=\"/dashboard\" component={Dashboard} />\r\n          <Route exact path=\"/usercenter\" component={UserCenter} />\r\n          <Route exact path=\"/tasks\" component={Todos} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n        </Switch>\r\n      </Content>\r\n    </>\r\n  )\r\n}\r\nexport default AppContent;","//import react\r\nimport React, {useEffect} from 'react';\r\n\r\n//import react-router-dom\r\nimport { HashRouter as Router } from \"react-router-dom\"\r\n\r\n// import from react redux\r\nimport {connect} from \"react-redux\";\r\n\r\n//import antd\r\nimport { Layout, ConfigProvider, Spin } from 'antd';\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\nimport enUS from 'antd/lib/locale/en_US';\r\nimport zhCN from 'antd/lib/locale/zh_CN';\r\nimport { SmileOutlined } from '@ant-design/icons';\r\n\r\n//import page components\r\nimport AppFooter from './components/AppFooter';\r\nimport AppHeader from './components/AppHeader';\r\nimport AppContent from \"./components/AppContent\";\r\n\r\nmoment.locale('cn');\r\n\r\n// app file\r\nfunction App(props) {\r\n  const { locale, loading } = props;\r\n  console.log(\"Thank you for checking my code! Please contact me via email 'seanli9018@gmail.com' if you are hiring passionate web developer!!!\")\r\n\r\n  const antIcon = <SmileOutlined style={{ fontSize: 30 }} spin />;\r\n\r\n  // if loading is true, we prevent scrolling;\r\n  useEffect(() => {\r\n    if(loading) {\r\n      document.body.style.overflowY = \"hidden\"\r\n    } else {\r\n      document.body.style.overflowY = \"auto\"\r\n    }\r\n  }, [loading])\r\n\r\n  return (\r\n    <Spin spinning={props.loading} wrapperClassName=\"global-loading\" indicator={antIcon} tip=\"Working hard to get things you want!\" size=\"large\">\r\n      {/*ConfigProvider is for antdesign UI to pass language objects globally.*/}\r\n      <ConfigProvider locale={locale==='zh-cn' ? zhCN : enUS}>\r\n        <Router>\r\n          <Layout>\r\n            <AppHeader />\r\n            <AppContent />\r\n            <AppFooter />\r\n          </Layout>\r\n        </Router>\r\n      </ConfigProvider>\r\n    </Spin>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n  return {\r\n    locale: state.locale,\r\n    loading: state.loading\r\n  }\r\n}\r\n\r\n// export List component\r\nexport default connect(mapStateToProps, null)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const APP_LANG = 'APP_LANG'\r\n\r\nclass Lang {\r\n  constructor() {\r\n    //init lang\r\n    this.userLanguage = '';\r\n\r\n    //in constructor, we need to get existing APP_LANG from localStorage\r\n    this.userLanguage = localStorage.getItem(APP_LANG);\r\n\r\n    // if there is no APP_LANG in localStorage, we set lang based on browser preference.\r\n    if(!this.userLanguage){\r\n      const userLang = window.navigator.language.toLowerCase() || 'en'; //get browser language preference\r\n      if(userLang === 'zh-cn') {\r\n        this.userLanguage = 'zh-cn'\r\n        localStorage.setItem(APP_LANG, this.userLanguage);\r\n      } else {\r\n        this.userLanguage = 'en'\r\n        localStorage.setItem(APP_LANG, this.userLanguage);\r\n      }\r\n    }\r\n  }\r\n\r\n  static getInstance(){\r\n    if(!this._instance){\r\n      this._instance = new Lang();\r\n    }\r\n    return this._instance\r\n  }\r\n\r\n  // set localStorage APP_LANG\r\n  setLang(language) {\r\n    this.userLanguage = language.toLowerCase();\r\n    localStorage.setItem(APP_LANG, this.userLanguage);\r\n  }\r\n\r\n  // when call this function, will dynamically import matching language JSON file.\r\n  languageLoader() {\r\n    switch (this.userLanguage.toLowerCase()) {\r\n      case 'zh-cn':\r\n        return import('../languages/zhcn.json');\r\n      case 'en-us':\r\n        return import('../languages/enus.json');\r\n      default:\r\n        return import('../languages/enus.json');\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Lang.getInstance();\r\n","// 1. import actionTypes\r\nimport {\r\n  ADD_ALL_TASKS,\r\n  ADD_ONE_TASK,\r\n  DEL_ONE_TASK,\r\n  CHANGE_ONE_FINISHED,\r\n  IS_ALL_FINISHED,\r\n  DEL_FINISHED_TASKS,\r\n  MOVE_TASK,\r\n  CHANGE_LOCALE,\r\n  OPEN_LOADING,\r\n  CLOSE_LOADING\r\n} from \"./actionTypes\";\r\n\r\n//1.1 import language instance\r\nimport lang from '../languages/lang';\r\n\r\n// 2. reducer: create default state\r\nconst defaultState = {\r\n  tasks: [],\r\n  locale: lang.userLanguage,\r\n  loading: false\r\n}\r\n\r\n// 3. reducer: core methods based on action type\r\nexport default function taskReducer(state=defaultState, action){\r\n  // 1.0 get all existing tasks from database\r\n  if(action.type === ADD_ALL_TASKS) {\r\n    // 1.1 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    // 1.2 passing actions data to the newState\r\n    newState.tasks = action.tasks;\r\n    return newState;\r\n  }\r\n  //2.add a new task\r\n  if(action.type === ADD_ONE_TASK) {\r\n    //2.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const tasks = newState.tasks;\r\n    const task = action.task\r\n    //2.1 push actions task data to the newState\r\n    tasks.push(task);\r\n    //2.2 set new state\r\n    return newState;\r\n  }\r\n  //3.delete one task\r\n  if(action.type === DEL_ONE_TASK) {\r\n    //3.0. clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const taskId = action.taskId;\r\n    const tasks = newState.tasks;\r\n    //3.1. use map loop, match task ID and return a new tempTasks array\r\n    tasks.forEach((task, index) => {\r\n      if(task.id === taskId) {\r\n        tasks.splice(index, 1);\r\n      }\r\n    })\r\n    //3.2. Assign new tasks array to newState\r\n    newState.tasks = tasks;\r\n    return newState;\r\n  }\r\n  //4.change one task's finished status\r\n  if(action.type === CHANGE_ONE_FINISHED) {\r\n    //4.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const tasks = newState.tasks;\r\n    const taskId = action.taskId;\r\n    const finishedStatus = action.finishedStatus;\r\n\r\n    //4.1. use loop match the task item and change it's finished status\r\n    tasks.forEach((task) => {\r\n      if(task.id === taskId) {\r\n        task.finished = finishedStatus;\r\n      }\r\n    })\r\n\r\n    //4.2. Assign new tempTasks array to new state\r\n    newState.tasks = tasks;\r\n    return newState;\r\n  }\r\n  //5.change all tasks finished status (select all and de-select all)\r\n  if(action.type === IS_ALL_FINISHED) {\r\n    //5.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const tasks = newState.tasks;\r\n    const flag = action.flag;\r\n\r\n    //5.1 According to flag, select/de-select all tasks\r\n    tasks.forEach((task) => {\r\n      if(flag){\r\n        task.finished = true;\r\n      } else {\r\n        task.finished = false;\r\n      }\r\n    })\r\n\r\n    //5.2 Assign new tempTasks array to new state\r\n    newState.tasks = tasks;\r\n    return newState;\r\n  }\r\n  //6.clean all finished tasks\r\n  if(action.type === DEL_FINISHED_TASKS) {\r\n    //6.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const tasks = newState.tasks;\r\n    const tempTasks = [];\r\n\r\n    //6.1 push all unfinished task to new Array\r\n    tasks.forEach((task) => {\r\n      if(!task.finished){\r\n        tempTasks.push(task);\r\n      }\r\n    })\r\n\r\n    //6.2 set State and re-rendering\r\n    newState.tasks = tempTasks;\r\n    return newState;\r\n  }\r\n  //7. move task item up and down\r\n  if(action.type === MOVE_TASK) {\r\n    //7.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const tasks = newState.tasks;\r\n    const index = action.index;\r\n    const diff = action.diff;\r\n\r\n    //7.1 handle item sorting\r\n    const item = tasks[index];\r\n    tasks.splice(index, 1);\r\n    tasks.splice(index + diff, 0, item);\r\n\r\n    //7.2 set state\r\n    newState.tasks = tasks;\r\n    return newState;\r\n  }\r\n  //8. Change locale\r\n  if(action.type === CHANGE_LOCALE) {\r\n    // 8.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const localeValue = action.localeValue;\r\n\r\n    // 8.1 handle change locale\r\n    newState.locale = localeValue;\r\n\r\n    // 8.2 set state\r\n    return newState\r\n  }\r\n  //9. global loading open;\r\n  if(action.type === OPEN_LOADING) {\r\n    // 9.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const loading = action.loading;\r\n\r\n    // 9.1 handle change loading status to true\r\n    newState.loading = loading;\r\n\r\n    // 9.2 set state\r\n    return newState\r\n  }\r\n  //10. global loading close;\r\n  if(action.type === CLOSE_LOADING) {\r\n    // 10.0 clone current state\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    const loading = action.loading;\r\n\r\n    // 8.1 handle change loading status to false\r\n    newState.loading = loading;\r\n\r\n    // 8.2 set state\r\n    return newState\r\n  }\r\n  return state;\r\n}\r\n\r\n\r\n","import { createStore }  from 'redux';\r\nimport reducers from './reducers'\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import { notification } from 'antd';\r\n\r\nclass AppNotification {\r\n    constructor(){\r\n        this.config = {}\r\n    }\r\n\r\n    _configNotice(message, description, duration){\r\n        this.config.message = message;\r\n        this.config.description = description;\r\n        this.config.duration = duration;\r\n    }\r\n\r\n    success(message=\"Notice\", description=\"Successfully operated\", duration=3) {\r\n        this._configNotice(message, description, duration);\r\n        notification.success(this.config)\r\n    }\r\n\r\n    info(message=\"Notice\", description=\"Infomation\", duration=3) {\r\n        this._configNotice(message, description, duration);\r\n        notification.info(this.config)\r\n    }\r\n\r\n    warning(message=\"Warning\", description=\"Warning message\", duration=5) {\r\n        this._configNotice(message, description, duration);\r\n        notification.warning(this.config)\r\n    }\r\n\r\n    error(message=\"Error\", description=\"Operation failed\", duration=5) {\r\n        this._configNotice(message, description, duration);\r\n        notification.error(this.config)\r\n    }\r\n}\r\n\r\nexport default new AppNotification();","import { Modal } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { confirm } = Modal;\r\n\r\nclass AppModal {\r\n    constructor(){\r\n        this.config = {\r\n            icon: <ExclamationCircleOutlined />\r\n        }\r\n    }\r\n\r\n    _configModal(onOk, onCancel, title, content){\r\n        this.config.onOk = onOk;\r\n        this.config.onCancel = onCancel;\r\n        this.config.title = title;\r\n        this.config.content = content;\r\n    }\r\n\r\n    confirm(onOK, onCancel, title=\"Do you want to delete this item?\", content=\"Click Yes or Cancel\") {\r\n        this._configModal(onOK, onCancel, title, content, );\r\n        confirm(this.config);\r\n    }\r\n}\r\n\r\nexport default new AppModal();","const EMAIL = 'EMAIL';\r\n\r\nclass Auth{\r\n  constructor() {\r\n    // initiate email\r\n    this.email = ''\r\n\r\n    //get email from local storage.\r\n    this.email = localStorage.getItem(EMAIL);\r\n  }\r\n\r\n  // achieve single instance\r\n  static getInstance(){\r\n    if(!this._instance){\r\n      this._instance = new Auth();\r\n    }\r\n    return this._instance;\r\n  }\r\n\r\n  // set auth email\r\n  setUserAuth(email){\r\n    this.email = email;\r\n    // then set new user auth email\r\n    localStorage.setItem(EMAIL, email);\r\n  }\r\n\r\n  // log out clear auth email\r\n  clearUserAuth(){\r\n    // clear this.email\r\n    this.email = '';\r\n    // clear localStorage\r\n    localStorage.removeItem(EMAIL);\r\n  }\r\n\r\n  // check if a user is logged in and authenticated\r\n  get is_authenticated() {\r\n    if(this.email) {\r\n      return true;\r\n    }else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Auth.getInstance();","// import axios xmlhttprequest package;\r\nimport axios from 'axios';\r\n\r\n// import actions to handle global loading effects\r\nimport {openLoading, closeLoading} from \"../store/actionCreators\";\r\n\r\n// import store for dispatching above actions\r\nimport store from \"../store/index\"\r\n\r\n// func for calculator current api request count which decides open/close loading effects\r\nlet requestCount = 0;\r\n\r\nfunction showGlobalLoading() {\r\n  if(requestCount === 0) { //if there is no previous requests, show loading\r\n    store.dispatch(openLoading())\r\n  }\r\n  requestCount ++; //increment 1 request count\r\n}\r\n\r\nfunction hideGlobalLoading() {\r\n  if(requestCount <= 1) { // if this is the last request, we hide loading;\r\n    store.dispatch(closeLoading());\r\n  }\r\n  requestCount --; // we decrease 1 request count\r\n}\r\n\r\n// the cors-anywhere is prefix is for compatibale with github pages https to send request to http api;\r\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json';\r\n// const BASE_URL = 'http://makeup-api.herokuapp.com/api/v1/products.json';\r\n\r\nclass Http {\r\n  constructor() {\r\n    this.http = axios.create({\r\n      baseURL: BASE_URL\r\n    })\r\n\r\n    // Add a request interceptor\r\n    this.http.interceptors.request.use(config => {\r\n      // set store.loading to true, start global page loading effects.\r\n      showGlobalLoading();\r\n      return config;\r\n    }, error => {\r\n      // Do something with request error\r\n      hideGlobalLoading();\r\n      return Promise.reject(error);\r\n    })\r\n\r\n    // Add a response interceptor\r\n    this.http.interceptors.response.use(response => {\r\n      // Any status code that lie within the range of 2xx cause this function to trigger\r\n      hideGlobalLoading();\r\n      // Do something with response data\r\n      return response;\r\n    }, error => {\r\n      // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n      hideGlobalLoading();\r\n      // Do something with response error\r\n      return Promise.reject(error);\r\n    })\r\n  }\r\n\r\n  getLipSticks() {\r\n    const url = '?product_type=lipstick';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getNailPolish() {\r\n    const url = '?product_type=nail_polish';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getMascara() {\r\n    const url = '?product_type=mascara';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getLipLiner() {\r\n    const url = '?product_type=lip_liner';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getFoundation() {\r\n    const url = '?product_type=foundation';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getProductDetail(id) {\r\n    const url = `/${id}`\r\n    return this.http.get(url);\r\n  }\r\n  // getMovieDetails(movieId) {\r\n  //   const url = '/title/get-details?tconst=' + movieId;\r\n  //   return this.http.get(url);\r\n  // }\r\n}\r\n\r\nexport default new Http();\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// import Redux react-redux;\r\nimport { Provider } from 'react-redux';\r\nimport store from '../src/store/index';\r\n\r\nimport notice from '../src/utils/notification';\r\nimport modal from '../src/utils/modal';\r\nimport lang from '../src/languages/lang';\r\nimport auth from '../src/auth/auth';\r\nimport http from '../src/auth/http';\r\n\r\n// React.$notification = (message) => {\r\n//   console.log(message);\r\n//   notification.success({message: message});\r\n// }\r\n\r\n// bind notice class instance to React globally\r\nReact.$notice = notice;\r\n//bind modal class instance to React globally\r\nReact.$modal = modal;\r\n// bind lang class to React globally\r\nReact.$lang = lang;\r\n// bind frontend auth\r\nReact.$auth = auth;\r\n// bind http.js to send xmlhttprequest to API\r\nReact.$http = http;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}