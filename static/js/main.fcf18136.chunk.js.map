{"version":3,"sources":["custimizedHook/LanguageHook.jsx","components/AppFooter.jsx","store/globalActionTypes.js","components/LangRadio.jsx","store/globalActionCreators.js","components/AppHeader.jsx","components/ReactEcharts.jsx","pages/Dashboard.jsx","pages/UserCenter.jsx","components/button/Button.jsx","components/todo/store/taskActionTypes.js","components/todo/Item.jsx","components/todo/store/taskActionCreators.js","components/todo/List.jsx","components/todo/TodoHeader.jsx","components/todo/TodoFooter.jsx","pages/Todos.jsx","components/input/TextInput.jsx","pages/Register.jsx","custimizedHook/elementPositions.jsx","components/image/LazyImage.jsx","components/makeup/MakeupNav.jsx","utils/stringFilter.js","components/makeup/MakeupItem.jsx","components/utils/VerticalScrollVirtualList.jsx","custimizedHook/useFetchHook.js","components/todo/store/taskReducers.js","languages/lang.js","store/globalReducers.js","store/index.js","auth/http.js","components/makeup/service.js","components/makeup/LipsticksList.jsx","components/makeup/NailPolishList.jsx","components/makeup/MascaraList.jsx","components/makeup/LipLinerList.jsx","components/makeup/FoundationList.jsx","components/makeup/EyeshadowList.jsx","components/makeup/EyelinerList.jsx","components/makeup/EyebrowList.jsx","components/makeup/BronzerList.jsx","components/makeup/BlushList.jsx","pages/Makeups.jsx","components/button/ButtonDark.jsx","pages/MakeupsDetail.jsx","components/AppContent.jsx","App.js","reportWebVitals.js","utils/notification.js","utils/modal.js","auth/auth.js","index.js"],"names":["useLanguagePageText","locale","useState","pageText","setPageText","useEffect","React","$lang","languageLoader","then","langData","default","connect","state","props","Footer","Layout","className","appFooter","CHANGE_LOCALE","OPEN_LOADING","CLOSE_LOADING","globalState","dispatch","dispatchChangeLocale","localValue","action","type","localeValue","Group","value","userLanguage","onChange","e","selectedLocaleValue","target","setLang","moment","Button","withRouter","Header","makeupsExsit","test","history","location","pathname","selectedKeys","mode","Item","icon","HeartOutlined","to","appHeader","UnorderedListOutlined","exact","UserOutlined","search","hash","fromDashboard","link","userId","$auth","email","replace","is_authenticated","activeClassName","onClick","clearUserAuth","logoutMsg","loginLogoutMsg","$notice","success","handleLogOut","ReactEcharts","echarts","GridComponent","LineChart","CanvasRenderer","ToolboxComponent","LegendComponent","PieChart","echartsInstance","echartsDOMElement","option","style","echartObj","getInstanceByDom","init","setOption","dispose","ref","defaultProps","height","width","Dashboard","id","display","flexDirection","xAxis","data","yAxis","series","smooth","legend","top","toolbox","show","feature","mark","dataView","readOnly","restore","saveAsImage","name","radius","center","roseType","itemStyle","borderRadius","usercenterTitle","showBtn","onClickFunction","btnClass","ADD_ALL_TASKS","ADD_ONE_TASK","DEL_ONE_TASK","CHANGE_ONE_FINISHED","IS_ALL_FINISHED","DEL_FINISHED_TASKS","MOVE_TASK","tasks","taskState","dispatchDelOneTask","taskId","delOneTask","dispatchChangeTaskFinished","finishedStatus","changeOneFinished","showBtns","setShowBtns","showUpBtns","setShowUpBtns","showDownBtns","setShowDownBtns","handleShowBtn","flag","index","handleShowDelBtn","undefined","handleUpBtns","length","handleDownBtns","item","itemIndex","handleMoveEvent","onMouseOver","onMouseOut","htmlFor","checked","finished","title","tasksBtns","itemId","finshedStatus","$modal","confirm","console","log","handleItemDelete","dispatchSortItem","diff","moveTask","map","task","dispatchAddOneTask","addOneTask","taskInput","setTaskInput","placeholder","tasksInputPlaceholder","handleInputChange","onKeyDown","keyCode","trim","handleKeyEvent","items","dispatchDelFinishedTasks","dispatchIsAllFinished","isAllFinished","finishedItems","finishedTaskCount","forEach","_calculateFinishedTasks","totalItems","tasksFooter","tasksFooterBtn","Todos","this","dispatchData","status","Component","TextInput","inputTitle","inputType","onBlur","setType","iconStyle","fontSize","position","right","marginTop","boxSizing","color","minWidth","eyeIconDom","EyeInvisibleOutlined","EyeOutlined","password","confirmedPassword","formData","setFormData","errors","setErrors","validateField","errorsObj","JSON","parse","stringify","field","indexOf","re","signUpValidateMsg","regArray","testResult","every","k","signUpTitle","signUpInputTitle","formDataObj","handleEmailChange","handlePasswordChange","handleConfirmedPasswordChange","signUpSubmitBtn","setUserAuth","push","signUpNoticeMsg","error","_getWindowDimensions","window","innerWidth","innerHeight","useElementGetBoundingClientRect","element","listenScroll","elementGetBoundingClientRect","setElementGetBoundingClientRect","handleUpdateEleClientRect","current","eleRect","getBoundingClientRect","left","addEventListener","removeEventListener","useScrollTop","scrollTop","scrolling","scrollStatus","setScrollStatus","preScrollTop","useRef","usePrevious","handleOnScroll","pageYOffset","LazyImage","loaded","setLoaded","setError","src","alt","onErrorSrc","loadingSrc","image","Image","handleLoad","handleError","onload","onerror","join","process","Sider","url","useRouteMatch","onSideBreak","setOnSideBreak","brokenSideNavRef","navElement","defaultSelectedKeys","defaultOpenKeys","makeupsNav","breakpoint","collapsedWidth","onBreakpoint","broken","capString","strArr","str","toUpperCase","MakeupItem","handleClick","makeupItem","image_link","brand","category","description","tag_list","product_colors","setDisplay","fName","fBrand","fCategory","fDescription","fTags","productColors","slice","tagElement","tag","makeupDetailElement","substr","makeupColorElement","backgroundColor","hex_value","colour_name","VerticalScrollVirtualList","list","listLength","itemDimensions","windowDimensions","setWindowDimensions","handleResize","useWindowDimensions","listEleRef","listWrapperRef","elementWidth","eleDistanceToTop","distanceToTop","setDistanceToTop","handleUpdateEleDistanceToTop","useCallback","useEleDistanceToTop","itemHeight","itemWidth","itemsPerRow","Math","floor","listTotalHeight","ceil","visibleRowsCount","startIndex","startOffset","dataItemStart","dataItemEnd","visibleItems","iElement","iElementLength","i","listWrapperStyle","listStyle","children","useFetchHook","apiCallback","setData","onError","setOnError","fetchTask","a","resp","defaultState","APP_LANG","Lang","localStorage","getItem","navigator","language","toLowerCase","setItem","_instance","getInstance","lang","loading","rootReducer","combineReducers","newState","splice","tempTasks","store","createStore","requestCount","showGlobalLoading","hideGlobalLoading","axiosIns","axios","create","baseURL","interceptors","request","use","config","Promise","reject","response","fetchLipStickList","get","fetchNailPolish","fetchMascara","fetchLipLiner","fetchFoundation","fetchEyeshadow","fetchEyeliner","fetchEyebrow","fetchBronzer","fetchBlush","LipsticksList","authNeeded","routeTo","NailPolishList","MascaraList","LipLinerList","FoundationList","EyeshadowList","EyelinerList","EyebrowList","BronzerList","BlushList","Content","path","makeupsTitle","makeupsSubTitle","padding","maxWidth","minHeight","component","ButtonDark","fullWidth","MakeupsDetail","makeupData","match","date","Date","rating","price","defaultValue","disabled","hidden","AppContent","render","Makeups","UserCenter","Register","antIcon","SmileOutlined","spin","document","body","overflowY","spinning","wrapperClassName","indicator","tip","size","zhCN","enUS","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","message","duration","_configNotice","notification","info","warning","Modal","ExclamationCircleOutlined","onOk","onCancel","content","onOK","_configModal","EMAIL","Auth","removeItem","notice","modal","auth","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fcf18136.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport default function useLanguagePageText(locale) {\n  const [pageText, setPageText] = useState({});\n\n    // get lang data\n  useEffect(()=>{\n    // after componentDidMount and componentDidUpdate, we need to get langData file and set page text\n    React.$lang.languageLoader().then((langData)=>{\n      setPageText(langData.default);\n    })\n  }, [locale])\n\n  return pageText;\n}","import React from 'react';\n\n// import from redux\nimport {connect} from \"react-redux\";\n\n// import from antd UI\nimport {Layout} from 'antd'\n\n// import custimazied hook, get language data.\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\n\nfunction AppFooter(props) {\n  const { Footer } = Layout;\n  const { locale } = props\n\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  return (\n    <>\n      <Footer className=\"app-footer\">\n        <div className=\"footer-info\">\n          {\n            !!pageText.appFooter && \n            <span><strong>{pageText.appFooter[0]}</strong> seanli9018@gmail.com; <strong>{pageText.appFooter[1] || ''}</strong> 312-825-9982</span>\n          }\n        </div>\n      </Footer>\n    </>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.locale\n  }\n}\n\n// export component\nexport default connect(mapStateToProps, null)(AppFooter);","//1. Change locale\nexport const CHANGE_LOCALE = 'change_locale';\n//2. Global loading state - open\nexport const OPEN_LOADING = 'open_loading';\n//3. Global loading state - close\nexport const CLOSE_LOADING = 'close_loading';","import React from 'react';\n\n//import from antd\nimport {  Radio } from 'antd';\n\nimport moment from \"moment\";\nimport {connect} from \"react-redux\";\nimport { changeLocale } from \"../store/globalActionCreators\";\n\n\nfunction LangRadio(props) {\n  const { dispatchChangeLocale } = props;\n\n  let handleLocale = e => {\n    let localeValue = {};\n    let selectedLocaleValue = e.target.value;\n\n    // set store locale state\n    dispatchChangeLocale(selectedLocaleValue);\n\n    // set localStorage APP_LANG\n    React.$lang.setLang(selectedLocaleValue);\n\n    if (!localeValue) {\n      moment.locale('en');\n    } else {\n      moment.locale('zh-cn');\n    }\n  };\n\n  return (\n    <>\n      <div className=\"change-locale\">\n        <Radio.Group value={!!React.$lang.userLanguage ? React.$lang.userLanguage : 'en'} onChange={handleLocale}>\n          <Radio.Button key=\"en\" value='en'>\n            English\n          </Radio.Button>\n          <Radio.Button key=\"cn\" value='zh-cn'>\n            中文\n          </Radio.Button>\n        </Radio.Group>\n      </div>\n    </>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.globalState.locale\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatchChangeLocale(localValue){\n      const action = changeLocale(localValue);\n      dispatch(action);\n    }\n  }\n}\n\n// export List component\nexport default connect(mapStateToProps, mapDispatchToProps)(LangRadio);","// 导入actionTypes\nimport {\n  CHANGE_LOCALE, \n  OPEN_LOADING, \n  CLOSE_LOADING\n} from \"./globalActionTypes\";\n\n//1. handle locale\nexport const changeLocale = (localeValue) => {\n  return {\n    type: CHANGE_LOCALE,\n    localeValue\n  }\n}\n\n//2. global loading open;\nexport const openLoading = () => {\n  return {\n    type: OPEN_LOADING,\n    loading: true\n  }\n}\n\n//3. global loading close;\nexport const closeLoading = () => {\n  return {\n    type: CLOSE_LOADING,\n    loading: false\n  }\n}","// import from react\nimport React from 'react';\n\n// import from antd\nimport {Layout, Menu} from 'antd'\nimport { DashboardOutlined, HomeOutlined, UnorderedListOutlined, UserOutlined, HeartOutlined } from \"@ant-design/icons\";\n\n// import from react-router-dom\nimport { NavLink, withRouter } from \"react-router-dom\";\n\n// import from redux\nimport { connect } from \"react-redux\";\n\n// import from components\nimport LangRadio from \"./LangRadio\";\n\n// import custimazied hook, get language data.\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\n\nfunction AppHeader(props) {\n  const { Header } = Layout;\n  const { locale } = props\n\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  // handle log out btn click event\n  function handleLogOut() {\n    // clear user auth\n    React.$auth.clearUserAuth();\n    // redirect to log in page\n    props.history.replace('/');\n    // show logout successfully modal\n    let logoutMsg = pageText.loginLogoutMsg ? pageText.loginLogoutMsg[1] : \"\";\n    React.$notice.success(logoutMsg, '', 6);\n  }\n\n  // test to see if nav selected keys match\n  const makeupsReg = /\\/makeups/\n  const makeupsExsit = makeupsReg.test(props.history.location.pathname);\n  return (\n    <>\n      <Header \n        className=\"app-header\"\n      >\n        <Menu selectedKeys={[props.history.location.pathname]} mode=\"horizontal\">\n          {/*Route Navi*/}\n          <Menu.Item key={makeupsExsit ? [props.history.location.pathname] : \"\"} icon={<HeartOutlined />}>\n            <NavLink to=\"/makeups\">{!!pageText.appHeader ? pageText.appHeader[4] : \"\"}</NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/tasks\" icon={<UnorderedListOutlined />}>\n            <NavLink exact to=\"/tasks\">{!!pageText.appHeader ? pageText.appHeader[3] : \"\"}</NavLink>\n          </Menu.Item>\n          {/*<Menu.Item key=\"/dashboard\" icon={<DashboardOutlined />}>*/}\n          {/*  <NavLink exact to=\"/dashboard\">{!!pageText.appHeader ? pageText.appHeader[1] : \"\"}</NavLink>*/}\n          {/*</Menu.Item>*/}\n          <Menu.Item key=\"/usercenter\" icon={<UserOutlined />}>\n            <NavLink exact to={{\n              pathname: \"/usercenter\",\n              search: \"?name=sean&age=18\",\n              hash: \"#hashtag\",\n              state: {fromDashboard: true, link: 'google.com', userId: React.$auth.email ? React.$auth.email.replace(/@[\\s\\S]+/, \"\") : \"\"}\n            }}>\n              {!!pageText.appHeader ? pageText.appHeader[2] : \"\"}\n            </NavLink>\n          </Menu.Item>\n        </Menu>\n        <div className=\"header-info\">\n          {/*if authenticated, show username, else show signup/login btn*/}\n          { React.$auth.is_authenticated ?\n            <span className=\"header-signup\">\n              <NavLink\n                exact\n                activeClassName=\"link-text-active\"\n                to=\"/usercenter\">\n                {React.$auth.email.replace(/@[\\s\\S]+/, '')}\n              </NavLink>\n              <span className=\"header-logout\" onClick={() => handleLogOut()}>Log out</span>\n            </span> :\n            <span className=\"header-signup\">\n              <NavLink\n                exact\n                activeClassName=\"link-text-active\"\n                to=\"/register\">\n                {!!pageText.appHeader ? pageText.appHeader[5] : \"\"}\n              </NavLink>\n            </span>\n          }\n          <LangRadio />\n        </div>\n      </Header>\n    </>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.globalState.locale\n  }\n}\n\n// export List component\nexport default connect(mapStateToProps, null)(withRouter(AppHeader));","// import from react\nimport React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\n\n// import from echarts\nimport * as echarts from 'echarts/core';\nimport {\n  GridComponent,\n  ToolboxComponent,\n  LegendComponent\n} from 'echarts/components';\nimport {\n  LineChart,\n  PieChart\n} from 'echarts/charts';\nimport {\n  CanvasRenderer\n} from 'echarts/renderers';\n\nfunction ReactEcharts(props) {\n  echarts.use(\n    [GridComponent, LineChart, CanvasRenderer, ToolboxComponent,\n      LegendComponent, PieChart]\n  );\n  const echartsInstance = echarts; //echarts object\n  let echartsDOMElement = null; //echarts dom\n  let { option, style, className } = props // get props\n\n  // get real dom on didMount\n  useEffect(() => {\n    //get dom element instance, if no instance then init one\n    let echartObj = echartsInstance.getInstanceByDom(echartsDOMElement) ||\n      echartsInstance.init(echartsDOMElement);\n\n    //set echarts option\n    echartObj.setOption(option);\n\n    // Destory the element on WillUnmount\n    return function destroyEchartElement() {\n      echartObj.dispose();\n    }\n  }, [option])\n\n  return (\n    <div\n      ref={(e) => {echartsDOMElement = e}}\n      style={style}\n      className={className}\n    >Echarts</div>\n  )\n}\n\n// specify propTypes for component\nReactEcharts.propTypes = {\n  option: PropTypes.object.isRequired,\n  style: PropTypes.object,\n  className: PropTypes.string\n}\n\nReactEcharts.defaultProps = {\n  style: {height: \"300px\", width: \"500px\"},\n  className: \"\"\n}\n\nexport default ReactEcharts;","import React, {useEffect} from 'react';\n\n// import components\nimport ReactEcharts from \"../components/ReactEcharts\";\n\n\nfunction Dashboard() {\n  let option1 = {\n    xAxis: {\n      type: 'category',\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series: [{\n      data: [820, 932, 901, 934, 1290, 1330, 1320],\n      type: 'line',\n      smooth: true\n    }]\n  }\n\n  let option2 = {\n    legend: {\n      top: 'bottom'\n    },\n    toolbox: {\n      show: true,\n      feature: {\n        mark: {show: true},\n        dataView: {show: true, readOnly: false},\n        restore: {show: true},\n        saveAsImage: {show: true}\n      }\n    },\n    series: [\n      {\n        name: 'Pattern',\n        type: 'pie',\n        radius: [50, 100],\n        center: ['50%', '50%'],\n        roseType: 'area',\n        itemStyle: {\n          borderRadius: 8\n        },\n        data: [\n          {value: 40, name: 'rose 1'},\n          {value: 38, name: 'rose 2'},\n          {value: 32, name: 'rose 3'},\n          {value: 30, name: 'rose 4'},\n          {value: 28, name: 'rose 5'},\n          {value: 26, name: 'rose 6'},\n          {value: 22, name: 'rose 7'},\n          {value: 18, name: 'rose 8'}\n        ]\n      }\n    ]\n  }\n  return (\n    <div id=\"main-container\" style={{display: 'flex', flexDirection: 'row'}}>\n      <ReactEcharts option={option1} />\n      <ReactEcharts option={option2} style={{\"width\": \"500px\", \"height\": \"350px\"}}/>\n    </div>\n  )\n}\n\nexport default Dashboard;","import React from 'react';\nimport {connect} from \"react-redux\";\n\n// import custimazied hook, get language data.\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\n\nfunction UserCenter(props) {\n  //const query = new URLSearchParams(props.location.search);\n  //const userId = props.location.state ? props.location.state.userId : '';\n\n  const { locale } = props\n\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  return (\n    <div>\n      <h1>{!!pageText.usercenterTitle && pageText.usercenterTitle[0]}</h1>\n      {\n        !!React.$auth.is_authenticated &&\n        <span>{!!pageText.usercenterTitle && pageText.usercenterTitle[1] + React.$auth.email.replace(/@[\\s\\S]+/, \"\")}</span>\n      }\n    </div>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.locale\n  }\n}\n\n// export user center component\nexport default connect(mapStateToProps, null)(UserCenter);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nfunction Button(props) {\n  // get props\n  const { showBtn, value, onClickFunction, btnClass }= props;\n\n  // render virtual element\n  return (\n    <>\n      <input\n        type=\"button\"\n        className={\"btn \" + (btnClass ? btnClass : \"\")}\n        value={value}\n        style={{display: showBtn ? \"block\" : \"none\"}}\n        onClick={() => onClickFunction()}\n      />\n    </>\n  )\n}\n\n// specify Button component prop types\nButton.propTypes = {\n  showBtn: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  btnClass: PropTypes.string,\n  onClickFunction: PropTypes.func.isRequired\n}\n\nexport default Button;","//1.添加所有的已经存在的任务\nexport const ADD_ALL_TASKS = 'add_all_tasks';\n//2.添加一条任务\nexport const ADD_ONE_TASK = 'add_one_task';\n//3.删除一条任务\nexport const DEL_ONE_TASK = 'del_one_task';\n//4.修改一条任务的完成状态\nexport const CHANGE_ONE_FINISHED = 'change_one_finished';\n//5.修改所有任务的完成状态（全选或全不选）\nexport const IS_ALL_FINISHED = 'is_all_finished';\n//6.清除所有已完成的任务\nexport const DEL_FINISHED_TASKS = 'del_finished_tasks';\n//7.move task item up and down\nexport const MOVE_TASK = 'move_task';","// React imports\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'\nimport useLanguagePageText from \"../../custimizedHook/LanguageHook\";\nimport Button from '../button/Button';\n// react-redux imports\nimport { connect } from 'react-redux';\nimport {changeOneFinished, delOneTask} from \"../todo/store/taskActionCreators\";;\n\n// components imports\n\nfunction Item(props) {\n  const [showBtns, setShowBtns] = useState(false);\n  const [showUpBtns, setShowUpBtns] = useState(false);\n  const [showDownBtns, setShowDownBtns] = useState(false);\n  const { locale } = props;\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  //flag is a boolean, flag = onMouseOver ? true : false\n  function handleShowDelBtn(flag) {\n    setShowBtns(flag);\n  }\n\n  //if index !== 0, then show up btn\n  function handleUpBtns(index) {\n    if(index !== 0 ){\n      setShowUpBtns(true);\n    }else{\n      setShowUpBtns(false);\n    }\n  }\n\n  //if index !== last index, then show down btn\n  function handleDownBtns(index) {\n    if(index !== tasks.length-1){\n      setShowDownBtns(true);\n    }else{\n      setShowDownBtns(false);\n    }\n  }\n \n\n  function handleShowBtn(flag, index){\n    // Mouse hover ? show : hide\n    handleShowDelBtn(flag);\n    \n    // control Up btn and down btn show/hide\n    if(index !== undefined){\n      handleUpBtns(index);\n      handleDownBtns(index);\n    }\n  }\n\n  // finished ? dispatch delete task : prompt confirm modal\n  function handleItemDelete(itemId, finshedStatus){\n    const { dispatchDelOneTask } = props;\n    if(finshedStatus){\n      dispatchDelOneTask(itemId);\n    }else{\n      // prompt Confirm modal\n      React.$modal.confirm(()=>{ // Ok clicked\n        dispatchDelOneTask(itemId);\n      }, ()=>{ // Cancel clicked\n        console.log(\"Clicked Cancel\");\n      }, \"Do you really want to delete unfinished task?\")\n    }\n  }\n\n  const { item, itemIndex, dispatchChangeTaskFinished, handleMoveEvent, tasks } = props;\n\n  return (\n    <li className=\"task-item\"\n        onMouseOver={() => handleShowBtn(true, itemIndex)}\n        onMouseOut={() => handleShowBtn(false)}\n    >\n      <label htmlFor={\"item-check-box\"+item.id}>\n        <input\n          className=\"item-check-box\"\n          type=\"checkbox\"\n          name=\"item-check-box\"\n          id={\"item-check-box\"+item.id}\n          checked={item.finished}\n          onChange={() => dispatchChangeTaskFinished(item.id, !item.finished)}/>\n        <span>{item.title}</span>\n      </label>\n      <div className=\"button-group\">\n        <Button\n          value={!!pageText.tasksBtns?pageText.tasksBtns[0]:\"\"}\n          showBtn={showBtns && showUpBtns}\n          onClickFunction={() => handleMoveEvent(itemIndex, -1)}\n        />\n        <Button\n          value={!!pageText.tasksBtns?pageText.tasksBtns[1]:\"\"}\n          showBtn={showBtns && showDownBtns}\n          onClickFunction={() => handleMoveEvent(itemIndex, 1)}\n        />\n        <Button\n          value={!!pageText.tasksBtns?pageText.tasksBtns[2]:\"\"}\n          showBtn={showBtns}\n          btnClass=\"delete-btn\"\n          onClickFunction={() => handleItemDelete(item.id, item.finished)}\n        />\n      </div>\n    </li>\n  )\n}\nItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  handleMoveEvent: PropTypes.func.isRequired,\n  itemIndex: PropTypes.number.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.taskState.tasks,\n    locale: state.globalState.locale\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatchDelOneTask(taskId) {\n      // get action object ready\n      const action = delOneTask(taskId);\n      dispatch(action);\n    },\n    dispatchChangeTaskFinished(taskId, finishedStatus) {\n      // get action object ready\n      const action = changeOneFinished(taskId, finishedStatus);\n      dispatch(action);\n    }\n  }\n}\n\n// export Item component\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","// 导入actionTypes\nimport {\n  ADD_ALL_TASKS,\n  ADD_ONE_TASK,\n  DEL_ONE_TASK,\n  CHANGE_ONE_FINISHED,\n  IS_ALL_FINISHED,\n  DEL_FINISHED_TASKS,\n  MOVE_TASK,\n} from \"./taskActionTypes\";\n\n//1.添加所有的已经存在的任务\nexport const addAllTasks = (tasks)=>{\n  return {\n    type: ADD_ALL_TASKS,\n    tasks\n  }\n}\n//2.添加一条任务\nexport const addOneTask = (task)=>{\n  return {\n    type: ADD_ONE_TASK,\n    task\n  }\n}\n//3.删除一条任务\nexport const delOneTask = (taskId)=>{\n  return {\n    type: DEL_ONE_TASK,\n    taskId\n  }\n}\n//4.修改一条任务的完成状态\nexport const changeOneFinished = (taskId, finishedStatus)=>{\n  return {\n    type: CHANGE_ONE_FINISHED,\n    taskId,\n    finishedStatus\n  }\n}\n//5.修改所有任务的完成状态（全选或全部选）\nexport const isAllFinished = (flag)=>{\n  return {\n    type: IS_ALL_FINISHED,\n    flag\n  }\n}\n//6.清除所有已完成的任务\nexport const delFinishedTasks = ()=>{\n  return {\n    type: DEL_FINISHED_TASKS,\n  }\n}\n\n//7. move task item up and down\nexport const moveTask = (index, diff) => {\n  return{\n    type: MOVE_TASK,\n    index,\n    diff\n  }\n}","import React from 'react';\n\n// import components\nimport Item from './Item';\n// react-redux imports\nimport { connect } from 'react-redux';\nimport { moveTask } from \"../todo/store/taskActionCreators\";\n\n// List component\nfunction List(props) {\n  // get tasks from props;\n  const { tasks, dispatchSortItem } = props;\n  return (\n    <ul className=\"task-list\">\n        {tasks.map((task, index) => (\n          <Item item={task} itemIndex={index} key={task.id} handleMoveEvent={(index, diff) => dispatchSortItem(index, diff)}/>\n        ))}\n    </ul>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.taskState.tasks\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatchSortItem(index, diff){\n      const action = moveTask(index, diff);\n      dispatch(action);\n    }\n  }\n}\n\n// export List component\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import React, {useState} from 'react';\nimport useLanguagePageText from \"../../custimizedHook/LanguageHook\";\n//import react-redux\nimport { connect } from 'react-redux';\nimport { addOneTask } from \"../todo/store/taskActionCreators\";;\n\nfunction TodoHeader(props) {\n  const [taskInput, setTaskInput] = useState('');\n  const { locale } = props;\n\n  //get lang data, passing \"locale\" to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  function handleInputChange(e) {\n    setTaskInput(e.target.value);\n  }\n\n  // handle Enter key down event\n  function handleKeyEvent(e) {\n    // 0. initial and get all tasks data\n    const { tasks } = props;\n\n    // 1. handle key down event; dispatch input data to store state\n    if(e.keyCode === 13 && !! taskInput) {\n      // calculate last task's id based on store state length\n      const lastItemId = tasks.length === 0 ? 1 : tasks[tasks.length - 1].id\n\n      // organize the newly created task object\n      const item = {\n        id: lastItemId + 1,\n        title: taskInput.trim(),\n        finished: false\n      }\n\n      // dispatch new tasks and set store state\n      const { dispatchAddOneTask } = props;\n      dispatchAddOneTask(item);\n\n      // clear header input, after successfully add input value\n      setTaskInput('');\n    }\n  }\n\n  return (\n    <div className=\"tasks-header\">\n      <input className=\"task-input\"\n             type=\"text\"\n             placeholder={pageText.tasksInputPlaceholder}\n             value={taskInput}\n             onChange={(e) => handleInputChange(e)}\n             onKeyDown={(e) => handleKeyEvent(e)}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state /*, ownProps*/) => {\n  // return newly matched store state to component props\n  return {\n    tasks: state.taskState.tasks,\n    locale: state.globalState.locale\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  // return newly matched store dispatch to component props\n  return {\n    dispatchAddOneTask(task) {\n      // get action object\n      const action = addOneTask(task);\n      // dispatch to reducer to update store state\n      dispatch(action);\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHeader)","import React from 'react';\nimport useLanguagePageText from \"../../custimizedHook/LanguageHook\";\n\n// import component\nimport Button from '../button/Button';\n// react-redux imports\nimport { connect } from 'react-redux';\nimport {isAllFinished, delFinishedTasks} from \"../todo/store/taskActionCreators\";;\n\n\nfunction TodoFooter (props) {\n  const { locale } = props;\n  \n  //get lang data, passing \"locale\" to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  // calculate the count of finished tasks\n  function _calculateFinishedTasks(tasks) {\n    let finishedTaskCount = 0;\n\n    tasks.forEach((task) => {\n      if (task.finished === true) {\n        finishedTaskCount += 1;\n      }\n    })\n    return finishedTaskCount\n  }\n\n  const {items, dispatchIsAllFinished, dispatchDelFinishedTasks} = props;\n  const finishedItems = _calculateFinishedTasks(items);\n  const totalItems = items.length;\n\n  return (\n    <div className=\"tasks-footer\">\n      <div className=\"tasks-footer-info\">\n        <label htmlFor=\"footer-checkbox\"></label>\n        <input\n          type=\"checkbox\"\n          id=\"footer-checkbox\"\n          checked={finishedItems === totalItems && totalItems > 0}\n          onChange={() => dispatchIsAllFinished(finishedItems !== totalItems)} // if it is not all-selected, then flag === true\n        />\n        {\n          !!pageText.tasksFooter && //if pageText.tasksFooter is Not undefined, then we render, otherwise it will thorw a error\n          <span className=\"task-info\">\n            {pageText.tasksFooter[0]} {finishedItems} {finishedItems===1?pageText.tasksFooter[1]:pageText.tasksFooter[2]} / {finishedItems===1?pageText.tasksFooter[3]:pageText.tasksFooter[4]} {totalItems}\n          </span>\n        }\n      </div>\n      {/* <input type=\"button\" className=\"btn\" value={!!pageText && pageText.tasksFooterBtn} onClick={() => dispatchDelFinishedTasks()} /> */}\n      <Button showBtn={true} value={pageText.tasksFooterBtn || ''} onClickFunction={() => dispatchDelFinishedTasks()}/>\n    </div>\n  )\n}\n\n// get redux state and passing it to component props.\nconst mapStateToProps = (state) => {\n  return {\n    items: state.taskState.tasks,\n    locale: state.globalState.locale\n  }\n}\n\n// get dispatch function to set or change the redux state.\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatchDelFinishedTasks() {\n      // get action object ready\n      const action = delFinishedTasks();\n      dispatch(action);\n    },\n    dispatchIsAllFinished(flag) {\n      // get action object ready\n      const action = isAllFinished(flag);\n      dispatch(action);\n    }\n  }\n}\n\n// export Item component\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoFooter);","import React from 'react';\n\n// Import components\nimport List from '../components/todo/List';\nimport Header from '../components/todo/TodoHeader';\nimport Footer from '../components/todo/TodoFooter';\nimport '../index.scss';\n\n// Import redux and react-redux\nimport { connect } from 'react-redux';\nimport {addAllTasks} from '../components/todo/store/taskActionCreators';\n\nclass Todos extends React.Component {\n  // Did Mount, get data\n  componentDidMount() {\n    const data = {\n      status: 200,\n      tasks: [\n        {id: 1, title: \"Learn react for 2 hours\", finished: false},\n        {id: 2, title: \"Learn node for 2 hours\", finished: true},\n        {id: 3, title: \"Learn vue js for 2 hours\", finished: false},\n        {id: 4, title: \"Play xbox one for 1 hour\", finished: false}\n      ]\n    }\n\n    //dispatch data to store\n    this.props.dispatchData(data);\n  }\n\n  render() {\n    return (\n      <div className='tasks-wrapper'>\n        <div className='tasks-container'>\n          {/*Header Part - Task Input Box*/}\n          <Header />\n\n          {/*List Part - Task List*/}\n          <List />\n          {/*Below also works in the create-react-app, you don't have to use arrow func or bind this*/}\n          {/*<List tasksArr={tasks} handleCheckBoxChange={this.handleTasksFinish}/>*/}\n\n          {/*Footer Part - Task Control and Delete Btn*/}\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // return newly matched store dispatch to component props\n    dispatchData(data){\n      // get action\n      let action = addAllTasks(data.tasks);\n      // dispatch action to reducer to save data as new state\n      dispatch(action);\n    }\n  }\n}\n\n// export default App;\nexport default connect(null, mapDispatchToProps)(Todos);\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types'\n\n//import from antd icon\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons'\n\n\nfunction TextInput(props) {\n  // get props\n  const {inputTitle, inputType, className, value, onChange, onBlur} = props;\n\n  // store initial props.inputType, the state input type can be set to \"text\"\n  const [type, setType] = useState(props.inputType)\n\n  // icon style object ready to use\n  const iconStyle = {\n    fontSize: \"14px\",\n    position: \"absolute\",\n    right: \"0\",\n    height: \"30px\",\n    marginTop: \"8px\",\n    boxSizing: \"border-box\",\n    color: \"#ccc\",\n    minWidth: \"30px\"\n  }\n\n  // handle eye icon onClick event\n  function handleEyeSwitch(){\n    if(type === \"password\") {\n      setType(\"text\") // if current type === \"password\", then we switch it to \"text\"\n    } else {\n      setType(\"password\")\n    }\n  }\n\n  // prepare eyeIconDom, dynamic render based on input type\n  // if input type === password, we render eye invisible icon dom, else we render eye icon dom\n  const eyeIconDom = (\n    <a onClick={()=>{handleEyeSwitch()}}>\n      {type === \"password\" ? <EyeInvisibleOutlined style={iconStyle}/>: <EyeOutlined style={iconStyle} />}\n    </a>\n  )\n\n  // render\n  return (\n    <>\n      <div style={{position: \"relative\", marginTop: \"15px\"}}>\n        <label htmlFor={inputTitle}>{inputTitle}</label>\n        <input\n          type={type}\n          className={\"text-input \" + (className ? className: \"\")}\n          id={inputTitle}\n          value={value}\n          style={{width: \"100%\"}}\n          onChange={(e) => onChange(e)}\n          onBlur={(e) => onBlur(e)}\n        />\n        {/*If props.inputType is password, we render this icon, if the type is text, we do not render any icon*/}\n        {inputType===\"password\" ? eyeIconDom : null}\n      </div>\n    </>\n  )\n}\n\n// specify Button component prop types\nTextInput.propTypes = {\n  inputTitle: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  inputType: PropTypes.string,\n  className: PropTypes.string\n}\n\nTextInput.defaultProps = {\n  inputType: \"text\"\n}\n\nexport default TextInput;","import React, { useState } from 'react';\n\n// import redux\nimport {connect} from 'react-redux';\n\n// import component\nimport Button from '../components/button/Button';\nimport TextInput from '../components/input/TextInput';\n\n// import custimazied hook, get language data.\nimport useLanguagePageText from '../custimizedHook/LanguageHook';\n\n\nfunction Register(props) {\n  // for form data\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmedPassword: \"\"\n  })\n\n  // for form fields validations.\n  const [errors, setErrors] = useState({});\n\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const { locale } = props;\n  const pageText = useLanguagePageText(locale);\n\n  // handle email input change function\n  function handleEmailChange(e) {\n    // deep copy current state data\n    let formDataObj = JSON.parse(JSON.stringify(formData));\n    // change copied data\n    formDataObj.email = e.target.value;\n    // setState the changed copy data to state\n    setFormData(formDataObj);\n  }\n\n  // handle password input change function\n  function handlePasswordChange(e) {\n    // deep copy current state data\n    let formDataObj = JSON.parse(JSON.stringify(formData));\n    // change copied data\n    formDataObj.password = e.target.value;\n    // setState the changed copy data to state\n    setFormData(formDataObj);\n  }\n\n  // handle email input change function\n  function handleConfirmedPasswordChange(e) {\n    // deep copy current state data\n    let formDataObj = JSON.parse(JSON.stringify(formData));\n    // change copied data\n    formDataObj.confirmedPassword = e.target.value;\n    // setState the changed copy data to state\n    setFormData(formDataObj);\n  }\n\n  //validate field\n  function validateField(...field) {\n    // deep copy errors state\n    let errorsObj = JSON.parse(JSON.stringify(errors));\n\n    // email field validate\n    if(field.length === 0 || field.indexOf('email') >= 0){\n      let re = /^\\w+[\\w-]+@\\w+[\\w-]+(\\.[-\\w]+)+$/;\n      if(!formData.email) { // if no email input\n        errorsObj.email = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[0] : '';\n      }else if (!re.test(formData.email)){ // if there is email and NOT pass the reg test\n        errorsObj.email = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[1] : '';\n      }else { //if there is email input and pass the reg test\n        errorsObj.email = \"\";\n      }\n    }\n\n    // password field validate\n    if(field.length === 0 || field.indexOf('password') >= 0){\n      // password has to be 6-15 in length, no Space\n      // password needs to include at least one letter, capital letter, number, and special character.\n      let regArray = [/^\\S{6,15}$/, /[A-Z]/, /[a-z]/, /[0-9]/, /[!@#$%^&*)(_\\-=?/<>.,+|~`]/];\n      let testResult = regArray.every(e => e.test(formData.password));\n      if(!formData.password) { // if no password input\n        errorsObj.password = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[2] : '';\n      }else if(!testResult){ // if the password NOT pass the reg test.\n        errorsObj.password = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[3] : '';\n      }else{ //if there is email input\n        errorsObj.password = \"\";\n      }\n    }\n\n    // confirmed password field validate\n    if(field.length === 0 || field.indexOf('confirmedPassword') >= 0){\n      if(!formData.confirmedPassword) { // if no confirm password input\n        errorsObj.confirmedPassword = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[4] : '';\n      } else { //if confirm password looks good\n        errorsObj.confirmedPassword = \"\";\n      }\n    }\n\n    //matching password and confirm password\n    if(field.length === 0 || field.indexOf('matchPassword') >= 0) {\n      if (formData.confirmedPassword !== formData.password) { // if not matching\n        errorsObj.confirmedPassword = pageText.signUpValidateMsg ? pageText.signUpValidateMsg[5] : '';\n      } else { //if confirm password looks good\n        errorsObj.confirmedPassword = \"\";\n      }\n    }\n\n    // set error state\n    setErrors(errorsObj);\n\n    // once click submit btn, validate errorsObj.\n    for (let k in errorsObj) {\n      if(!!errorsObj[k]){\n        return false; // if there is item in errorsObj: Not pass\n      }\n    }\n    return true; // if there is NO item in errorObj: Passed;\n  }\n\n  // handle form submit\n  function onSubmit() {\n    // run validate func, it validates all fields when no parameters passing in;\n    const validateResult = validateField();\n\n    // do something once passed or NOT passed.\n    if(validateResult){\n      React.$auth.setUserAuth(formData.email); // set auth;\n      props.history.push('/') // redirect to home page;\n      React.$notice.success(pageText.signUpNoticeMsg[0],\n        pageText.signUpNoticeMsg[1], 6)\n    }else{\n      React.$notice.error(pageText.signUpNoticeMsg[2],\n        pageText.signUpNoticeMsg[3], 6)\n    }\n  }\n\n  // render virtual element\n  return (\n    <div className=\"register-wrapper\">\n      <div className=\"register-container\">\n        <div>\n          <h3>{pageText.signUpTitle || \"\"}</h3>\n        </div>\n        <form className=\"general-form\">\n          <TextInput\n            inputTitle={pageText.signUpInputTitle ? pageText.signUpInputTitle[0] : \"\"}\n            value={formData.email}\n            onChange={(e) => handleEmailChange(e)}\n            onBlur={() => validateField(\"email\")}\n          />\n          <span className=\"input-error\">{errors.email || \"\"}</span>\n          <TextInput\n            inputTitle={pageText.signUpInputTitle ? pageText.signUpInputTitle[1] : \"\"}\n            value={formData.password}\n            inputType=\"password\"\n            onChange={(e) => handlePasswordChange(e)}\n            onBlur={() => validateField(\"password\", \"matchPassword\")}\n          />\n          <span className=\"input-error\">{errors.password || \"\"}</span>\n          <TextInput\n            inputTitle={pageText.signUpInputTitle ? pageText.signUpInputTitle[2] : \"\"}\n            value={formData.confirmedPassword}\n            inputType=\"password\"\n            onChange={(e) => handleConfirmedPasswordChange(e)}\n            onBlur={() => validateField(\"confirmedPassword\", \"matchPassword\")}\n          />\n          <span className=\"input-error\">{errors.confirmedPassword || \"\"}</span>\n          <Button showBtn={true} btnClass=\"sign-up-btn\" value={pageText.signUpSubmitBtn || \"\"} onClickFunction={() => onSubmit()}/>\n        </form>\n      </div>\n    </div>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.locale\n  }\n}\n\n// export component\nexport default connect(mapStateToProps, null)(Register);","import { useState, useEffect, useRef, useCallback } from 'react';\n\n// hook for obtaining hook's previous state\nexport function usePrevious(value) {\n\tconst ref = useRef();\n\tuseEffect(() => {\n\t\tref.current = value;\n\t},[value]);\n\treturn ref.current;\n}\n\n// internal function for getting visible screen/windows width and height.\nfunction _getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\n// hook for getting windows dimensions (width and height)\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(_getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(_getWindowDimensions());\n    }\n    // add event listener onResize to window. everytime, after resizing, we re-triger handleResize func to re-setState.\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\n// hook for getting element width (Will work on the element height later)\nexport function useElementGetBoundingClientRect(element, listenScroll=false) {\n  const [ elementGetBoundingClientRect, setElementGetBoundingClientRect ] = useState({});\n\n  // get list element width\n  useEffect(() => {\n    // set state after first time mounted\n    const handleUpdateEleClientRect = () => {\n      if(element.current) {\n        const eleRect = element.current.getBoundingClientRect();\n        setElementGetBoundingClientRect({\n          width: eleRect.width,\n          top: eleRect.top,\n          left: eleRect.left,\n        });\n      }\n    }\n    window.addEventListener('resize', handleUpdateEleClientRect);\n    handleUpdateEleClientRect();\n    if(listenScroll) {\n      window.addEventListener('scroll', handleUpdateEleClientRect);\n    }\n    // on Component Will Unmount\n    return () => window.removeEventListener('resize', handleUpdateEleClientRect);\n  }, [element.current])\n\n  return elementGetBoundingClientRect;\n}\n\n// hook for getting element position scroll status (scrollTop and scrolling)\nexport function useScrollTop() {\n  const [ scrollStatus, setScrollStatus ] = useState({scrollTop: 0, scrolling: false});\n\tconst preScrollTop = usePrevious(scrollStatus.scrollTop);\n\n  useEffect(() => {\n    const handleOnScroll = () => {\n      setScrollStatus({\n        scrollTop: window.pageYOffset, // distance between visible screen's top to page top\n        scrolling: window.pageYOffset > preScrollTop\n      });\n    };\n    handleOnScroll();\n    window.addEventListener('scroll', handleOnScroll);\n\t\treturn () => window.removeEventListener('scroll', handleOnScroll);\n  }, [])\n\n\treturn scrollStatus;\n}\n\n// hook for getting element top to body top\nexport function useEleDistanceToTop (element) {\n  const [distanceToTop, setDistanceToTop] = useState(0);\n\n  const handleUpdateEleDistanceToTop = useCallback(() => {\n    let eleDistanceToTop = element.current ? (window.pageYOffset + element.current.getBoundingClientRect().top) : 0;\n    setDistanceToTop(eleDistanceToTop);\n  }, [window.pageYOffset, element.current]);\n\n  useEffect(() => {\n    handleUpdateEleDistanceToTop();\n    window.addEventListener('resize', handleUpdateEleDistanceToTop);\n    window.addEventListener('scroll', handleUpdateEleDistanceToTop);\n    // on Component Will Unmount\n    return () => {\n      window.removeEventListener('resize', handleUpdateEleDistanceToTop)\n      window.removeEventListener('scroll', handleUpdateEleDistanceToTop)\n    };\n  }, [handleUpdateEleDistanceToTop]);\n\n  return distanceToTop;\n}","//import react\nimport React, {useState, useEffect} from 'react';\n\n//import props limitation\nimport PropTypes from 'prop-types';\n\nfunction LazyImage(props) {\n  // init state: image loading status\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(false);\n\n  //prepare props\n  const { src, alt, className, onErrorSrc, loadingSrc } = props;\n\n  // load image once DOM mounted\n  useEffect(() => {\n    const image = new Image();\n\n    // handle load and error;\n    const handleLoad = () => {\n      setLoaded(true);\n    }\n    const handleError = () => {\n      setError(true);\n    }\n\n    image.onload = handleLoad;\n    image.onerror = handleError;\n\n    // assign the src from props to image;\n    image.src = src;\n\n    return ()=>{\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n  }, [])\n\n\n  return (\n    <img\n      className={className}\n      src={error ? onErrorSrc : !loaded ? loadingSrc : src}\n      alt={alt.join(\" \")}\n    />\n  )\n\n}\n\n// default props\nLazyImage.defaultProps = {\n  src: '',\n  alt: 'images',\n  onErrorSrc: process.env.PUBLIC_URL + '/handleimage/image-not-found.jpg',\n  loadingSrc: process.env.PUBLIC_URL + '/handleimage/image-loading.jpg',\n  className: 'img'\n}\n\n// prop types\nLazyImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.array,\n  onErrorSrc: PropTypes.string,\n  loadingSrc: PropTypes.string,\n  className: PropTypes.string\n}\n\nexport default LazyImage;","// import react\nimport React, {useState, useRef} from 'react';\n\n// import from antd\nimport { Layout, Menu } from \"antd\";\n\n// import from react-router\nimport {NavLink, useRouteMatch, withRouter} from \"react-router-dom\";\n\n//import custimized hook\nimport useLanguagePageText from \"../../custimizedHook/LanguageHook\";\nimport {useElementGetBoundingClientRect} from \"../../custimizedHook/elementPositions\";\n\n// import component\nimport LazyImage from \"../image/LazyImage\";\nimport {connect} from \"react-redux\";\n\nconst { Sider } = Layout;\n\nfunction MakeupNav (props) {\n  let { url } = useRouteMatch();\n  // on window <= md 768px, set onSideBreak to true\n  const [onSideBreak, setOnSideBreak] = useState(false);\n\n  const { locale } = props;\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  // customized hook get side nav position\n  const brokenSideNavRef = useRef(null); // bind broken side nav element\n  const {top: elementTop, width: elementWidth} = useElementGetBoundingClientRect(brokenSideNavRef, true);\n\n  const navElement =\n    <Menu\n    mode=\"inline\"\n    selectedKeys={[props.history.location.pathname]}\n    defaultSelectedKeys={['1']}\n    defaultOpenKeys={['sub1']}\n    style={{ height: '100%' }}\n  >\n    <Menu.Item key={props.history.location.pathname === url ? url : `${url}/blush`}>\n      <NavLink to={`${url}/blush`}>\n        <LazyImage\n          src=\"http://makeup-api.herokuapp.com/assets/blush-ff7992c3d7690d18a9b0224177cfbdedbc036497cf87c393ec01c6a2ef070258.svg\"\n          alt={[\"Blush\", \"product\"]}\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\n        />\n        {pageText.makeupsNav ? pageText.makeupsNav[0] : \"\"}\n      </NavLink>\n    </Menu.Item>\n    <Menu.Item key={`${url}/bronzer`}>\n      <NavLink to={`${url}/bronzer`}>\n        <LazyImage\n          src=\"http://makeup-api.herokuapp.com/assets/bronzer-2d423487eea3e4571229bd95689bb4eb4331f05740f3921ede7c7c765c7954b1.svg\"\n          alt={[\"Bronzer\", \"product\"]}\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\n        />\n        {pageText.makeupsNav ? pageText.makeupsNav[1] : \"\"}\n      </NavLink>\n    </Menu.Item>\n    <Menu.Item key={`${url}/eyebrow`}>\n      <NavLink to={`${url}/eyebrow`}>\n        <LazyImage\n          src=\"http://makeup-api.herokuapp.com/assets/eyebrow-fc49d8d480ace717203a21fe863c2231970063add91ed2f15181fe8e2d3b96b9.svg\"\n          alt={[\"Eyebrow\", \"product\"]}\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\n        />\n        {pageText.makeupsNav ? pageText.makeupsNav[2] : \"\"}\n      </NavLink>\n    </Menu.Item>\n    <Menu.Item key={`${url}/eyeliner`}>\n      <NavLink to={`${url}/eyeliner`}>\n        <LazyImage\n          src=\"http://makeup-api.herokuapp.com/assets/eyeliner-de329b6d65d721a45190051af1153e23202df9eb1c393d1ac65972376ee42d50.svg\"\n          alt={[\"Eyeliner\", \"product\"]}\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\n        />\n        {pageText.makeupsNav ? pageText.makeupsNav[3] : \"\"}\n      </NavLink>\n    </Menu.Item>\n    <Menu.Item key={`${url}/eyeshadow`}>\n      <NavLink to={`${url}/eyeshadow`}>\n        <LazyImage\n          src=\"http://makeup-api.herokuapp.com/assets/eyeshadow-67f9f8fd19df1862c95122f9b3460c7e6674d5a6d178cde00e6e4be908dd898a.svg\"\n          alt={[\"Eyeshadow\", \"product\"]}\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\n        />\n        {pageText.makeupsNav ? pageText.makeupsNav[4] : \"\"}\n      </NavLink>\n    </Menu.Item>\n    <Menu.Item key={`${url}/foundation`}>\n      <NavLink to={`${url}/foundation`}>\n        <LazyImage\n          src=\"http://makeup-api.herokuapp.com/assets/foundation-9985c8a404d4a19cf7a2985ed504958cadd9f71252a73c90b6a7178bf7075143.svg\"\n          alt={[\"Foundation\", \"product\"]}\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\n        />\n        {pageText.makeupsNav ? pageText.makeupsNav[5] : \"\"}\n      </NavLink>\n    </Menu.Item>\n    <Menu.Item key={`${url}/lipliner`}>\n      <NavLink to={`${url}/lipliner`}>\n        <LazyImage\n          src=\"http://makeup-api.herokuapp.com/assets/lip_liner-3f40bb63957aa7d47e3a2d1356b9380aa093271e5d58f3518181fd427e388d93.svg\"\n          alt={[\"Lip\", \"Liner\", \"product\"]}\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\n        />\n        {pageText.makeupsNav ? pageText.makeupsNav[6] : \"\"}\n      </NavLink>\n    </Menu.Item>\n    <Menu.Item key={`${url}/lipsticks`}>\n      <NavLink to={`${url}/lipsticks`}>\n        <LazyImage\n          src=\"http://makeup-api.herokuapp.com/assets/lipstick-4531b48ee71839393857e24c8cbc4dede1f99d2284ef82a6eb0a2a4d03540a14.svg\"\n          alt={[\"Lipstick\", \"product\"]}\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\n        />\n        {pageText.makeupsNav ? pageText.makeupsNav[7] : \"\"}\n      </NavLink>\n    </Menu.Item>\n    <Menu.Item key={`${url}/mascara`}>\n      <NavLink to={`${url}/mascara`}>\n        <LazyImage\n          src=\"http://makeup-api.herokuapp.com/assets/mascara-0deeeb81e58f31ddbff07847bfd0820e5ecdba1419f4281da743a05e0d6b3e69.svg\"\n          alt={[\"Mascara\", \"product\"]}\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\n        />\n        {pageText.makeupsNav ? pageText.makeupsNav[8] : \"\"}\n      </NavLink>\n    </Menu.Item>\n    <Menu.Item key={`${url}/nailpolish`}>\n      <NavLink to={`${url}/nailpolish`}>\n        <LazyImage\n          src=\"http://makeup-api.herokuapp.com/assets/nail_polish-a7e7204834c0c30e8b57a1ba9896656331e228b0daa09d1705d1ab29bc0b7151.svg\"\n          alt={[\"Nail\", \"Polish\", \"product\"]}\n          className={onSideBreak?\"makeup-top-nav-icon\":\"makeup-nav-icon\"}\n        />\n        {pageText.makeupsNav ? pageText.makeupsNav[9] : \"\"}\n      </NavLink>\n    </Menu.Item>\n  </Menu>\n  return (\n    <>\n      <Sider className=\"site-layout-background\"\n             width={200}\n             breakpoint=\"md\"\n             collapsedWidth=\"50\"\n             style={onSideBreak?{display: \"none\"}:{}}\n             onBreakpoint={broken => {\n        if(broken) { // on sidebar broken, set state to hide side bar;\n          setOnSideBreak(true);\n        } else {\n          setOnSideBreak(false);\n        }\n      }}>\n        {navElement}\n      </Sider>\n      <div\n        className=\"makeup-broken-nav\"\n        ref={brokenSideNavRef}\n        style={!onSideBreak?{display: \"none\"}:{}}\n        //style={elementTop <= 0 ? {position: \"fixed\", top: \"0\", left:\"0\"} : {position: \"relative\"}}\n      >\n        {navElement}\n      </div>\n    </>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.globalState.locale\n  }\n}\n\n// export List component\nexport default connect(mapStateToProps, null)(withRouter(MakeupNav));","// Capitalization String - first letter capitalized\nexport function capString(strArr) {\n  if(strArr.length > 0) {\n    return strArr.map(str => {\n      // if str is existed, then return uppercase str\n      return str && str.replace(str[0], str[0].toUpperCase());\n    })\n  }\n  return null;\n}\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types'\n\n//import utils string filters\nimport { capString } from '../../utils/stringFilter';\n\n// import component\nimport LazyImage from '../image/LazyImage'\n\nfunction MakeupItem(props) {\n  // get props\n  const handleClick = props.handleClick;\n  const makeupItem = props.makeupItem;\n  const { name, image_link, brand, category, description, tag_list, product_colors } = makeupItem;\n\n  // init state\n  const [display, setDisplay] = useState(false)\n\n  //prepare data string using capString filter\n  let strArr = [name, brand, category, description];\n  const [fName, fBrand, fCategory, fDescription] = capString(strArr);\n  let tagArr = [...tag_list];\n  const fTags = capString(tagArr);\n\n  //prepare color circle data\n  let productColors = product_colors.slice(0, 10);\n\n  //prepare makeup tag element\n  const tagElement = fTags && fTags.map(tag => {\n    return <span className=\"makeup-tag makeup-light-text\" key={tag}>{tag}</span>\n  })\n\n  //prepare makeup detailed info element\n  const makeupDetailElement =\n    <div className=\"makeup-details\">\n      <span className=\"makeup-title\">{fName}</span>\n      <div className=\"makeup-tags\">\n        {tagElement}\n      </div>\n      <span className=\"makeup-length makeup-light-text\">{fDescription && (fDescription.length>=50?fDescription.substr(0, 50) + \"...\" : fDescription)}</span>\n    </div>\n\n  //prepare makeup color circles element\n  const makeupColorElement =\n    <div className=\"makeup-colors\">\n      {productColors.map((color, index) => {\n        return <div className=\"makeup-color\" key={color.colour_name + index} style={{backgroundColor: color.hex_value}}></div>\n      })}\n    </div>\n\n\n  // render\n  return (\n    <>\n      {\n        !!props.makeupItem &&\n        <li className=\"makeup-item\" onClick={handleClick}>\n            {/* makeup image element */}\n            <LazyImage src={image_link} alt={[fBrand,fCategory, fName]} className=\"makeup-image\"/>\n            {/* Makeup detail info */}\n            {display && makeupDetailElement}\n            {/* Makeup bar info */}\n            <div className=\"makeup-info\">\n              <span className=\"makeup-title\">{fName}</span>\n              <span className=\"makeup-light-text makeup-type\">{fBrand}</span>\n              {/* Makeup color element */}\n              {makeupColorElement}\n            </div>\n            {/* Hover cover div */}\n            <div\n              className=\"makeup-item-cover\"\n              onMouseOver={() => setDisplay(true)}\n              onMouseOut={() => setDisplay(false)}\n            >\n            </div>\n        </li>\n      }\n    </>\n  )\n}\n\n// specify Button component prop types\nMakeupItem.propTypes = {\n  makeupItem: PropTypes.object.isRequired,\n  handleClick: PropTypes.func\n}\n\nMakeupItem.defaultProps = {\n}\n\nexport default MakeupItem;","// import react\nimport React, { useRef } from 'react';\nimport PropTypes from \"prop-types\";\n\n// import customized hook\nimport {useWindowDimensions, useElementGetBoundingClientRect, useScrollTop, useEleDistanceToTop} from '../../custimizedHook/elementPositions'\n\nfunction VerticalScrollVirtualList(props) {\n  // get data (props.list)\n  const list = props.list;\n  const listLength = list.length;\n\n  // get props.itemDimensions\n  const itemDimensions = props.itemDimensions;\n\n  // calculate screen height, after component mounted and updated\n  const { height } = useWindowDimensions();\n\n  // calculate scroll top\n  const { scrollTop } = useScrollTop();\n\n  // get bind list element\n  const listEleRef = useRef(null);\n  const listWrapperRef = useRef(null);\n\n  // get list element width\n  const { width: elementWidth } = useElementGetBoundingClientRect(listEleRef);\n  // calculate bind list element distance to page top\n  const eleDistanceToTop = useEleDistanceToTop(listWrapperRef);\n\n  // generate visible data items based on item dimensions, list position and window dimensions (visible area dimensions)\n  const itemHeight = itemDimensions.height; // item height\n  const itemWidth = itemDimensions.width; // item width\n  const itemsPerRow = Math.floor(elementWidth / itemWidth); // the number of item per row\n  const listTotalHeight = Math.ceil(listLength / itemsPerRow) * itemHeight; // the total height of list\n  const visibleRowsCount = Math.ceil(height / itemHeight) + 1; // visible screen can contain how many rows\n  const startIndex = Math.floor((scrollTop - eleDistanceToTop) / itemHeight); // the start position (row) index falls within visible screen\n  const endIndex = startIndex + visibleRowsCount; // the end position (row) index falls within visible screen\n  const startOffset = (scrollTop <= eleDistanceToTop) ? 0 : (scrollTop - eleDistanceToTop) - ((scrollTop - eleDistanceToTop) % itemHeight);// use for list ul transformation\n  const dataItemStart = startIndex <= 0 ? 0 : (startIndex * itemsPerRow); // data item start index\n  const dataItemEnd = (endIndex * itemsPerRow); // data item end index\n  const visibleItems = list.slice(dataItemStart, dataItemEnd); // slice all data to visible area data items based on data item start & end index\n  // console.log(startIndex)nu\n  // console.log(endIndex)\n  // console.log(visibleItems)\n  //console.log(scrollTop)\n  //console.log(eleDistanceToTop)\n  //console.log(startOffset)\n  // prepare blank item to prevent flex display gap\n  let iElement = [];\n  const iElementLength =  Math.floor(elementWidth / itemWidth);\n  for(let i=0; i<iElementLength; i++) {\n    iElement.push(<i key={i} style={{width: itemWidth, height: 0}}></i>)\n  }\n\n  // prepare list css animation/translate3d\n  const getTransform = () => {\n    return `translate3d(0,${startOffset}px,0)`\n  }\n\n  // prepare list wrapper div style\n  const listWrapperStyle = {\n    'position': 'relative',\n    'height': listTotalHeight ? listTotalHeight : 0\n  }\n\n  // prepare list ul style\n  const listStyle = {\n    'listStyle': 'none',\n    'display': 'flex',\n    'flexDirection': 'row',\n    'justifyContent': 'space-between',\n    'flexWrap': 'wrap',\n    'padding': 0,\n    'marginBottom': 0,\n    'backgroundColor': 'rgba(255, 255, 255, 0)',\n    'transform': getTransform()\n  }\n\n  return (\n    <>\n      <div className=\"list-wrapper\" ref={listWrapperRef} style={listWrapperStyle}>\n        <ul className=\"makeup-list\" ref={listEleRef} style={listStyle}>\n          {props.children(visibleItems)}\n          {/* iElement is for filling the gap of flex */}\n          {iElement}\n        </ul>\n      </div>\n    </>\n  )\n}\n\nVerticalScrollVirtualList.propTypes = {\n  list: PropTypes.array.isRequired,\n  itemDimensions: PropTypes.object.isRequired,\n  children: PropTypes.func.isRequired\n}\n\nexport default VerticalScrollVirtualList;","import { useEffect, useState, useCallback } from 'react'\n\nexport default function useFetchHook(apiCallback) {\n  const [data, setData] = useState([]);\n  const [onError, setOnError] = useState(false);\n\n  const fetchTask = useCallback(async () => {\n    setOnError(false);\n    try {\n      const resp = await apiCallback();\n      setData(resp.data);\n    } catch (err) {\n      setOnError(true);\n      console.log(err)\n    }\n  }, [apiCallback, setData])\n\n  useEffect(() => {\n    fetchTask();\n  }, [fetchTask])\n\n  return {\n    data,\n    onError\n  }\n}","// 1. import actionTypes\nimport {\n  ADD_ALL_TASKS,\n  ADD_ONE_TASK,\n  DEL_ONE_TASK,\n  CHANGE_ONE_FINISHED,\n  IS_ALL_FINISHED,\n  DEL_FINISHED_TASKS,\n  MOVE_TASK,\n} from \"./taskActionTypes\";\n\n//1.1 import language instance\n//import lang from '../languages/lang';\n\n// 2. reducer: create default state\nconst defaultState = {\n  tasks: []\n}\n\n// 3. reducer: core methods based on action type\nexport default function taskReducer(state=defaultState, action){\n  // 1.0 get all existing tasks from database\n  if(action.type === ADD_ALL_TASKS) {\n    // 1.1 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    // 1.2 passing actions data to the newState\n    newState.tasks = action.tasks;\n    return newState;\n  }\n  //2.add a new task\n  if(action.type === ADD_ONE_TASK) {\n    //2.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const tasks = newState.tasks;\n    const task = action.task\n    //2.1 push actions task data to the newState\n    tasks.push(task);\n    //2.2 set new state\n    return newState;\n  }\n  //3.delete one task\n  if(action.type === DEL_ONE_TASK) {\n    //3.0. clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const taskId = action.taskId;\n    const tasks = newState.tasks;\n    //3.1. use map loop, match task ID and return a new tempTasks array\n    tasks.forEach((task, index) => {\n      if(task.id === taskId) {\n        tasks.splice(index, 1);\n      }\n    })\n    //3.2. Assign new tasks array to newState\n    newState.tasks = tasks;\n    return newState;\n  }\n  //4.change one task's finished status\n  if(action.type === CHANGE_ONE_FINISHED) {\n    //4.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const tasks = newState.tasks;\n    const taskId = action.taskId;\n    const finishedStatus = action.finishedStatus;\n\n    //4.1. use loop match the task item and change it's finished status\n    tasks.forEach((task) => {\n      if(task.id === taskId) {\n        task.finished = finishedStatus;\n      }\n    })\n\n    //4.2. Assign new tempTasks array to new state\n    newState.tasks = tasks;\n    return newState;\n  }\n  //5.change all tasks finished status (select all and de-select all)\n  if(action.type === IS_ALL_FINISHED) {\n    //5.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const tasks = newState.tasks;\n    const flag = action.flag;\n\n    //5.1 According to flag, select/de-select all tasks\n    tasks.forEach((task) => {\n      if(flag){\n        task.finished = true;\n      } else {\n        task.finished = false;\n      }\n    })\n\n    //5.2 Assign new tempTasks array to new state\n    newState.tasks = tasks;\n    return newState;\n  }\n  //6.clean all finished tasks\n  if(action.type === DEL_FINISHED_TASKS) {\n    //6.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const tasks = newState.tasks;\n    const tempTasks = [];\n\n    //6.1 push all unfinished task to new Array\n    tasks.forEach((task) => {\n      if(!task.finished){\n        tempTasks.push(task);\n      }\n    })\n\n    //6.2 set State and re-rendering\n    newState.tasks = tempTasks;\n    return newState;\n  }\n  //7. move task item up and down\n  if(action.type === MOVE_TASK) {\n    //7.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const tasks = newState.tasks;\n    const index = action.index;\n    const diff = action.diff;\n\n    //7.1 handle item sorting\n    const item = tasks[index];\n    tasks.splice(index, 1);\n    tasks.splice(index + diff, 0, item);\n\n    //7.2 set state\n    newState.tasks = tasks;\n    return newState;\n  }\n  return state;\n}\n\n\n","const APP_LANG = 'APP_LANG'\n\nclass Lang {\n  constructor() {\n    //init lang\n    this.userLanguage = '';\n\n    //in constructor, we need to get existing APP_LANG from localStorage\n    this.userLanguage = localStorage.getItem(APP_LANG);\n\n    // if there is no APP_LANG in localStorage, we set lang based on browser preference.\n    if(!this.userLanguage){\n      const userLang = window.navigator.language.toLowerCase() || 'en'; //get browser language preference\n      if(userLang === 'zh-cn') {\n        this.userLanguage = 'zh-cn'\n        localStorage.setItem(APP_LANG, this.userLanguage);\n      } else {\n        this.userLanguage = 'en'\n        localStorage.setItem(APP_LANG, this.userLanguage);\n      }\n    }\n  }\n\n  static getInstance(){\n    if(!this._instance){\n      this._instance = new Lang();\n    }\n    return this._instance\n  }\n\n  // set localStorage APP_LANG\n  setLang(language) {\n    this.userLanguage = language.toLowerCase();\n    localStorage.setItem(APP_LANG, this.userLanguage);\n  }\n\n  // when call this function, will dynamically import matching language JSON file.\n  languageLoader() {\n    switch (this.userLanguage.toLowerCase()) {\n      case 'zh-cn':\n        return import('../languages/zhcn.json');\n      case 'en-us':\n        return import('../languages/enus.json');\n      default:\n        return import('../languages/enus.json');\n    }\n  }\n}\n\n\n\nexport default Lang.getInstance();\n","// 1. import actionTypes\nimport {\n  CHANGE_LOCALE,\n  OPEN_LOADING,\n  CLOSE_LOADING\n} from \"./globalActionTypes\";\n\n//1.1 import language instance\nimport lang from '../languages/lang';\n\n// 2. reducer: create default state\nconst defaultState = {\n  locale: lang.userLanguage,\n  loading: false\n}\n\n// 3. reducer: core methods based on action type\nexport default function globalReducer(state=defaultState, action){\n  //1. Change locale\n  if(action.type === CHANGE_LOCALE) {\n    // 1.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const localeValue = action.localeValue;\n\n    // 1.1 handle change locale\n    newState.locale = localeValue;\n\n    // 1.2 set state\n    return newState\n  }\n  //2. global loading open;\n  if(action.type === OPEN_LOADING) {\n    // 2.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const loading = action.loading;\n\n    // 2.1 handle change loading status to true\n    newState.loading = loading;\n\n    // 2.2 set state\n    return newState\n  }\n  //3. global loading close;\n  if(action.type === CLOSE_LOADING) {\n    // 3.0 clone current state\n    const newState = JSON.parse(JSON.stringify(state));\n    const loading = action.loading;\n\n    // 3.1 handle change loading status to false\n    newState.loading = loading;\n\n    // 3.2 set state\n    return newState\n  }\n  return state;\n}\n\n\n","import { createStore, combineReducers }  from 'redux';\nimport taskReducer from '../components/todo/store/taskReducers';\nimport globalReducer from '../store/globalReducers';\n\nconst rootReducer = combineReducers({\n    taskState: taskReducer,\n    globalState: globalReducer\n})\n\nconst store = createStore(rootReducer);\n\nexport default store;","// import axios xmlhttprequest package;\nimport axios from 'axios';\n\n// import actions to handle global loading effects\nimport {openLoading, closeLoading} from \"../store/globalActionCreators\";\n\n// import store for dispatching above actions\nimport store from \"../store/index\"\n\n// func for calculator current api request count which decides open/close loading effects\nlet requestCount = 0;\n\nfunction showGlobalLoading() {\n  if(requestCount === 0) { //if there is no previous requests, show loading\n    store.dispatch(openLoading())\n  }\n  requestCount ++; //increment 1 request count\n}\n\nfunction hideGlobalLoading() {\n  if(requestCount <= 1) { // if this is the last request, we hide loading;\n    store.dispatch(closeLoading());\n  }\n  requestCount --; // we decrease 1 request count\n}\n\n// the cors-anywhere is prefix is for compatibale with github pages https to send request to http api;\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json';\n// const BASE_URL = 'http://makeup-api.herokuapp.com/api/v1/products.json';\n\nconst axiosIns = axios.create({\n  baseURL: BASE_URL\n})\n\n// Add a request interceptor\naxiosIns.interceptors.request.use(config => {\n  // set store.loading to true, start global page loading effects.\n  showGlobalLoading();\n  return config;\n}, error => {\n  // Do something with request error\n  hideGlobalLoading();\n  return Promise.reject(error);\n})\n\n// Add a response interceptor\naxiosIns.interceptors.response.use(response => {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  hideGlobalLoading();\n  // Do something with response data\n  return response;\n}, error => {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  hideGlobalLoading();\n  // Do something with response error\n  return Promise.reject(error);\n})\n\nexport default axiosIns;\n\n// class Http {\n//   constructor() {\n//     this.http = axios.create({\n//       baseURL: BASE_URL\n//     })\n//\n//     // Add a request interceptor\n//     this.http.interceptors.request.use(config => {\n//       // set store.loading to true, start global page loading effects.\n//       showGlobalLoading();\n//       return config;\n//     }, error => {\n//       // Do something with request error\n//       hideGlobalLoading();\n//       return Promise.reject(error);\n//     })\n//\n//     // Add a response interceptor\n//     this.http.interceptors.response.use(response => {\n//       // Any status code that lie within the range of 2xx cause this function to trigger\n//       hideGlobalLoading();\n//       // Do something with response data\n//       return response;\n//     }, error => {\n//       // Any status codes that falls outside the range of 2xx cause this function to trigger\n//       hideGlobalLoading();\n//       // Do something with response error\n//       return Promise.reject(error);\n//     })\n//   }\n//\n//   getLipSticks() {\n//     const url = '?product_type=lipstick';\n//     return axiosIns.get(url);\n//   }\n//\n//   getNailPolish() {\n//     const url = '?product_type=nail_polish';\n//     return this.http.get(url);\n//   }\n//\n//   getMascara() {\n//     const url = '?product_type=mascara';\n//     return this.http.get(url);\n//   }\n//\n//   getLipLiner() {\n//     const url = '?product_type=lip_liner';\n//     return this.http.get(url);\n//   }\n//\n//   getFoundation() {\n//     const url = '?product_type=foundation';\n//     return this.http.get(url);\n//   }\n//\n//   getProductDetail(id) {\n//     const url = `/${id}`\n//     return this.http.get(url);\n//   }\n  // getMovieDetails(movieId) {\n  //   const url = '/title/get-details?tconst=' + movieId;\n  //   return this.http.get(url);\n  // }\n// }\n//\n// export default new Http();\n","import axiosIns from \"../../auth/http\";\n\nexport const fetchLipStickList = () => {\n  return axiosIns.get('?product_type=lipstick')\n}\n\nexport const fetchNailPolish = () => {\n    const url = '?product_type=nail_polish';\n    return axiosIns.get(url);\n  }\n\nexport const fetchMascara = () => {\n    const url = '?product_type=mascara';\n    return axiosIns.get(url);\n  }\n\nexport const fetchLipLiner = () => {\n    const url = '?product_type=lip_liner';\n    return axiosIns.get(url);\n  }\n\nexport const fetchFoundation = () => {\n    const url = '?product_type=foundation';\n    return axiosIns.get(url);\n  }\n\nexport const fetchEyeshadow = () => {\n  const url = '?product_type=eyeshadow';\n  return axiosIns.get(url);\n}\n\nexport const fetchEyeliner = () => {\n  const url = '?product_type=eyeliner';\n  return axiosIns.get(url);\n}\n\nexport const fetchEyebrow = () => {\n  const url = '?product_type=eyebrow';\n  return axiosIns.get(url);\n}\n\nexport const fetchBronzer = () => {\n  const url = '?product_type=bronzer';\n  return axiosIns.get(url);\n}\n\nexport const fetchBlush = () => {\n  const url = '?product_type=blush';\n  return axiosIns.get(url);\n}","// import react\nimport React from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\n\nimport { fetchLipStickList } from './service'\n\n\nfunction LipsticksList(props) {\n\n  // fetch lipsticks data, and set state\n  let authNeeded = <div>\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\n    <iframe\n      title=\"Please give temp auth to request data.\"\n      width=\"100%\"\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\n    />\n  </div>;\n\n  // fetch data\n  const { data, onError } = useFetchHook(fetchLipStickList);\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map((item) => {\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\n      })\n    }\n    return null;\n  }\n  //handle item click\n  function routeTo(item) {\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Lipsticks </h3>\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n      { onError ? authNeeded : \"\" }\n    </>\n  )\n}\n\nexport default LipsticksList;","// import react\nimport React from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\nimport { fetchNailPolish } from \"./service\";\n\nfunction NailPolishList(props) {\n  // fetch lipsticks data, and set state\n  let authNeeded = <div>\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\n    <iframe\n      title=\"Please give temp auth to request data.\"\n      width=\"100%\"\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\n    />\n  </div>;\n\n  // fetch data\n  const { data, onError } = useFetchHook(fetchNailPolish);\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map((item) => {\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\n      })\n    }\n    return null;\n  }\n  //handle item click\n  function routeTo(item) {\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Nail Polish </h3>\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n      { onError ? authNeeded : \"\" }\n    </>\n  )\n}\n\nexport default NailPolishList;","// import react\nimport React from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\nimport {fetchMascara} from \"./service\";\n\nfunction MascaraList(props) {\n  // fetch lipsticks data, and set state\n  let authNeeded = <div>\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\n    <iframe\n      title=\"Please give temp auth to request data.\"\n      width=\"100%\"\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\n    />\n  </div>;\n\n  // fetch data\n  const { data, onError } = useFetchHook(fetchMascara);\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map((item) => {\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\n      })\n    }\n    return null;\n  }\n  //handle item click\n  function routeTo(item) {\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Mascara </h3>\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n      { onError ? authNeeded : \"\" }\n    </>\n  )\n}\n\nexport default MascaraList;","// import react\nimport React from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\nimport {fetchLipLiner} from \"./service\";\n\nfunction LipLinerList(props) {\n  // fetch lipsticks data, and set state\n  let authNeeded = <div>\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\n    <iframe\n      title=\"Please give temp auth to request data.\"\n      width=\"100%\"\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\n    />\n  </div>;\n\n  // fetch data\n  const { data, onError } = useFetchHook(fetchLipLiner);\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map((item) => {\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\n      })\n    }\n    return null;\n  }\n  //handle item click\n  function routeTo(item) {\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Lip Liner </h3>\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n      { onError ? authNeeded : \"\" }\n    </>\n  )\n}\n\nexport default LipLinerList;","// import react\nimport React from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\nimport {fetchFoundation} from \"./service\";\n\nfunction FoundationList(props) {\n  // fetch lipsticks data, and set state\n  let authNeeded = <div>\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\n    <iframe\n      title=\"Please give temp auth to request data.\"\n      width=\"100%\"\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\n    />\n  </div>;\n\n  // fetch data\n  const { data, onError } = useFetchHook(fetchFoundation);\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map((item) => {\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\n      })\n    }\n    return null;\n  }\n  //handle item click\n  function routeTo(item) {\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Foundation </h3>\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n      { onError ? authNeeded : \"\" }\n    </>\n  )\n}\n\nexport default FoundationList;","// import react\nimport React from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\nimport { fetchEyeshadow } from \"./service\";\n\nfunction EyeshadowList(props) {\n  // fetch lipsticks data, and set state\n  let authNeeded = <div>\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\n    <iframe\n      title=\"Please give temp auth to request data.\"\n      width=\"100%\"\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\n    />\n  </div>;\n\n  // fetch data\n  const { data, onError } = useFetchHook(fetchEyeshadow);\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map((item) => {\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\n      })\n    }\n    return null;\n  }\n  //handle item click\n  function routeTo(item) {\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Eyeshadow </h3>\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n      { onError ? authNeeded : \"\" }\n    </>\n  )\n}\n\nexport default EyeshadowList;","// import react\nimport React from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\nimport { fetchEyeliner } from \"./service\";\n\nfunction EyelinerList(props) {\n  // fetch lipsticks data, and set state\n  let authNeeded = <div>\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\n    <iframe\n      title=\"Please give temp auth to request data.\"\n      width=\"100%\"\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\n    />\n  </div>;\n\n  // fetch data\n  const { data, onError } = useFetchHook(fetchEyeliner);\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map((item) => {\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\n      })\n    }\n    return null;\n  }\n  //handle item click\n  function routeTo(item) {\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Eyeliner </h3>\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n      { onError ? authNeeded : \"\" }\n    </>\n  )\n}\n\nexport default EyelinerList;","// import react\nimport React from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\nimport { fetchEyebrow } from \"./service\";\n\nfunction EyebrowList(props) {\n  // fetch lipsticks data, and set state\n  let authNeeded = <div>\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\n    <iframe\n      title=\"Please give temp auth to request data.\"\n      width=\"100%\"\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\n    />\n  </div>;\n\n  // fetch data\n  const { data, onError } = useFetchHook(fetchEyebrow);\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map((item) => {\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\n      })\n    }\n    return null;\n  }\n  //handle item click\n  function routeTo(item) {\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Eyeliner </h3>\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n      { onError ? authNeeded : \"\" }\n    </>\n  )\n}\n\nexport default EyebrowList;","// import react\nimport React from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\nimport { fetchBronzer } from \"./service\";\n\nfunction BronzerList(props) {\n  // fetch lipsticks data, and set state\n  let authNeeded = <div>\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\n    <iframe\n      title=\"Please give temp auth to request data.\"\n      width=\"100%\"\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\n    />\n  </div>;\n\n  // fetch data\n  const { data, onError } = useFetchHook(fetchBronzer);\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map((item) => {\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\n      })\n    }\n    return null;\n  }\n  //handle item click\n  function routeTo(item) {\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Eyeliner </h3>\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n      { onError ? authNeeded : \"\" }\n    </>\n  )\n}\n\nexport default BronzerList;","// import react\nimport React from 'react';\n\n// import antd icon\nimport { HeartOutlined } from \"@ant-design/icons\";\n\n// import components\nimport MakeupItem from \"./MakeupItem\";\nimport VerticalScrollVirtualList from '../utils/VerticalScrollVirtualList';\nimport useFetchHook from \"../../custimizedHook/useFetchHook\";\nimport { fetchBlush } from \"./service\";\n\nfunction BlushList(props) {\n  // fetch lipsticks data, and set state\n  let authNeeded = <div>\n    <span>Sending request to a http API is not allowed from https, so we used a little work around just for demonstration. Please grant a temp access, then <strong>refresh</strong> the page. Data will be fetched.</span>\n    <iframe\n      title=\"Please give temp auth to request data.\"\n      width=\"100%\"\n      src=\"https://cors-anywhere.herokuapp.com/http://makeup-api.herokuapp.com/api/v1/products.json\"\n    />\n  </div>;\n\n  // fetch data\n  const { data, onError } = useFetchHook(fetchBlush);\n\n  // prepare func to generate list items. visibleItems are passed in by the parent component VerticalScrollVirtualList\n  const renderChildren = (visibleItems) => {\n    if (visibleItems) {\n      return visibleItems.map((item) => {\n        return <MakeupItem key={item.id} makeupItem={item} handleClick={()=>{routeTo(item)}}/>\n      })\n    }\n    return null;\n  }\n  //handle item click\n  function routeTo(item) {\n    props.history.push({pathname: `/detail/makeups/${item.id}`, state: {data: item}})\n  }\n\n  return (\n    <>\n      <h3><HeartOutlined /> Blush </h3>\n      <VerticalScrollVirtualList list={data} itemDimensions={{width: 206, height: 361}}>\n        {/* VerticalScrollVirtualList takes a function as children.\n        function should take visibleItems as argument and loop the argument to return a item list*/}\n        { renderChildren }\n      </VerticalScrollVirtualList>\n      { onError ? authNeeded : \"\" }\n    </>\n  )\n}\n\nexport default BlushList;","import React from 'react';\n\n// import from antd\nimport { Layout, Menu } from \"antd\";\n\n// import react router\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\n// import react-redux;\nimport {connect} from \"react-redux\";\n\n// import components\nimport MakeupNav from '../components/makeup/MakeupNav';\nimport LazyImage from '../components/image/LazyImage';\nimport LipsticksList from '../components/makeup/LipsticksList';\nimport NailPolishList from \"../components/makeup/NailPolishList\";\nimport MascaraList from \"../components/makeup/MascaraList\";\nimport LipLinerList from \"../components/makeup/LipLinerList\";\nimport FoundationList from \"../components/makeup/FoundationList\";\nimport EyeshadowList from \"../components/makeup/EyeshadowList\";\nimport EyelinerList from \"../components/makeup/EyelinerList\";\nimport EyebrowList from \"../components/makeup/EyebrowList\";\nimport BronzerList from \"../components/makeup/BronzerList\";\nimport BlushList from \"../components/makeup/BlushList\";\nimport useLanguagePageText from \"../custimizedHook/LanguageHook\";\n\n\n// get content components from Layout (Antd component)\nconst { Content } = Layout;\n\n\nfunction Makeup(props) {\n  let { path, url } = useRouteMatch();\n  const { locale } = props;\n  //get lang data, passing locale to dynamically load lang data based on Redux locale state.\n  const pageText = useLanguagePageText(locale);\n\n  // render\n  return (\n    <div>\n      <h1>{pageText.makeupsTitle ? pageText.makeupsTitle : \"\"}</h1>\n      <h5>\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[0] : \"\"} <br />\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[1] : \"\"} <br />\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[2] : \"\"} <br />\n        {pageText.makeupsSubTitle ? pageText.makeupsSubTitle[3] : \"\"}\n      </h5>\n      <div className=\"image-grid\">\n        <div className=\"photo\">\n          <LazyImage\n            src=\"http://makeup-api.herokuapp.com/assets/brushes-6d2ab84631ecd47ced4fa07c47eb37521eb61c5a525965dafaf308f21338aa44.png\"\n            alt={[\"Brushes\"]}\n          />\n        </div>\n        <div className=\"photo photo-lips\">\n          <LazyImage\n            src=\"http://makeup-api.herokuapp.com/assets/lips-c35ec4a3350ec779c6bf6a785981ad9ef2e21bd9fe26a2be1c766d56edb2e11f.png\"\n            alt={[\"Lips\"]}\n          />\n        </div>\n        <div className=\"photo\">\n          <LazyImage\n            src=\"http://makeup-api.herokuapp.com/assets/nail-polish-4c7ee1a5f7a5cbaff9757c3bcfa4f6e89d7a6f2ffc49d267e04e010ba94cfd7c.png\"\n            alt={[\"Nail\", \"polish\"]}\n          />\n        </div>\n        <div className=\"photo\">\n          <LazyImage\n            src=\"http://makeup-api.herokuapp.com/assets/single-pot-4ce398e7d8c527ef248ace7a783cc52fd583375a25a7dcdb7b16f7a0958ccb17.png\"\n            alt={[\"Single\", \"pot\"]}\n          />\n        </div>\n        <div className=\"photo\">\n          <LazyImage\n            src=\"http://makeup-api.herokuapp.com/assets/eyeshadow-18fa4bed267bec6a67506150d9574259d0dcc67700e69de4ba720d9afe8204a2.png\"\n            alt={[\"Eyeshadow\"]}\n          />\n        </div>\n      </div>\n      <Layout className=\"makeup-layout-background\" style={{ padding: \"24px 0\", maxWidth: \"1200px\" }}>\n        {/* makeup page nav side bar component*/}\n        <MakeupNav />\n        {/* makeup page content component*/}\n        <Content style={{ padding: '0 24px', minHeight: 280 }}>\n          {/*Route View/output */}\n          <Switch>\n            <Route exact path={path} component={BlushList} />\n            <Route path={`${path}/blush`} component={BlushList} />\n            <Route path={`${path}/bronzer`} component={BronzerList} />\n            <Route path={`${path}/eyebrow`} component={EyebrowList} />\n            <Route path={`${path}/eyeliner`} component={EyelinerList} />\n            <Route path={`${path}/eyeshadow`} component={EyeshadowList} />\n            <Route path={`${path}/foundation`} component={FoundationList} />\n            <Route path={`${path}/lipliner`} component={LipLinerList} />\n            <Route path={`${path}/lipsticks`} component={LipsticksList} />\n            <Route path={`${path}/mascara`} component={MascaraList} />\n            <Route path={`${path}/nailpolish`} component={NailPolishList} />\n          </Switch>\n        </Content>\n      </Layout>\n    </div>\n  )\n}\n\n// get redux state and passing it to component props\nconst mapStateToProps = (state) => {\n  return {\n    locale: state.globalState.locale\n  }\n}\n\n// export List component\nexport default connect(mapStateToProps, null)(Makeup);","import React from 'react';\nimport PropTypes from 'prop-types'\n\nfunction ButtonDark(props) {\n  // get props\n  const { showBtn, value, onClickFunction, btnClass, fullWidth }= props;\n\n  // render virtual element\n  return (\n    <>\n      <input\n        type=\"button\"\n        className={\"btn \" + (btnClass ? btnClass : \"\")}\n        value={value}\n        style={{display: showBtn ? \"block\" : \"none\", backgroundColor: \"#404040\", color: \"#ffffff\", width: fullWidth ? \"100%\" : \"auto\"}}\n        onClick={onClickFunction}\n      />\n    </>\n  )\n}\n\n// specify Button component prop types\nButtonDark.propTypes = {\n  showBtn: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n  btnClass: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  onClickFunction: PropTypes.func.isRequired\n}\n\nButtonDark.defaultProps = {\n  showBtn: true,\n  fullWidth: false\n}\n\nexport default ButtonDark;","import React, {useEffect} from 'react';\n\n// import components\nimport LazyImage from \"../components/image/LazyImage\";\nimport ButtonDark from \"../components/button/ButtonDark\";\n\nfunction MakeupsDetail(props) {\n  let makeupData = null;\n  if (props.location.state) {\n    makeupData = props.location.state.data;\n    localStorage.setItem(makeupData.id, JSON.stringify(makeupData))\n  }\n\n  // if there is no data passing in, need to using item id to request data from server\n  // however, the public api doesn't provide the id requesting. we store and get data from local storage.\n  if(!makeupData && props.location.pathname) {\n    const reg = /\\/(\\d+)$/;\n    const id = props.location.pathname.match(reg)[1];\n    makeupData = JSON.parse(localStorage.getItem(id));\n  }\n\n  //prepare makeup color circles element\n  const makeupColorElement =\n    <div className=\"makeup-colors\">\n      {makeupData.product_colors.map((color, index) => {\n        return <span key={color.colour_name + index}>\n          <span className=\"makeup-color\" style={{backgroundColor: color.hex_value}}></span>\n          <span className=\"color-name\">{color.colour_name}</span>\n        </span>\n      })}\n    </div>\n\n  //prepare makeup tag element\n  const tagElement = makeupData.tag_list.map(tag => {\n    return <span className=\"makeup-tag makeup-light-text\" key={tag}>{tag}</span>\n  })\n\n  // handle Add to Cart btn\n  const handleAddToCartBtn = () => {\n    console.log(\"clicked\")\n  }\n\n  // handle Add to Cart btn\n  const handlePurchaseBtn = () => {\n    console.log(\"purchase clicked\")\n  }\n\n  // estimated delivery date\n  const date = new Date();\n  console.log(date)\n\n  // render\n  return (\n    <>\n      {\n        !!makeupData &&\n        <div className=\"main-wrapper\">\n          <div className=\"detail-wrapper\">\n            <div className=\"leftWrapper\">\n              <LazyImage src={makeupData.image_link} className=\"detail-image\" alt={[makeupData.brand, makeupData.category]}/>\n              <div className=\"product-info\">\n                <h1>{ makeupData.name }</h1>\n                <p><strong>Brand: </strong>{makeupData.brand}</p>\n                <p><strong>Rating: </strong>{makeupData.rating ? makeupData.rating : \"No rating available\"}</p>\n                <div className=\"divider\"></div>\n                <p><strong>Colors: </strong></p>\n                { makeupColorElement }\n                <div className=\"divider\"></div>\n                { tagElement }\n                <div className=\"divider\"></div>\n                <p><strong>Price: </strong>${makeupData.price}</p>\n              </div>\n            </div>\n            <div className=\"rightWrapper\">\n              <select style={{width: \"100%\", padding: \"5px\", borderRadius: \"5px\"}} defaultValue=\"0\">\n                <option value=\"0\" disabled hidden>Qty</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n              </select>\n              <ButtonDark value=\"Add to Cart\" fullWidth={true} onClickFunction={()=>handleAddToCartBtn()}/>\n              <ButtonDark value=\"Purchase\" fullWidth={true} onClickFunction={()=>handlePurchaseBtn()}/>\n              <p>Estimated Delivery by</p>\n            </div>\n          </div>\n          <div className=\"content\">\n            <p><strong>Description: </strong>{makeupData.description}</p>\n          </div>\n        </div>\n      }\n    </>\n  )\n}\n\n\n// export List component\nexport default MakeupsDetail;","import React from 'react';\nimport { Layout } from 'antd'\nimport {Redirect, Route, Switch} from 'react-router-dom';\n\n\n// import Home from '../pages/Home';\nimport Dashboard from '../pages/Dashboard';\nimport UserCenter from '../pages/UserCenter';\nimport Todos from '../pages/Todos';\nimport Register from '../pages/Register';\nimport Makeups from '../pages/Makeups';\nimport MakeupsDetail from \"../pages/MakeupsDetail\";\n\nfunction AppContent() {\n  const { Content } = Layout;\n  return (\n    <>\n      <Content className=\"app-content\">\n        {/*Route View/output */}\n        <Switch>\n          <Route exact path=\"/\" render={() => {\n            return <Redirect to={\"/makeups\"} />\n          }} />\n          <Route path=\"/makeups\" component={Makeups} />\n          <Route path=\"/detail/makeups/\" component={MakeupsDetail} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/usercenter\" component={UserCenter} />\n          <Route exact path=\"/tasks\" component={Todos} />\n          <Route exact path=\"/register\" component={Register} />\n        </Switch>\n      </Content>\n    </>\n  )\n}\nexport default AppContent;","//import react\nimport React, {useEffect} from 'react';\n\n//import react-router-dom\nimport { HashRouter as Router } from \"react-router-dom\"\n\n// import from react redux\nimport {connect} from \"react-redux\";\n\n//import antd\nimport { Layout, ConfigProvider, Spin } from 'antd';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport enUS from 'antd/lib/locale/en_US';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport { SmileOutlined } from '@ant-design/icons';\n\n//import page components\nimport AppFooter from './components/AppFooter';\nimport AppHeader from './components/AppHeader';\nimport AppContent from \"./components/AppContent\";\n\nmoment.locale('cn');\n\n// app file\nfunction App(props) {\n  const { locale, loading } = props;\n  console.log(\"Thank you for checking my code! Please contact me via email 'seanli9018@gmail.com' if you are hiring passionate web developer!!!\")\n\n  const antIcon = <SmileOutlined style={{ fontSize: 30 }} spin />;\n\n  // if loading is true, we prevent scrolling;\n  useEffect(() => {\n    if(loading) {\n      document.body.style.overflowY = \"hidden\"\n    } else {\n      document.body.style.overflowY = \"auto\"\n    }\n  }, [loading])\n\n  return (\n    <Spin spinning={props.loading} wrapperClassName=\"global-loading\" indicator={antIcon} tip=\"Working hard to get things you want!\" size=\"large\">\n      {/*ConfigProvider is for antdesign UI to pass language objects globally.*/}\n      <ConfigProvider locale={locale==='zh-cn' ? zhCN : enUS}>\n        <Router>\n          <Layout>\n            <AppHeader />\n            <AppContent />\n            <AppFooter />\n          </Layout>\n        </Router>\n      </ConfigProvider>\n    </Spin>\n  )\n}\n\nconst mapStateToProps = (state)=>{\n  return {\n    locale: state.globalState.locale,\n    loading: state.globalState.loading\n  }\n}\n\n// export List component\nexport default connect(mapStateToProps, null)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { notification } from 'antd';\n\nclass AppNotification {\n    constructor(){\n        this.config = {}\n    }\n\n    _configNotice(message, description, duration){\n        this.config.message = message;\n        this.config.description = description;\n        this.config.duration = duration;\n    }\n\n    success(message=\"Notice\", description=\"Successfully operated\", duration=3) {\n        this._configNotice(message, description, duration);\n        notification.success(this.config)\n    }\n\n    info(message=\"Notice\", description=\"Infomation\", duration=3) {\n        this._configNotice(message, description, duration);\n        notification.info(this.config)\n    }\n\n    warning(message=\"Warning\", description=\"Warning message\", duration=5) {\n        this._configNotice(message, description, duration);\n        notification.warning(this.config)\n    }\n\n    error(message=\"Error\", description=\"Operation failed\", duration=5) {\n        this._configNotice(message, description, duration);\n        notification.error(this.config)\n    }\n}\n\nexport default new AppNotification();","import { Modal } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\n\nconst { confirm } = Modal;\n\nclass AppModal {\n    constructor(){\n        this.config = {\n            icon: <ExclamationCircleOutlined />\n        }\n    }\n\n    _configModal(onOk, onCancel, title, content){\n        this.config.onOk = onOk;\n        this.config.onCancel = onCancel;\n        this.config.title = title;\n        this.config.content = content;\n    }\n\n    confirm(onOK, onCancel, title=\"Do you want to delete this item?\", content=\"Click Yes or Cancel\") {\n        this._configModal(onOK, onCancel, title, content, );\n        confirm(this.config);\n    }\n}\n\nexport default new AppModal();","const EMAIL = 'EMAIL';\n\nclass Auth{\n  constructor() {\n    // initiate email\n    this.email = ''\n\n    //get email from local storage.\n    this.email = localStorage.getItem(EMAIL);\n  }\n\n  // achieve single instance\n  static getInstance(){\n    if(!this._instance){\n      this._instance = new Auth();\n    }\n    return this._instance;\n  }\n\n  // set auth email\n  setUserAuth(email){\n    this.email = email;\n    // then set new user auth email\n    localStorage.setItem(EMAIL, email);\n  }\n\n  // log out clear auth email\n  clearUserAuth(){\n    // clear this.email\n    this.email = '';\n    // clear localStorage\n    localStorage.removeItem(EMAIL);\n  }\n\n  // check if a user is logged in and authenticated\n  get is_authenticated() {\n    if(this.email) {\n      return true;\n    }else {\n      return false;\n    }\n  }\n}\n\nexport default Auth.getInstance();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import Redux react-redux;\nimport { Provider } from 'react-redux';\nimport store from '../src/store/index';\n\nimport notice from '../src/utils/notification';\nimport modal from '../src/utils/modal';\nimport lang from '../src/languages/lang';\nimport auth from '../src/auth/auth';\n\n// bind notice class instance to React globally\nReact.$notice = notice;\n//bind modal class instance to React globally\nReact.$modal = modal;\n// bind lang class to React globally\nReact.$lang = lang;\n// bind frontend auth\nReact.$auth = auth;\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}